STATIC VAR.	swData           of SYSTEM          0       1       
STATIC VAR.	swData2          of SYSTEM          1       1       
STATIC VAR.	swData3          of SYSTEM          2       1       
STATIC VAR.	swData4          of SYSTEM          3       1       
STATIC VAR.	swWidth          of SYSTEM          4       1       
STATIC VAR.	swHeight         of SYSTEM          5       1       
STATIC VAR.	swFrame          of SYSTEM          6       1       
STATIC VAR.	swFrame2         of SYSTEM          7       1       
STATIC VAR.	swFrame3         of SYSTEM          8       1       
STATIC VAR.	swFrame6         of SYSTEM          9       1       
STATIC VAR.	swVMver          of SYSTEM          10      3       0       
STATIC VAR.	swModel          of SYSTEM          11      8       0       
STATIC VAR.	swSmsRcvBuf      of SYSTEM          12      41      0       
STATIC VAR.	swRsRcvBuf       of SYSTEM          13      128     0       
STATIC VAR.	swRcvBuf         of SYSTEM          14      256     0       
STATIC VAR.	swReserved1      of SYSTEM          15      1       
STATIC VAR.	swReserved2      of SYSTEM          16      1       
STATIC VAR.	swReserved3      of SYSTEM          17      1       
STATIC VAR.	swReserved4      of SYSTEM          18      1       
STATIC VAR.	swSbuf           of SYSTEM          19      1       
STATIC VAR.	talk_sup         of SYSTEM          20      34      1       
STATIC VAR.	talk_name        of SYSTEM          21      35      1       
STATIC VAR.	talk_ok          of SYSTEM          22      36      1       
STATIC VAR.	talk_main        of SYSTEM          23      37      1       
STATIC VAR.	talk_sub         of SYSTEM          24      38      1       
STATIC VAR.	talk_sel         of SYSTEM          25      39      1       
STATIC VAR.	menu             of SYSTEM          26      40      1       
STATIC VAR.	bg               of SYSTEM          27      1       
 41         
STATIC VAR.	MONTH            of SYSTEM          28      12      
 31          28          31          30          31          30          31          31         
 30          31          30          31         
STATIC VAR.	WEATHER          of SYSTEM          29      5       
0            1           2           3           4          
STATIC VAR.	Me               of SYSTEM          30      2       0       
STATIC VAR.	Now              of SYSTEM          31      7       0       
STATIC VAR.	They             of SYSTEM          32      6       0       
STATIC VAR.	Background       of SYSTEM          33      2       2       
-1          -1          
STATIC VAR.	BackChara        of SYSTEM          34      3       3       
0           0           0           
STATIC VAR.	Names            of SYSTEM          35      5       
 14          15          16          17          18         
STATIC VAR.	Messages         of SYSTEM          36      8       
 19          20          21          22          23          24          25          26         

STATIC VAR.	SelectMessages   of SYSTEM          37      4       
 27          28          29          30         
STATIC VAR.	EventLine        of SYSTEM          38      63      
 1          0            4          0            1           2           3           3          
0           0            5           2          0           0           0           0           
 3           1          0            5           2           1           1          0           
 1           3           2          0            5           2           2          0           
0            2           3           3          0            5           2           3          
 1          0            3           2          -1          0           0            4          
0            5           5          0           0            6          0            1          
 6           1           2           6           2           3          -1          
STATIC VAR.	NextKey          of SYSTEM          39      1       
STATIC VAR.	SelectedAnswer   of SYSTEM          40      0       0       
STATIC VAR.	EventPointer     of SYSTEM          41      0       0       
STATIC VAR.	CurrentName      of SYSTEM          42      0       0       
STATIC VAR.	NamePosition     of SYSTEM          43      0       0       
STATIC VAR.	EffectFrame      of SYSTEM          44      0       0       
STATIC VAR.	Variable         of SYSTEM          45      50      0       
STATIC VAR.	TestCount        of SYSTEM          46      0       0       
STATIC VAR.	Year             of GetTotalDay                     47      1       
STATIC VAR.	Month            of GetTotalDay                     48      1       
STATIC VAR.	Day              of GetTotalDay                     49      1       
STATIC VAR.	Total            of GetTotalDay                     50      1       
STATIC VAR.	i                of GetTotalDay                     51      1       
STATIC VAR.	Year             of GetWeek                         52      1       
STATIC VAR.	Month            of GetWeek                         53      1       
STATIC VAR.	Day              of GetWeek                         54      1       
STATIC VAR.	Type             of ScreenEffect                    55      1       
STATIC VAR.	Count            of ScreenEffect                    56      1       
STATIC VAR.	i                of DrawBackground                  57      1       
STATIC VAR.	temp             of DrawBackground                  58      42      1       
STATIC VAR.	TempString       of DrawInterface                   59      43      1       
STATIC VAR.	MessageNumber    of DrawMessages                    60      1       
STATIC VAR.	TempString       of DrawMessages                    61      44      1       
STATIC VAR.	Length           of DrawMessages                    62      1       
STATIC VAR.	i                of DrawMessages                    63      1       
STATIC VAR.	PosNameY         of DrawMessages                    64      1       
STATIC VAR.	Value            of DrawQuestion                    65      1       
STATIC VAR.	MsgCount         of DrawQuestion                    66      1       
STATIC VAR.	Select1          of DrawQuestion                    67      1       
STATIC VAR.	Select2          of DrawQuestion                    68      1       
STATIC VAR.	Select3          of DrawQuestion                    69      1       
STATIC VAR.	Select4          of DrawQuestion                    70      1       
STATIC VAR.	i                of DrawQuestion                    71      1       
STATIC VAR.	Temp             of DrawQuestion                    72      45      1       
STATIC VAR.	NameNumber       of SetCurrentName                  73      1       
STATIC VAR.	Position         of SetCurrentName                  74      1       
STATIC VAR.	Value1           of IfEqual                         75      1       
STATIC VAR.	Value2           of IfEqual                         76      1       
STATIC VAR.	ElseCount        of IfEqual                         77      1       
STATIC VAR.	Value1           of ElseEqual                       78      1       
STATIC VAR.	Value2           of ElseEqual                       79      1       
STATIC VAR.	IfCount          of ElseEqual                       80      1       
STATIC VAR.	Layer            of SetBackground                   81      1       
STATIC VAR.	ImageNumber      of SetBackground                   82      1       
STATIC VAR.	Layer            of SetChara                        83      1       
STATIC VAR.	ImageNumber      of SetChara                        84      1       
STATIC VAR.	Year             of SetDate                         85      1       
STATIC VAR.	Month            of SetDate                         86      1       
STATIC VAR.	Day              of SetDate                         87      1       
STATIC VAR.	Hour             of SetTime                         88      1       
STATIC VAR.	Minute           of SetTime                         89      1       
STATIC VAR.	Weather          of SetWeather                      90      1       
STATIC VAR.	Element          of PassTime                        91      1       
STATIC VAR.	Count            of PassTime                        92      1       
STATIC VAR.	TempCount        of PassTime                        93      1       
STATIC VAR.	temp             of TEST                            94      46      1       
STATIC VAR.	i                of TEST                            95      1       
STATIC VAR.	TempString       of TEST                            96      31      1       
STATIC VAR.	j                of ShadowText                      97      1       
STATIC VAR.	i                of ShadowText                      98      1       
STATIC VAR.	z                of ShadowText                      99      1       
STATIC VAR.	sc               of ShadowText                      100     1       
STATIC VAR.	tc               of ShadowText                      101     1       
STATIC VAR.	TempString       of ShadowText                      102     48      1       
FUNCTION	GetTotalDay      has 3     args.
FUNCTION	GetWeek          has 3     args.
FUNCTION	ScreenEffect     has 2     args.
FUNCTION	InitNature       has 0     args.
FUNCTION	InitEvent        has 0     args.
FUNCTION	DrawBackground   has 0     args.
FUNCTION	DrawInterface    has 0     args.
FUNCTION	RunEventLine     has 0     args.
FUNCTION	DrawMessages     has 1     args.
FUNCTION	DrawQuestion     has 6     args.
FUNCTION	SetCurrentName   has 2     args.
FUNCTION	IfEqual          has 3     args.
FUNCTION	ElseEqual        has 3     args.
FUNCTION	SetBackground    has 2     args.
FUNCTION	SetChara         has 2     args.
FUNCTION	SetDate          has 3     args.
FUNCTION	SetTime          has 2     args.
FUNCTION	SetWeather       has 1     args.
FUNCTION	PassTime         has 2     args.
FUNCTION	TEST             has 0     args.
FUNCTION	ShadowText       has 5     args.
FUNCTION	EVENT_TIMEOUT    has 0     args.
FUNCTION	EVENT_KEYPRESS   has 0     args.
MEDIA		%%0     has [ 0 0 0 5 ].
MEDIA		%%1     has [ 1 1 0 5 ].
MEDIA		%%2     has [ 2 2 0 3 ].
MEDIA		%%3     has [ 3 3 0 3 ].
MEDIA		%%4     has [ 4 4 0 5 ].
MEDIA		%%5     has [ 5 5 0 20 ].
MEDIA		%%6     has [ 6 6 0 7 ].
MEDIA		%%7     has [ 7 7 0 7 ].
MEDIA		%%8     has [ 8 8 0 7 ].
MEDIA		%%9     has [ 9 9 0 7 ].
MEDIA		%%10    has [ 10 10 0 7 ].
MEDIA		%%11    has [ 11 11 0 7 ].
MEDIA		%%12    has [ 12 12 0 3 ].
MEDIA		%%13    has [ 13 13 0 6 ].
MEDIA		%%14    has [ 14 14 0 7 ].
MEDIA		%%15    has [ 15 15 0 7 ].
MEDIA		%%16    has [ 16 16 0 5 ].
MEDIA		%%17    has [ 17 17 0 9 ].
MEDIA		%%18    has [ 18 18 0 7 ].
MEDIA		%%19    has [ 19 19 0 141 ].
MEDIA		%%20    has [ 20 20 0 48 ].
MEDIA		%%21    has [ 21 21 0 36 ].
MEDIA		%%22    has [ 22 22 0 20 ].
MEDIA		%%23    has [ 23 23 0 22 ].
MEDIA		%%24    has [ 24 24 0 14 ].
MEDIA		%%25    has [ 25 25 0 16 ].
MEDIA		%%26    has [ 26 26 0 17 ].
MEDIA		%%27    has [ 27 27 0 9 ].
MEDIA		%%28    has [ 28 28 0 9 ].
MEDIA		%%29    has [ 29 29 0 14 ].
MEDIA		%%30    has [ 30 30 0 7 ].
MEDIA		%%31    has [ 31 31 0 27 ].
MEDIA		%%32    has [ 32 32 0 36 ].
MEDIA		%%33    has [ 33 33 0 43 ].
MEDIA		%%34    has [ 34 34 1 5 ].
MEDIA		%%35    has [ 35 35 1 5 ].
MEDIA		%%36    has [ 36 36 1 5 ].
MEDIA		%%37    has [ 37 37 1 5 ].
MEDIA		%%38    has [ 38 38 1 5 ].
MEDIA		%%39    has [ 39 39 1 5 ].
MEDIA		%%40    has [ 40 40 1 5 ].
MEDIA		%%41    has [ 41 41 1 5 ].
MEDIA		%%42    has [ 42 42 0 0 ].
MEDIA		%%43    has [ 43 43 0 0 ].
MEDIA		%%44    has [ 44 44 0 0 ].
MEDIA		%%45    has [ 45 45 0 0 ].
MEDIA		%%46    has [ 46 46 0 0 ].
MEDIA		%%47    has [ 47 47 0 0 ].
MEDIA		%%48    has [ 48 48 0 0 ].
CODESIZE	8        Bytes in $init           
LABEL		$$0              of GetTotalDay     
LABEL		$$5              of GetTotalDay     
LABEL		$$4              of GetTotalDay     
LABEL		$$2              of GetTotalDay     
LABEL		$$1              of GetTotalDay     
LABEL		$$9              of GetTotalDay     
LABEL		$$8              of GetTotalDay     
LABEL		$$7              of GetTotalDay     
LABEL		$$6              of GetTotalDay     
LABEL		$$10             of GetTotalDay     
LABEL		$$11             of GetTotalDay     
CODESIZE	328      Bytes in GetTotalDay     
CODESIZE	36       Bytes in GetWeek         
LABEL		$$14             of ScreenEffect    
LABEL		$$17             of ScreenEffect    
LABEL		$$18             of ScreenEffect    
LABEL		$$19             of ScreenEffect    
LABEL		$$20             of ScreenEffect    
LABEL		$$21             of ScreenEffect    
LABEL		$$22             of ScreenEffect    
LABEL		$$23             of ScreenEffect    
LABEL		$$15             of ScreenEffect    
LABEL		$$25             of ScreenEffect    
LABEL		$$26             of ScreenEffect    
LABEL		$$13             of ScreenEffect    
CODESIZE	806      Bytes in ScreenEffect    
CODESIZE	90       Bytes in InitNature      
CODESIZE	70       Bytes in InitEvent       
LABEL		$$27             of DrawBackground  
LABEL		$$29             of DrawBackground  
LABEL		$$28             of DrawBackground  
LABEL		$$31             of DrawBackground  
LABEL		$$32             of DrawBackground  
CODESIZE	168      Bytes in DrawBackground  
CODESIZE	488      Bytes in DrawInterface   
LABEL		$$35             of RunEventLine    
LABEL		$$36             of RunEventLine    
LABEL		$$45             of RunEventLine    
LABEL		$$46             of RunEventLine    
LABEL		$$37             of RunEventLine    
LABEL		$$47             of RunEventLine    
LABEL		$$38             of RunEventLine    
LABEL		$$39             of RunEventLine    
LABEL		$$40             of RunEventLine    
LABEL		$$41             of RunEventLine    
LABEL		$$48             of RunEventLine    
LABEL		$$42             of RunEventLine    
LABEL		$$43             of RunEventLine    
LABEL		$$44             of RunEventLine    
LABEL		$$34             of RunEventLine    
CODESIZE	692      Bytes in RunEventLine    
LABEL		$$53             of DrawMessages    
LABEL		$$54             of DrawMessages    
LABEL		$$50             of DrawMessages    
LABEL		$$51             of DrawMessages    
LABEL		$$55             of DrawMessages    
LABEL		$$57             of DrawMessages    
LABEL		$$56             of DrawMessages    
CODESIZE	534      Bytes in DrawMessages    
LABEL		$$59             of DrawQuestion    
LABEL		$$63             of DrawQuestion    
LABEL		$$64             of DrawQuestion    
LABEL		$$65             of DrawQuestion    
LABEL		$$66             of DrawQuestion    
LABEL		$$62             of DrawQuestion    
LABEL		$$60             of DrawQuestion    
LABEL		$$67             of DrawQuestion    
LABEL		$$69             of DrawQuestion    
LABEL		$$68             of DrawQuestion    
CODESIZE	558      Bytes in DrawQuestion    
CODESIZE	22       Bytes in SetCurrentName  
LABEL		$$72             of IfEqual         
CODESIZE	40       Bytes in IfEqual         
LABEL		$$74             of ElseEqual       
CODESIZE	40       Bytes in ElseEqual       
LABEL		$$76             of SetBackground   
LABEL		$$77             of SetBackground   
CODESIZE	72       Bytes in SetBackground   
CODESIZE	24       Bytes in SetChara        
CODESIZE	84       Bytes in SetDate         
CODESIZE	44       Bytes in SetTime         
CODESIZE	24       Bytes in SetWeather      
LABEL		$$80             of PassTime        
LABEL		$$81             of PassTime        
LABEL		$$82             of PassTime        
LABEL		$$83             of PassTime        
LABEL		$$84             of PassTime        
LABEL		$$79             of PassTime        
CODESIZE	558      Bytes in PassTime        
CODESIZE	28       Bytes in main            
LABEL		$$85             of TEST            
CODESIZE	198      Bytes in TEST            
CODESIZE	406      Bytes in ShadowText      
LABEL		$$87             of EVENT_TIMEOUT   
LABEL		$$88             of EVENT_TIMEOUT   
LABEL		$$86             of EVENT_TIMEOUT   
CODESIZE	94       Bytes in EVENT_TIMEOUT   
CODESIZE	10       Bytes in EVENT_KEYPRESS  
000th Func is '$init'
001th Func is 'DrawBackground'
002th Func is 'DrawInterface'
003th Func is 'DrawMessages'
004th Func is 'DrawQuestion'
005th Func is 'EVENT_KEYPRESS'
006th Func is 'EVENT_TIMEOUT'
007th Func is 'ElseEqual'
008th Func is 'GetTotalDay'
009th Func is 'GetWeek'
010th Func is 'IfEqual'
011th Func is 'InitEvent'
012th Func is 'InitNature'
013th Func is 'PassTime'
014th Func is 'RunEventLine'
015th Func is 'ScreenEffect'
016th Func is 'SetBackground'
017th Func is 'SetChara'
018th Func is 'SetCurrentName'
019th Func is 'SetDate'
020th Func is 'SetTime'
021th Func is 'SetWeather'
022th Func is 'ShadowText'
023th Func is 'TEST'
024th Func is 'main'
-------------------------------------------------
Optimize Function '$init()'
		Code Length : 8 Byte(s).
		Final Optimized Code Length : 8 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetTotalDay()'
		Code Length : 328 Byte(s).
	pushz		Day of Function GetTotalDay
	add
		Step.1 Reduced Original Code Length : 322 Byte(s).

		==> addz		49 ( Day of Function GetTotalDay )
		Step.2 Optimized Code Length : 326 Byte(s).

		Final Optimized Code Length : 326 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetWeek()'
		Code Length : 36 Byte(s).
		Final Optimized Code Length : 36 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ScreenEffect()'
		Code Length : 806 Byte(s).
		Final Optimized Code Length : 806 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitNature()'
		Code Length : 90 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 80 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 86 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 76 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 82 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 72 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 78 Byte(s).

	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 68 Byte(s).

		==> addldrzc		31 ( Now )		6
		Step.2 Optimized Code Length : 74 Byte(s).

		Final Optimized Code Length : 74 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitEvent()'
		Code Length : 70 Byte(s).
		Final Optimized Code Length : 70 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBackground()'
		Code Length : 168 Byte(s).
		Final Optimized Code Length : 168 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawInterface()'
		Code Length : 488 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 478 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 484 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 474 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 480 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 470 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 476 Byte(s).

	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 466 Byte(s).

		==> addldrzc		31 ( Now )		6
		Step.2 Optimized Code Length : 472 Byte(s).

		Final Optimized Code Length : 472 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunEventLine()'
		Code Length : 692 Byte(s).
		Final Optimized Code Length : 692 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawMessages()'
		Code Length : 534 Byte(s).
		Final Optimized Code Length : 534 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawQuestion()'
		Code Length : 558 Byte(s).
	pushz		SelectedAnswer
	pushz		MsgCount of Function DrawQuestion
	add
		Step.1 Reduced Original Code Length : 548 Byte(s).

		==> addzz		40 ( SelectedAnswer )		66 ( MsgCount of Function DrawQuestion )
		Step.2 Optimized Code Length : 554 Byte(s).

		Final Optimized Code Length : 554 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetCurrentName()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'IfEqual()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ElseEqual()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetBackground()'
		Code Length : 72 Byte(s).
		Final Optimized Code Length : 72 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetChara()'
		Code Length : 24 Byte(s).
		Final Optimized Code Length : 24 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetDate()'
		Code Length : 84 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 74 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 80 Byte(s).

	ldrz		Now
	pushc		3
	add
		Step.1 Reduced Original Code Length : 70 Byte(s).

		==> addldrzc		31 ( Now )		3
		Step.2 Optimized Code Length : 76 Byte(s).

		Final Optimized Code Length : 76 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetTime()'
		Code Length : 44 Byte(s).
	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 34 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 40 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 30 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 36 Byte(s).

		Final Optimized Code Length : 36 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetWeather()'
		Code Length : 24 Byte(s).
	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 14 Byte(s).

		==> addldrzc		31 ( Now )		6
		Step.2 Optimized Code Length : 20 Byte(s).

		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'PassTime()'
		Code Length : 558 Byte(s).
	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 552 Byte(s).

		==> addz		92 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 556 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 550 Byte(s).

		==> addz		92 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 554 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 544 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 550 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 540 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 546 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 540 Byte(s).

		==> addz		92 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 544 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 534 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 540 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 530 Byte(s).

		==> addldrzc		31 ( Now )		2
		Step.2 Optimized Code Length : 536 Byte(s).

	pushz		TempCount of Function PassTime
	add
		Step.1 Reduced Original Code Length : 530 Byte(s).

		==> addz		93 ( TempCount of Function PassTime )
		Step.2 Optimized Code Length : 534 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 524 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 530 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 520 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 526 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 520 Byte(s).

		==> addz		92 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 524 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 514 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 520 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 510 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 516 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 506 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 512 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 502 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 508 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 502 Byte(s).

		==> addz		92 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 506 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 496 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 502 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 492 Byte(s).

		==> addldrzc		31 ( Now )		4
		Step.2 Optimized Code Length : 498 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 488 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 494 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 484 Byte(s).

		==> addldrzc		31 ( Now )		5
		Step.2 Optimized Code Length : 490 Byte(s).

		Final Optimized Code Length : 490 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'main()'
		Code Length : 28 Byte(s).
		Final Optimized Code Length : 28 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'TEST()'
		Code Length : 198 Byte(s).
		Final Optimized Code Length : 198 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShadowText()'
		Code Length : 406 Byte(s).
	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 400 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 404 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 398 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 402 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 396 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 400 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 394 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 398 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 392 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 396 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 390 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 394 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 388 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 392 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 386 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 390 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 384 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 388 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 382 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 386 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 380 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 384 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 378 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 382 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 376 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 380 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 374 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 378 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 372 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 376 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 370 Byte(s).

		==> addz		97 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 374 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 368 Byte(s).

		==> addz		98 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 372 Byte(s).

		Final Optimized Code Length : 372 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_TIMEOUT()'
		Code Length : 94 Byte(s).
		Final Optimized Code Length : 94 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_KEYPRESS()'
		Code Length : 10 Byte(s).
		Final Optimized Code Length : 10 Byte(s).
-------------------------------------------------
FUNC COUNT: 25
Set FUNC ADDRESS : $init [0x00000080]
Set FUNC ADDRESS : DrawBackground [0x00000088]
Set FUNC ADDRESS : DrawInterface [0x00000130]
Set FUNC ADDRESS : DrawMessages [0x00000308]
Set FUNC ADDRESS : DrawQuestion [0x0000051E]
Set FUNC ADDRESS : EVENT_KEYPRESS [0x00000748]
Set FUNC ADDRESS : EVENT_TIMEOUT [0x00000752]
Set FUNC ADDRESS : ElseEqual [0x000007B0]
Set FUNC ADDRESS : GetTotalDay [0x000007D8]
Set FUNC ADDRESS : GetWeek [0x0000091E]
Set FUNC ADDRESS : IfEqual [0x00000942]
Set FUNC ADDRESS : InitEvent [0x0000096A]
Set FUNC ADDRESS : InitNature [0x000009B0]
Set FUNC ADDRESS : PassTime [0x000009FA]
Set FUNC ADDRESS : RunEventLine [0x00000BE4]
Set FUNC ADDRESS : ScreenEffect [0x00000E98]
Set FUNC ADDRESS : SetBackground [0x000011BE]
Set FUNC ADDRESS : SetChara [0x00001206]
Set FUNC ADDRESS : SetCurrentName [0x0000121E]
Set FUNC ADDRESS : SetDate [0x00001234]
Set FUNC ADDRESS : SetTime [0x00001280]
Set FUNC ADDRESS : SetWeather [0x000012A4]
Set FUNC ADDRESS : ShadowText [0x000012B8]
Set FUNC ADDRESS : TEST [0x0000142C]
Set FUNC ADDRESS : main [0x000014F2]

FUNCTION : $init()
{
	0x00000080 : zsetc		39 ( NextKey )		-1	// , $init, -1 - SAL : 319
	0x00000086 : ret	// , $init, -1 - SAL : 320
}


FUNCTION : DrawBackground()
{
	0x00000088 : nop	// , DrawBackground, -1 - SAL : 669
	0x0000008A : pushc		2	// , DrawBackground, -1 - SAL : 670
	0x0000008E : pushc		25	// , DrawBackground, -1 - SAL : 671
	0x00000092 : pushc		3	// , DrawBackground, -1 - SAL : 672
	0x00000096 : pushc		0	// , DrawBackground, -1 - SAL : 673
	0x0000009A : calls		SetFontType(40)	// , DrawBackground, -1 - SAL : 674
	0x0000009E : zsetc		57 ( i of Function DrawBackground )		0	// , DrawBackground, -1 - SAL : 675
	0x000000A4 : pushz		57 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 676
	0x000000A8 : gejp		2		0x000000E2	// , DrawBackground, -1 - SAL : 677
	0x000000B0 : pushi		33 ( Background )		57 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 678
	0x000000B6 : ltjp		0		0x000000D6	// , DrawBackground, -1 - SAL : 679
	0x000000BE : pushc		0	// , DrawBackground, -1 - SAL : 680
	0x000000C2 : pushc		20	// , DrawBackground, -1 - SAL : 681
	0x000000C6 : pushi		33 ( Background )		57 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 682
	0x000000CC : ldrz		27 ( bg )	// , DrawBackground, -1 - SAL : 683
	0x000000D0 : add	// , DrawBackground, -1 - SAL : 684
	0x000000D2 : ixa	// , DrawBackground, -1 - SAL : 685
	0x000000D4 : CopyImage	// , DrawBackground, -1 - SAL : 686
	0x000000D6 : incz		57 ( i of Function DrawBackground )		1	// , DrawBackground, -1 - SAL : 687
	0x000000DC : ujp		0x000000A4	// , DrawBackground, -1 - SAL : 688
	0x000000E2 : zsetc		57 ( i of Function DrawBackground )		0	// , DrawBackground, -1 - SAL : 689
	0x000000E8 : pushz		57 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 690
	0x000000EC : gejp		3		0x0000012E	// , DrawBackground, -1 - SAL : 691
	0x000000F4 : pushz		58 ( temp of Function DrawBackground )	// , DrawBackground, -1 - SAL : 692
	0x000000F8 : pushmi		%%5	// , DrawBackground, -1 - SAL : 693
	0x000000FC : pushi		34 ( BackChara )		57 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 694
	0x00000102 : calls		MakeStr1(174)	// , DrawBackground, -1 - SAL : 695
	0x00000106 : pushc		115	// , DrawBackground, -1 - SAL : 696
	0x0000010A : pushc		150	// , DrawBackground, -1 - SAL : 697
	0x0000010E : pushz		57 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 698
	0x00000112 : pushc		18	// , DrawBackground, -1 - SAL : 699
	0x00000116 : mult	// , DrawBackground, -1 - SAL : 700
	0x00000118 : add	// , DrawBackground, -1 - SAL : 701
	0x0000011A : pushz		58 ( temp of Function DrawBackground )	// , DrawBackground, -1 - SAL : 702
	0x0000011E : calls		DrawStr(85)	// , DrawBackground, -1 - SAL : 703
	0x00000122 : incz		57 ( i of Function DrawBackground )		1	// , DrawBackground, -1 - SAL : 704
	0x00000128 : ujp		0x000000E8	// , DrawBackground, -1 - SAL : 705
	0x0000012E : ret	// , DrawBackground, -1 - SAL : 706
}


FUNCTION : DrawInterface()
{
	0x00000130 : nop	// , DrawInterface, -1 - SAL : 707
	0x00000132 : pushc		93	// , DrawInterface, -1 - SAL : 708
	0x00000136 : pushc		25	// , DrawInterface, -1 - SAL : 709
	0x0000013A : calls		SetShadeColor(52)	// , DrawInterface, -1 - SAL : 710
	0x0000013E : pushc		0	// , DrawInterface, -1 - SAL : 711
	0x00000142 : pushc		0	// , DrawInterface, -1 - SAL : 712
	0x00000146 : pushc		239	// , DrawInterface, -1 - SAL : 713
	0x0000014A : pushc		19	// , DrawInterface, -1 - SAL : 714
	0x0000014E : pushc		3	// , DrawInterface, -1 - SAL : 715
	0x00000152 : pushc		1	// , DrawInterface, -1 - SAL : 716
	0x00000156 : calls		ShadeRect(78)	// , DrawInterface, -1 - SAL : 717
	0x0000015A : pushc		3	// , DrawInterface, -1 - SAL : 718
	0x0000015E : calls		SetColor(38)	// , DrawInterface, -1 - SAL : 719
	0x00000162 : pushc		0	// , DrawInterface, -1 - SAL : 720
	0x00000166 : pushc		0	// , DrawInterface, -1 - SAL : 721
	0x0000016A : pushc		239	// , DrawInterface, -1 - SAL : 722
	0x0000016E : pushc		19	// , DrawInterface, -1 - SAL : 723
	0x00000172 : calls		DrawRect(69)	// , DrawInterface, -1 - SAL : 724
	0x00000176 : pushc		0	// , DrawInterface, -1 - SAL : 725
	0x0000017A : pushc		277	// , DrawInterface, -1 - SAL : 726
	0x0000017E : pushc		40	// , DrawInterface, -1 - SAL : 727
	0x00000182 : CopyImage	// , DrawInterface, -1 - SAL : 728
	0x00000184 : pushc		47	// , DrawInterface, -1 - SAL : 729
	0x00000188 : pushc		277	// , DrawInterface, -1 - SAL : 730
	0x0000018C : pushc		40	// , DrawInterface, -1 - SAL : 731
	0x00000190 : CopyImage	// , DrawInterface, -1 - SAL : 732
	0x00000192 : pushc		94	// , DrawInterface, -1 - SAL : 733
	0x00000196 : pushc		277	// , DrawInterface, -1 - SAL : 734
	0x0000019A : pushc		40	// , DrawInterface, -1 - SAL : 735
	0x0000019E : CopyImage	// , DrawInterface, -1 - SAL : 736
	0x000001A0 : pushc		141	// , DrawInterface, -1 - SAL : 737
	0x000001A4 : pushc		277	// , DrawInterface, -1 - SAL : 738
	0x000001A8 : pushc		40	// , DrawInterface, -1 - SAL : 739
	0x000001AC : CopyImage	// , DrawInterface, -1 - SAL : 740
	0x000001AE : pushc		188	// , DrawInterface, -1 - SAL : 741
	0x000001B2 : pushc		277	// , DrawInterface, -1 - SAL : 742
	0x000001B6 : pushc		40	// , DrawInterface, -1 - SAL : 743
	0x000001BA : CopyImage	// , DrawInterface, -1 - SAL : 744
	0x000001BC : pushc		2	// , DrawInterface, -1 - SAL : 745
	0x000001C0 : pushc		0	// , DrawInterface, -1 - SAL : 746
	0x000001C4 : pushc		3	// , DrawInterface, -1 - SAL : 747
	0x000001C8 : pushc		0	// , DrawInterface, -1 - SAL : 748
	0x000001CC : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 749
	0x000001D0 : pushc		5	// , DrawInterface, -1 - SAL : 750
	0x000001D4 : pushc		282	// , DrawInterface, -1 - SAL : 751
	0x000001D8 : pushmi		%%6	// , DrawInterface, -1 - SAL : 752
	0x000001DC : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 753
	0x000001E0 : pushc		52	// , DrawInterface, -1 - SAL : 754
	0x000001E4 : pushc		282	// , DrawInterface, -1 - SAL : 755
	0x000001E8 : pushmi		%%7	// , DrawInterface, -1 - SAL : 756
	0x000001EC : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 757
	0x000001F0 : pushc		99	// , DrawInterface, -1 - SAL : 758
	0x000001F4 : pushc		282	// , DrawInterface, -1 - SAL : 759
	0x000001F8 : pushmi		%%8	// , DrawInterface, -1 - SAL : 760
	0x000001FC : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 761
	0x00000200 : pushc		146	// , DrawInterface, -1 - SAL : 762
	0x00000204 : pushc		282	// , DrawInterface, -1 - SAL : 763
	0x00000208 : pushmi		%%9	// , DrawInterface, -1 - SAL : 764
	0x0000020C : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 765
	0x00000210 : pushc		193	// , DrawInterface, -1 - SAL : 766
	0x00000214 : pushc		282	// , DrawInterface, -1 - SAL : 767
	0x00000218 : pushmi		%%10	// , DrawInterface, -1 - SAL : 768
	0x0000021C : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 769
	0x00000220 : pushc		1	// , DrawInterface, -1 - SAL : 770
	0x00000224 : pushc		0	// , DrawInterface, -1 - SAL : 771
	0x00000228 : pushc		3	// , DrawInterface, -1 - SAL : 772
	0x0000022C : pushc		0	// , DrawInterface, -1 - SAL : 773
	0x00000230 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 774
	0x00000234 : pushz		59 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 775
	0x00000238 : pushmi		%%11	// , DrawInterface, -1 - SAL : 776
	0x0000023C : ldrz		31 ( Now )	// , DrawInterface, -1 - SAL : 777
	0x00000240 : ixa	// , DrawInterface, -1 - SAL : 778
	0x00000242 : ldrz		31 ( Now )	// , DrawInterface, -1 - SAL : 779
	0x00000246 : inc	// , DrawInterface, -1 - SAL : 780
	0x00000248 : ixa	// , DrawInterface, -1 - SAL : 781
	0x0000024A : calls		MakeStr2(175)	// , DrawInterface, -1 - SAL : 782
	0x0000024E : pushc		7	// , DrawInterface, -1 - SAL : 783
	0x00000252 : pushc		8	// , DrawInterface, -1 - SAL : 784
	0x00000256 : pushz		59 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 785
	0x0000025A : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 786
	0x0000025E : pushc		2	// , DrawInterface, -1 - SAL : 787
	0x00000262 : pushc		0	// , DrawInterface, -1 - SAL : 788
	0x00000266 : pushc		3	// , DrawInterface, -1 - SAL : 789
	0x0000026A : pushc		0	// , DrawInterface, -1 - SAL : 790
	0x0000026E : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 791
	0x00000272 : pushz		59 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 792
	0x00000276 : pushmi		%%12	// , DrawInterface, -1 - SAL : 793
	0x0000027A : addldrzc		31 ( Now )		2	// , DrawInterface, -1 - SAL : 794
	0x00000280 : ixa	// , DrawInterface, -1 - SAL : 797
	0x00000282 : calls		MakeStr1(174)	// , DrawInterface, -1 - SAL : 798
	0x00000286 : pushc		70	// , DrawInterface, -1 - SAL : 799
	0x0000028A : pushc		6	// , DrawInterface, -1 - SAL : 800
	0x0000028E : pushz		59 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 801
	0x00000292 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 802
	0x00000296 : pushc		1	// , DrawInterface, -1 - SAL : 803
	0x0000029A : pushc		0	// , DrawInterface, -1 - SAL : 804
	0x0000029E : pushc		3	// , DrawInterface, -1 - SAL : 805
	0x000002A2 : pushc		0	// , DrawInterface, -1 - SAL : 806
	0x000002A6 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 807
	0x000002AA : pushz		59 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 808
	0x000002AE : pushmi		%%13	// , DrawInterface, -1 - SAL : 809
	0x000002B2 : addldrzc		31 ( Now )		4	// , DrawInterface, -1 - SAL : 810
	0x000002B8 : ixa	// , DrawInterface, -1 - SAL : 813
	0x000002BA : addldrzc		31 ( Now )		5	// , DrawInterface, -1 - SAL : 814
	0x000002C0 : ixa	// , DrawInterface, -1 - SAL : 817
	0x000002C2 : calls		MakeStr2(175)	// , DrawInterface, -1 - SAL : 818
	0x000002C6 : pushc		100	// , DrawInterface, -1 - SAL : 819
	0x000002CA : pushc		8	// , DrawInterface, -1 - SAL : 820
	0x000002CE : pushz		59 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 821
	0x000002D2 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 822
	0x000002D6 : pushc		2	// , DrawInterface, -1 - SAL : 823
	0x000002DA : pushc		0	// , DrawInterface, -1 - SAL : 824
	0x000002DE : pushc		3	// , DrawInterface, -1 - SAL : 825
	0x000002E2 : pushc		0	// , DrawInterface, -1 - SAL : 826
	0x000002E6 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 827
	0x000002EA : pushc		180	// , DrawInterface, -1 - SAL : 828
	0x000002EE : pushc		6	// , DrawInterface, -1 - SAL : 829
	0x000002F2 : addldrzc		31 ( Now )		6	// , DrawInterface, -1 - SAL : 830
	0x000002F8 : ixa	// , DrawInterface, -1 - SAL : 833
	0x000002FA : ldrz		29 ( WEATHER )	// , DrawInterface, -1 - SAL : 834
	0x000002FE : add	// , DrawInterface, -1 - SAL : 835
	0x00000300 : ixa	// , DrawInterface, -1 - SAL : 836
	0x00000302 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 837
	0x00000306 : ret	// , DrawInterface, -1 - SAL : 838
}


FUNCTION : DrawMessages()
{
	0x00000308 : nop	// , DrawMessages, -1 - SAL : 1012
	0x0000030A : stnz		60 ( MessageNumber of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1013
	0x0000030E : ldrz		36 ( Messages )	// , DrawMessages, -1 - SAL : 1014
	0x00000312 : add	// , DrawMessages, -1 - SAL : 1015
	0x00000314 : ixa	// , DrawMessages, -1 - SAL : 1016
	0x00000316 : calls		StrLen(160)	// , DrawMessages, -1 - SAL : 1017
	0x0000031A : pushc		36	// , DrawMessages, -1 - SAL : 1018
	0x0000031E : div	// , DrawMessages, -1 - SAL : 1019
	0x00000320 : inc	// , DrawMessages, -1 - SAL : 1020
	0x00000322 : popz		62 ( Length of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1021
	0x00000326 : pushc		252	// , DrawMessages, -1 - SAL : 1022
	0x0000032A : pushc		59	// , DrawMessages, -1 - SAL : 1023
	0x0000032E : sub	// , DrawMessages, -1 - SAL : 1024
	0x00000330 : popz		64 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1025
	0x00000334 : pushz		42 ( CurrentName )	// , DrawMessages, -1 - SAL : 1026
	0x00000338 : lejp		-1		0x0000041A	// , DrawMessages, -1 - SAL : 1027
	0x00000340 : ssp	// , DrawMessages, -1 - SAL : 1028
	0x00000342 : pushz		43 ( NamePosition )	// , DrawMessages, -1 - SAL : 1029
	0x00000346 : dup	// , DrawMessages, -1 - SAL : 1030
	0x00000348 : eqjp		0		0x00000362	// , DrawMessages, -1 - SAL : 1031
	0x00000350 : dup	// , DrawMessages, -1 - SAL : 1032
	0x00000352 : eqjp		1		0x000003BE	// , DrawMessages, -1 - SAL : 1033
	0x0000035A : rsp	// , DrawMessages, -1 - SAL : 1034
	0x0000035C : ujp		0x0000042E	// , DrawMessages, -1 - SAL : 1035
	0x00000362 : rsp	// , DrawMessages, -1 - SAL : 1036
	0x00000364 : pushc		4	// , DrawMessages, -1 - SAL : 1037
	0x00000368 : pushc		252	// , DrawMessages, -1 - SAL : 1038
	0x0000036C : pushc		59	// , DrawMessages, -1 - SAL : 1039
	0x00000370 : sub	// , DrawMessages, -1 - SAL : 1040
	0x00000372 : pushc		35	// , DrawMessages, -1 - SAL : 1041
	0x00000376 : CopyImage	// , DrawMessages, -1 - SAL : 1042
	0x00000378 : pushc		215	// , DrawMessages, -1 - SAL : 1043
	0x0000037C : pushc		260	// , DrawMessages, -1 - SAL : 1044
	0x00000380 : pushc		59	// , DrawMessages, -1 - SAL : 1045
	0x00000384 : sub	// , DrawMessages, -1 - SAL : 1046
	0x00000386 : pushc		36	// , DrawMessages, -1 - SAL : 1047
	0x0000038A : CopyImage	// , DrawMessages, -1 - SAL : 1048
	0x0000038C : pushc		2	// , DrawMessages, -1 - SAL : 1049
	0x00000390 : pushc		0	// , DrawMessages, -1 - SAL : 1050
	0x00000394 : pushc		3	// , DrawMessages, -1 - SAL : 1051
	0x00000398 : pushc		1	// , DrawMessages, -1 - SAL : 1052
	0x0000039C : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1053
	0x000003A0 : pushc		40	// , DrawMessages, -1 - SAL : 1054
	0x000003A4 : pushz		64 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1055
	0x000003A8 : pushc		5	// , DrawMessages, -1 - SAL : 1056
	0x000003AC : add	// , DrawMessages, -1 - SAL : 1057
	0x000003AE : pushi		35 ( Names )		42 ( CurrentName )	// , DrawMessages, -1 - SAL : 1058
	0x000003B4 : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1059
	0x000003B8 : ujp		0x0000042E	// , DrawMessages, -1 - SAL : 1060
	0x000003BE : rsp	// , DrawMessages, -1 - SAL : 1061
	0x000003C0 : pushc		166	// , DrawMessages, -1 - SAL : 1062
	0x000003C4 : pushc		252	// , DrawMessages, -1 - SAL : 1063
	0x000003C8 : pushc		59	// , DrawMessages, -1 - SAL : 1064
	0x000003CC : sub	// , DrawMessages, -1 - SAL : 1065
	0x000003CE : pushc		35	// , DrawMessages, -1 - SAL : 1066
	0x000003D2 : CopyImage	// , DrawMessages, -1 - SAL : 1067
	0x000003D4 : pushc		2	// , DrawMessages, -1 - SAL : 1068
	0x000003D8 : pushc		260	// , DrawMessages, -1 - SAL : 1069
	0x000003DC : pushc		59	// , DrawMessages, -1 - SAL : 1070
	0x000003E0 : sub	// , DrawMessages, -1 - SAL : 1071
	0x000003E2 : pushc		36	// , DrawMessages, -1 - SAL : 1072
	0x000003E6 : CopyImage	// , DrawMessages, -1 - SAL : 1073
	0x000003E8 : pushc		2	// , DrawMessages, -1 - SAL : 1074
	0x000003EC : pushc		0	// , DrawMessages, -1 - SAL : 1075
	0x000003F0 : pushc		3	// , DrawMessages, -1 - SAL : 1076
	0x000003F4 : pushc		1	// , DrawMessages, -1 - SAL : 1077
	0x000003F8 : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1078
	0x000003FC : pushc		202	// , DrawMessages, -1 - SAL : 1079
	0x00000400 : pushz		64 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1080
	0x00000404 : pushc		5	// , DrawMessages, -1 - SAL : 1081
	0x00000408 : add	// , DrawMessages, -1 - SAL : 1082
	0x0000040A : pushi		35 ( Names )		42 ( CurrentName )	// , DrawMessages, -1 - SAL : 1083
	0x00000410 : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1084
	0x00000414 : ujp		0x0000042E	// , DrawMessages, -1 - SAL : 1085
	0x0000041A : pushc		215	// , DrawMessages, -1 - SAL : 1086
	0x0000041E : pushc		260	// , DrawMessages, -1 - SAL : 1087
	0x00000422 : pushc		59	// , DrawMessages, -1 - SAL : 1088
	0x00000426 : sub	// , DrawMessages, -1 - SAL : 1089
	0x00000428 : pushc		36	// , DrawMessages, -1 - SAL : 1090
	0x0000042C : CopyImage	// , DrawMessages, -1 - SAL : 1091
	0x0000042E : pushc		3	// , DrawMessages, -1 - SAL : 1092
	0x00000432 : calls		SetColor(38)	// , DrawMessages, -1 - SAL : 1093
	0x00000436 : pushc		4	// , DrawMessages, -1 - SAL : 1094
	0x0000043A : pushc		274	// , DrawMessages, -1 - SAL : 1095
	0x0000043E : pushc		59	// , DrawMessages, -1 - SAL : 1096
	0x00000442 : sub	// , DrawMessages, -1 - SAL : 1097
	0x00000444 : pushc		285	// , DrawMessages, -1 - SAL : 1098
	0x00000448 : pushc		273	// , DrawMessages, -1 - SAL : 1099
	0x0000044C : pushc		2	// , DrawMessages, -1 - SAL : 1100
	0x00000450 : calls		FillRectEx(71)	// , DrawMessages, -1 - SAL : 1101
	0x00000454 : pushc		0	// , DrawMessages, -1 - SAL : 1102
	0x00000458 : pushc		270	// , DrawMessages, -1 - SAL : 1103
	0x0000045C : pushc		59	// , DrawMessages, -1 - SAL : 1104
	0x00000460 : sub	// , DrawMessages, -1 - SAL : 1105
	0x00000462 : pushc		34	// , DrawMessages, -1 - SAL : 1106
	0x00000466 : CopyImage	// , DrawMessages, -1 - SAL : 1107
	0x00000468 : pushc		2	// , DrawMessages, -1 - SAL : 1108
	0x0000046C : pushc		0	// , DrawMessages, -1 - SAL : 1109
	0x00000470 : pushc		3	// , DrawMessages, -1 - SAL : 1110
	0x00000474 : pushc		0	// , DrawMessages, -1 - SAL : 1111
	0x00000478 : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1112
	0x0000047C : zsetc		63 ( i of Function DrawMessages )		0	// , DrawMessages, -1 - SAL : 1113
	0x00000482 : pushz		63 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1114
	0x00000486 : gejp		4		0x0000050E	// , DrawMessages, -1 - SAL : 1115
	0x0000048E : pushc		0	// , DrawMessages, -1 - SAL : 1116
	0x00000492 : pushc		275	// , DrawMessages, -1 - SAL : 1117
	0x00000496 : pushc		14	// , DrawMessages, -1 - SAL : 1118
	0x0000049A : pushz		63 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1119
	0x0000049E : mult	// , DrawMessages, -1 - SAL : 1120
	0x000004A0 : sub	// , DrawMessages, -1 - SAL : 1121
	0x000004A2 : pushc		17	// , DrawMessages, -1 - SAL : 1122
	0x000004A6 : sub	// , DrawMessages, -1 - SAL : 1123
	0x000004A8 : pushc		37	// , DrawMessages, -1 - SAL : 1124
	0x000004AC : CopyImage	// , DrawMessages, -1 - SAL : 1125
	0x000004AE : pushz		63 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1126
	0x000004B2 : pushz		62 ( Length of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1127
	0x000004B6 : lt	// , DrawMessages, -1 - SAL : 1128
	0x000004B8 : fjp		0x00000502	// , DrawMessages, -1 - SAL : 1129
	0x000004BE : pushz		61 ( TempString of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1130
	0x000004C2 : pushi		36 ( Messages )		60 ( MessageNumber of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1131
	0x000004C8 : pushz		63 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1132
	0x000004CC : pushc		36	// , DrawMessages, -1 - SAL : 1133
	0x000004D0 : mult	// , DrawMessages, -1 - SAL : 1134
	0x000004D2 : pushc		36	// , DrawMessages, -1 - SAL : 1135
	0x000004D6 : calls		StrSub(162)	// , DrawMessages, -1 - SAL : 1136
	0x000004DA : pushc		7	// , DrawMessages, -1 - SAL : 1137
	0x000004DE : pushc		277	// , DrawMessages, -1 - SAL : 1138
	0x000004E2 : pushc		3	// , DrawMessages, -1 - SAL : 1139
	0x000004E6 : pushz		63 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1140
	0x000004EA : sub	// , DrawMessages, -1 - SAL : 1141
	0x000004EC : pushc		14	// , DrawMessages, -1 - SAL : 1142
	0x000004F0 : mult	// , DrawMessages, -1 - SAL : 1143
	0x000004F2 : sub	// , DrawMessages, -1 - SAL : 1144
	0x000004F4 : pushc		17	// , DrawMessages, -1 - SAL : 1145
	0x000004F8 : sub	// , DrawMessages, -1 - SAL : 1146
	0x000004FA : pushz		61 ( TempString of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1147
	0x000004FE : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1148
	0x00000502 : incz		63 ( i of Function DrawMessages )		1	// , DrawMessages, -1 - SAL : 1149
	0x00000508 : ujp		0x00000482	// , DrawMessages, -1 - SAL : 1150
	0x0000050E : pushc		0	// , DrawMessages, -1 - SAL : 1151
	0x00000512 : pushc		271	// , DrawMessages, -1 - SAL : 1152
	0x00000516 : pushc		38	// , DrawMessages, -1 - SAL : 1153
	0x0000051A : CopyImage	// , DrawMessages, -1 - SAL : 1154
	0x0000051C : ret	// , DrawMessages, -1 - SAL : 1155
}


FUNCTION : DrawQuestion()
{
	0x0000051E : nop	// , DrawQuestion, -1 - SAL : 1156
	0x00000520 : popz		70 ( Select4 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1157
	0x00000524 : popz		69 ( Select3 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1158
	0x00000528 : popz		68 ( Select2 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1159
	0x0000052C : popz		67 ( Select1 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1160
	0x00000530 : popz		66 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1161
	0x00000534 : popz		65 ( Value of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1162
	0x00000538 : pushc		3	// , DrawQuestion, -1 - SAL : 1163
	0x0000053C : calls		SetColor(38)	// , DrawQuestion, -1 - SAL : 1164
	0x00000540 : pushc		4	// , DrawQuestion, -1 - SAL : 1165
	0x00000544 : pushc		288	// , DrawQuestion, -1 - SAL : 1166
	0x00000548 : pushc		73	// , DrawQuestion, -1 - SAL : 1167
	0x0000054C : sub	// , DrawQuestion, -1 - SAL : 1168
	0x0000054E : pushc		285	// , DrawQuestion, -1 - SAL : 1169
	0x00000552 : pushc		273	// , DrawQuestion, -1 - SAL : 1170
	0x00000556 : pushc		2	// , DrawQuestion, -1 - SAL : 1171
	0x0000055A : calls		FillRectEx(71)	// , DrawQuestion, -1 - SAL : 1172
	0x0000055E : pushc		0	// , DrawQuestion, -1 - SAL : 1173
	0x00000562 : pushc		284	// , DrawQuestion, -1 - SAL : 1174
	0x00000566 : pushc		73	// , DrawQuestion, -1 - SAL : 1175
	0x0000056A : sub	// , DrawQuestion, -1 - SAL : 1176
	0x0000056C : pushc		34	// , DrawQuestion, -1 - SAL : 1177
	0x00000570 : CopyImage	// , DrawQuestion, -1 - SAL : 1178
	0x00000572 : pushc		0	// , DrawQuestion, -1 - SAL : 1179
	0x00000576 : pushc		275	// , DrawQuestion, -1 - SAL : 1180
	0x0000057A : pushc		45	// , DrawQuestion, -1 - SAL : 1181
	0x0000057E : sub	// , DrawQuestion, -1 - SAL : 1182
	0x00000580 : pushc		37	// , DrawQuestion, -1 - SAL : 1183
	0x00000584 : CopyImage	// , DrawQuestion, -1 - SAL : 1184
	0x00000586 : pushc		0	// , DrawQuestion, -1 - SAL : 1185
	0x0000058A : pushc		275	// , DrawQuestion, -1 - SAL : 1186
	0x0000058E : pushc		31	// , DrawQuestion, -1 - SAL : 1187
	0x00000592 : sub	// , DrawQuestion, -1 - SAL : 1188
	0x00000594 : pushc		37	// , DrawQuestion, -1 - SAL : 1189
	0x00000598 : CopyImage	// , DrawQuestion, -1 - SAL : 1190
	0x0000059A : pushc		0	// , DrawQuestion, -1 - SAL : 1191
	0x0000059E : pushc		258	// , DrawQuestion, -1 - SAL : 1192
	0x000005A2 : pushc		37	// , DrawQuestion, -1 - SAL : 1193
	0x000005A6 : CopyImage	// , DrawQuestion, -1 - SAL : 1194
	0x000005A8 : pushc		2	// , DrawQuestion, -1 - SAL : 1195
	0x000005AC : pushc		0	// , DrawQuestion, -1 - SAL : 1196
	0x000005B0 : pushc		3	// , DrawQuestion, -1 - SAL : 1197
	0x000005B4 : pushc		1	// , DrawQuestion, -1 - SAL : 1198
	0x000005B8 : calls		SetFontType(40)	// , DrawQuestion, -1 - SAL : 1199
	0x000005BC : zsetc		71 ( i of Function DrawQuestion )		0	// , DrawQuestion, -1 - SAL : 1200
	0x000005C2 : pushz		71 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1201
	0x000005C6 : pushz		66 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1202
	0x000005CA : lt	// , DrawQuestion, -1 - SAL : 1203
	0x000005CC : fjp		0x00000672	// , DrawQuestion, -1 - SAL : 1204
	0x000005D2 : ssp	// , DrawQuestion, -1 - SAL : 1205
	0x000005D4 : pushz		71 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1206
	0x000005D8 : inc	// , DrawQuestion, -1 - SAL : 1207
	0x000005DA : dup	// , DrawQuestion, -1 - SAL : 1208
	0x000005DC : eqjp		4		0x0000060A	// , DrawQuestion, -1 - SAL : 1209
	0x000005E4 : dup	// , DrawQuestion, -1 - SAL : 1210
	0x000005E6 : eqjp		3		0x0000061A	// , DrawQuestion, -1 - SAL : 1211
	0x000005EE : dup	// , DrawQuestion, -1 - SAL : 1212
	0x000005F0 : eqjp		2		0x0000062A	// , DrawQuestion, -1 - SAL : 1213
	0x000005F8 : dup	// , DrawQuestion, -1 - SAL : 1214
	0x000005FA : eqjp		1		0x0000063A	// , DrawQuestion, -1 - SAL : 1215
	0x00000602 : rsp	// , DrawQuestion, -1 - SAL : 1216
	0x00000604 : ujp		0x00000644	// , DrawQuestion, -1 - SAL : 1217
	0x0000060A : rsp	// , DrawQuestion, -1 - SAL : 1218
	0x0000060C : zseti		72 ( Temp of Function DrawQuestion )		37 ( SelectMessages )		70 ( Select4 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1219
	0x00000614 : ujp		0x00000644	// , DrawQuestion, -1 - SAL : 1220
	0x0000061A : rsp	// , DrawQuestion, -1 - SAL : 1221
	0x0000061C : zseti		72 ( Temp of Function DrawQuestion )		37 ( SelectMessages )		69 ( Select3 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1222
	0x00000624 : ujp		0x00000644	// , DrawQuestion, -1 - SAL : 1223
	0x0000062A : rsp	// , DrawQuestion, -1 - SAL : 1224
	0x0000062C : zseti		72 ( Temp of Function DrawQuestion )		37 ( SelectMessages )		68 ( Select2 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1225
	0x00000634 : ujp		0x00000644	// , DrawQuestion, -1 - SAL : 1226
	0x0000063A : rsp	// , DrawQuestion, -1 - SAL : 1227
	0x0000063C : zseti		72 ( Temp of Function DrawQuestion )		37 ( SelectMessages )		67 ( Select1 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1228
	0x00000644 : pushc		120	// , DrawQuestion, -1 - SAL : 1229
	0x00000648 : pushc		235	// , DrawQuestion, -1 - SAL : 1230
	0x0000064C : pushz		71 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1231
	0x00000650 : pushc		14	// , DrawQuestion, -1 - SAL : 1232
	0x00000654 : mult	// , DrawQuestion, -1 - SAL : 1233
	0x00000656 : add	// , DrawQuestion, -1 - SAL : 1234
	0x00000658 : pushc		17	// , DrawQuestion, -1 - SAL : 1235
	0x0000065C : sub	// , DrawQuestion, -1 - SAL : 1236
	0x0000065E : pushz		72 ( Temp of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1237
	0x00000662 : calls		DrawStr(85)	// , DrawQuestion, -1 - SAL : 1238
	0x00000666 : incz		71 ( i of Function DrawQuestion )		1	// , DrawQuestion, -1 - SAL : 1239
	0x0000066C : ujp		0x000005C2	// , DrawQuestion, -1 - SAL : 1240
	0x00000672 : pushc		0	// , DrawQuestion, -1 - SAL : 1241
	0x00000676 : pushc		271	// , DrawQuestion, -1 - SAL : 1242
	0x0000067A : pushc		38	// , DrawQuestion, -1 - SAL : 1243
	0x0000067E : CopyImage	// , DrawQuestion, -1 - SAL : 1244
	0x00000680 : pushz		39 ( NextKey )	// , DrawQuestion, -1 - SAL : 1245
	0x00000684 : nejp		19		0x000006A2	// , DrawQuestion, -1 - SAL : 1246
	0x0000068C : pushz		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1247
	0x00000690 : inc	// , DrawQuestion, -1 - SAL : 1248
	0x00000692 : pushz		66 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1249
	0x00000696 : mod	// , DrawQuestion, -1 - SAL : 1250
	0x00000698 : popz		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1251
	0x0000069C : ujp		0x000006E2	// , DrawQuestion, -1 - SAL : 1252
	0x000006A2 : pushz		39 ( NextKey )	// , DrawQuestion, -1 - SAL : 1253
	0x000006A6 : nejp		18		0x000006C6	// , DrawQuestion, -1 - SAL : 1254
	0x000006AE : addzz		40 ( SelectedAnswer )		66 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1255
	0x000006B4 : dec	// , DrawQuestion, -1 - SAL : 1258
	0x000006B6 : pushz		66 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1259
	0x000006BA : mod	// , DrawQuestion, -1 - SAL : 1260
	0x000006BC : popz		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1261
	0x000006C0 : ujp		0x000006E2	// , DrawQuestion, -1 - SAL : 1262
	0x000006C6 : pushz		39 ( NextKey )	// , DrawQuestion, -1 - SAL : 1263
	0x000006CA : nejp		20		0x000006E2	// , DrawQuestion, -1 - SAL : 1264
	0x000006D2 : isetz		45 ( Variable )		65 ( Value of Function DrawQuestion )		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1265
	0x000006DA : zsetc		40 ( SelectedAnswer )		0	// , DrawQuestion, -1 - SAL : 1266
	0x000006E0 : ret	// , DrawQuestion, -1 - SAL : 1267
	0x000006E2 : pushc		0	// , DrawQuestion, -1 - SAL : 1268
	0x000006E6 : calls		SetColor(38)	// , DrawQuestion, -1 - SAL : 1269
	0x000006EA : pushc		6	// , DrawQuestion, -1 - SAL : 1270
	0x000006EE : pushc		233	// , DrawQuestion, -1 - SAL : 1271
	0x000006F2 : pushz		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1272
	0x000006F6 : pushc		14	// , DrawQuestion, -1 - SAL : 1273
	0x000006FA : mult	// , DrawQuestion, -1 - SAL : 1274
	0x000006FC : add	// , DrawQuestion, -1 - SAL : 1275
	0x000006FE : pushc		17	// , DrawQuestion, -1 - SAL : 1276
	0x00000702 : sub	// , DrawQuestion, -1 - SAL : 1277
	0x00000704 : pushc		233	// , DrawQuestion, -1 - SAL : 1278
	0x00000708 : pushc		247	// , DrawQuestion, -1 - SAL : 1279
	0x0000070C : pushz		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1280
	0x00000710 : pushc		14	// , DrawQuestion, -1 - SAL : 1281
	0x00000714 : mult	// , DrawQuestion, -1 - SAL : 1282
	0x00000716 : add	// , DrawQuestion, -1 - SAL : 1283
	0x00000718 : pushc		17	// , DrawQuestion, -1 - SAL : 1284
	0x0000071C : sub	// , DrawQuestion, -1 - SAL : 1285
	0x0000071E : pushc		3	// , DrawQuestion, -1 - SAL : 1286
	0x00000722 : calls		FillRectEx(71)	// , DrawQuestion, -1 - SAL : 1287
	0x00000726 : pushc		4	// , DrawQuestion, -1 - SAL : 1288
	0x0000072A : pushc		232	// , DrawQuestion, -1 - SAL : 1289
	0x0000072E : pushz		40 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1290
	0x00000732 : pushc		14	// , DrawQuestion, -1 - SAL : 1291
	0x00000736 : mult	// , DrawQuestion, -1 - SAL : 1292
	0x00000738 : add	// , DrawQuestion, -1 - SAL : 1293
	0x0000073A : pushc		17	// , DrawQuestion, -1 - SAL : 1294
	0x0000073E : sub	// , DrawQuestion, -1 - SAL : 1295
	0x00000740 : pushc		39	// , DrawQuestion, -1 - SAL : 1296
	0x00000744 : CopyImage	// , DrawQuestion, -1 - SAL : 1297
	0x00000746 : ret	// , DrawQuestion, -1 - SAL : 1298
}


FUNCTION : EVENT_KEYPRESS()
{
	0x00000748 : nop	// , EVENT_KEYPRESS, -1 - SAL : 1774
	0x0000074A : zsetz		39 ( NextKey )		0 ( swData )	// , EVENT_KEYPRESS, -1 - SAL : 1775
	0x00000750 : end	// , EVENT_KEYPRESS, -1 - SAL : 1776
}


FUNCTION : EVENT_TIMEOUT()
{
	0x00000752 : nop	// , EVENT_TIMEOUT, -1 - SAL : 1752
	0x00000754 : pushc		25	// , EVENT_TIMEOUT, -1 - SAL : 1753
	0x00000758 : calls		Clear(54)	// , EVENT_TIMEOUT, -1 - SAL : 1754
	0x0000075C : ssp	// , EVENT_TIMEOUT, -1 - SAL : 1755
	0x0000075E : pushz		0 ( swData )	// , EVENT_TIMEOUT, -1 - SAL : 1756
	0x00000762 : dup	// , EVENT_TIMEOUT, -1 - SAL : 1757
	0x00000764 : eqjp		0		0x00000788	// , EVENT_TIMEOUT, -1 - SAL : 1758
	0x0000076C : dup	// , EVENT_TIMEOUT, -1 - SAL : 1759
	0x0000076E : eqjp		1		0x00000788	// , EVENT_TIMEOUT, -1 - SAL : 1760
	0x00000776 : dup	// , EVENT_TIMEOUT, -1 - SAL : 1761
	0x00000778 : eqjp		2		0x000007A8	// , EVENT_TIMEOUT, -1 - SAL : 1762
	0x00000780 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 1763
	0x00000782 : ujp		0x000007AA	// , EVENT_TIMEOUT, -1 - SAL : 1764
	0x00000788 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 1765
	0x0000078A : call		0x00000088	// , EVENT_TIMEOUT, -1 - SAL : 1766
	0x00000790 : call		0x0000142C	// , EVENT_TIMEOUT, -1 - SAL : 1767
	0x00000796 : call		0x00000BE4	// , EVENT_TIMEOUT, -1 - SAL : 1768
	0x0000079C : call		0x00000130	// , EVENT_TIMEOUT, -1 - SAL : 1769
	0x000007A2 : ujp		0x000007AA	// , EVENT_TIMEOUT, -1 - SAL : 1770
	0x000007A8 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 1771
	0x000007AA : calls		Flush(95)	// , EVENT_TIMEOUT, -1 - SAL : 1772
	0x000007AE : end	// , EVENT_TIMEOUT, -1 - SAL : 1773
}


FUNCTION : ElseEqual()
{
	0x000007B0 : nop	// , ElseEqual, -1 - SAL : 1316
	0x000007B2 : popz		80 ( IfCount of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1317
	0x000007B6 : popz		79 ( Value2 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1318
	0x000007BA : stnz		78 ( Value1 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1319
	0x000007BE : pushi		45 ( Variable )		79 ( Value2 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1320
	0x000007C4 : ne	// , ElseEqual, -1 - SAL : 1321
	0x000007C6 : fjp		0x000007D2	// , ElseEqual, -1 - SAL : 1322
	0x000007CC : pushc		0	// , ElseEqual, -1 - SAL : 1323
	0x000007D0 : ret	// , ElseEqual, -1 - SAL : 1324
	0x000007D2 : pushz		80 ( IfCount of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1325
	0x000007D6 : ret	// , ElseEqual, -1 - SAL : 1326
}


FUNCTION : GetTotalDay()
{
	0x000007D8 : nop	// , GetTotalDay, -1 - SAL : 321
	0x000007DA : popz		49 ( Day of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 322
	0x000007DE : popz		48 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 323
	0x000007E2 : popz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 324
	0x000007E6 : zsetc		50 ( Total of Function GetTotalDay )		0	// , GetTotalDay, -1 - SAL : 325
	0x000007EC : zsetc		51 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 326
	0x000007F2 : pushz		51 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 327
	0x000007F6 : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 328
	0x000007FA : lt	// , GetTotalDay, -1 - SAL : 329
	0x000007FC : fjp		0x00000862	// , GetTotalDay, -1 - SAL : 330
	0x00000802 : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 331
	0x00000806 : pushc		4	// , GetTotalDay, -1 - SAL : 332
	0x0000080A : mod	// , GetTotalDay, -1 - SAL : 333
	0x0000080C : pushc		0	// , GetTotalDay, -1 - SAL : 334
	0x00000810 : eq	// , GetTotalDay, -1 - SAL : 335
	0x00000812 : dup	// , GetTotalDay, -1 - SAL : 336
	0x00000814 : fjp		0x0000082E	// , GetTotalDay, -1 - SAL : 337
	0x0000081A : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 338
	0x0000081E : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 339
	0x00000822 : pushc		100	// , GetTotalDay, -1 - SAL : 340
	0x00000826 : mod	// , GetTotalDay, -1 - SAL : 341
	0x00000828 : pushc		0	// , GetTotalDay, -1 - SAL : 342
	0x0000082C : ne	// , GetTotalDay, -1 - SAL : 343
	0x0000082E : dup	// , GetTotalDay, -1 - SAL : 344
	0x00000830 : tjp		0x0000084A	// , GetTotalDay, -1 - SAL : 345
	0x00000836 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 346
	0x0000083A : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 347
	0x0000083E : pushc		400	// , GetTotalDay, -1 - SAL : 348
	0x00000842 : mod	// , GetTotalDay, -1 - SAL : 349
	0x00000844 : pushc		0	// , GetTotalDay, -1 - SAL : 350
	0x00000848 : eq	// , GetTotalDay, -1 - SAL : 351
	0x0000084A : fjp		0x00000856	// , GetTotalDay, -1 - SAL : 352
	0x00000850 : incz		50 ( Total of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 353
	0x00000856 : incz		51 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 354
	0x0000085C : ujp		0x000007F2	// , GetTotalDay, -1 - SAL : 355
	0x00000862 : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 356
	0x00000866 : pushc		4	// , GetTotalDay, -1 - SAL : 357
	0x0000086A : mod	// , GetTotalDay, -1 - SAL : 358
	0x0000086C : pushc		0	// , GetTotalDay, -1 - SAL : 359
	0x00000870 : eq	// , GetTotalDay, -1 - SAL : 360
	0x00000872 : dup	// , GetTotalDay, -1 - SAL : 361
	0x00000874 : fjp		0x0000088E	// , GetTotalDay, -1 - SAL : 362
	0x0000087A : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 363
	0x0000087E : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 364
	0x00000882 : pushc		100	// , GetTotalDay, -1 - SAL : 365
	0x00000886 : mod	// , GetTotalDay, -1 - SAL : 366
	0x00000888 : pushc		0	// , GetTotalDay, -1 - SAL : 367
	0x0000088C : ne	// , GetTotalDay, -1 - SAL : 368
	0x0000088E : dup	// , GetTotalDay, -1 - SAL : 369
	0x00000890 : tjp		0x000008AA	// , GetTotalDay, -1 - SAL : 370
	0x00000896 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 371
	0x0000089A : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 372
	0x0000089E : pushc		400	// , GetTotalDay, -1 - SAL : 373
	0x000008A2 : mod	// , GetTotalDay, -1 - SAL : 374
	0x000008A4 : pushc		0	// , GetTotalDay, -1 - SAL : 375
	0x000008A8 : eq	// , GetTotalDay, -1 - SAL : 376
	0x000008AA : dup	// , GetTotalDay, -1 - SAL : 377
	0x000008AC : fjp		0x000008C0	// , GetTotalDay, -1 - SAL : 378
	0x000008B2 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 379
	0x000008B6 : pushz		48 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 380
	0x000008BA : pushc		2	// , GetTotalDay, -1 - SAL : 381
	0x000008BE : gt	// , GetTotalDay, -1 - SAL : 382
	0x000008C0 : fjp		0x000008CC	// , GetTotalDay, -1 - SAL : 383
	0x000008C6 : incz		50 ( Total of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 384
	0x000008CC : zsetc		51 ( i of Function GetTotalDay )		0	// , GetTotalDay, -1 - SAL : 385
	0x000008D2 : pushz		51 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 386
	0x000008D6 : pushz		48 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 387
	0x000008DA : dec	// , GetTotalDay, -1 - SAL : 388
	0x000008DC : lt	// , GetTotalDay, -1 - SAL : 389
	0x000008DE : fjp		0x00000900	// , GetTotalDay, -1 - SAL : 390
	0x000008E4 : pushz		50 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 391
	0x000008E8 : pushi		28 ( MONTH )		51 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 392
	0x000008EE : add	// , GetTotalDay, -1 - SAL : 393
	0x000008F0 : popz		50 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 394
	0x000008F4 : incz		51 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 395
	0x000008FA : ujp		0x000008D2	// , GetTotalDay, -1 - SAL : 396
	0x00000900 : pushz		50 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 397
	0x00000904 : pushz		47 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 398
	0x00000908 : pushc		365	// , GetTotalDay, -1 - SAL : 399
	0x0000090C : mult	// , GetTotalDay, -1 - SAL : 400
	0x0000090E : add	// , GetTotalDay, -1 - SAL : 401
	0x00000910 : stnz		50 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 402
	0x00000914 : addz		49 ( Day of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 403
	0x00000918 : stnz		50 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 405
	0x0000091C : ret	// , GetTotalDay, -1 - SAL : 406
}


FUNCTION : GetWeek()
{
	0x0000091E : nop	// , GetWeek, -1 - SAL : 407
	0x00000920 : popz		54 ( Day of Function GetWeek )	// , GetWeek, -1 - SAL : 408
	0x00000924 : popz		53 ( Month of Function GetWeek )	// , GetWeek, -1 - SAL : 409
	0x00000928 : stnz		52 ( Year of Function GetWeek )	// , GetWeek, -1 - SAL : 410
	0x0000092C : pushz		53 ( Month of Function GetWeek )	// , GetWeek, -1 - SAL : 411
	0x00000930 : pushz		54 ( Day of Function GetWeek )	// , GetWeek, -1 - SAL : 412
	0x00000934 : call		0x000007D8	// , GetWeek, -1 - SAL : 413
	0x0000093A : pushc		7	// , GetWeek, -1 - SAL : 414
	0x0000093E : mod	// , GetWeek, -1 - SAL : 415
	0x00000940 : ret	// , GetWeek, -1 - SAL : 416
}


FUNCTION : IfEqual()
{
	0x00000942 : nop	// , IfEqual, -1 - SAL : 1305
	0x00000944 : popz		77 ( ElseCount of Function IfEqual )	// , IfEqual, -1 - SAL : 1306
	0x00000948 : popz		76 ( Value2 of Function IfEqual )	// , IfEqual, -1 - SAL : 1307
	0x0000094C : stnz		75 ( Value1 of Function IfEqual )	// , IfEqual, -1 - SAL : 1308
	0x00000950 : pushi		45 ( Variable )		76 ( Value2 of Function IfEqual )	// , IfEqual, -1 - SAL : 1309
	0x00000956 : eq	// , IfEqual, -1 - SAL : 1310
	0x00000958 : fjp		0x00000964	// , IfEqual, -1 - SAL : 1311
	0x0000095E : pushc		0	// , IfEqual, -1 - SAL : 1312
	0x00000962 : ret	// , IfEqual, -1 - SAL : 1313
	0x00000964 : pushz		77 ( ElseCount of Function IfEqual )	// , IfEqual, -1 - SAL : 1314
	0x00000968 : ret	// , IfEqual, -1 - SAL : 1315
}


FUNCTION : InitEvent()
{
	0x0000096A : nop	// , InitEvent, -1 - SAL : 652
	0x0000096C : nsetc		32 ( They )		0		0	// , InitEvent, -1 - SAL : 653
	0x00000974 : nsetc		32 ( They )		2		1	// , InitEvent, -1 - SAL : 654
	0x0000097C : nsetc		32 ( They )		4		2	// , InitEvent, -1 - SAL : 655
	0x00000984 : ldric		32 ( They )		0	// , InitEvent, -1 - SAL : 656
	0x0000098A : inc	// , InitEvent, -1 - SAL : 657
	0x0000098C : pushc		50	// , InitEvent, -1 - SAL : 658
	0x00000990 : sta	// , InitEvent, -1 - SAL : 659
	0x00000992 : ldric		32 ( They )		2	// , InitEvent, -1 - SAL : 660
	0x00000998 : inc	// , InitEvent, -1 - SAL : 661
	0x0000099A : pushc		0	// , InitEvent, -1 - SAL : 662
	0x0000099E : sta	// , InitEvent, -1 - SAL : 663
	0x000009A0 : ldric		32 ( They )		4	// , InitEvent, -1 - SAL : 664
	0x000009A6 : inc	// , InitEvent, -1 - SAL : 665
	0x000009A8 : pushc		-50	// , InitEvent, -1 - SAL : 666
	0x000009AC : sta	// , InitEvent, -1 - SAL : 667
	0x000009AE : ret	// , InitEvent, -1 - SAL : 668
}


FUNCTION : InitNature()
{
	0x000009B0 : nop	// , InitNature, -1 - SAL : 623
	0x000009B2 : ldrz		31 ( Now )	// , InitNature, -1 - SAL : 624
	0x000009B6 : pushc		2008	// , InitNature, -1 - SAL : 625
	0x000009BA : sta	// , InitNature, -1 - SAL : 626
	0x000009BC : ldrz		31 ( Now )	// , InitNature, -1 - SAL : 627
	0x000009C0 : inc	// , InitNature, -1 - SAL : 628
	0x000009C2 : pushc		12	// , InitNature, -1 - SAL : 629
	0x000009C6 : sta	// , InitNature, -1 - SAL : 630
	0x000009C8 : addldrzc		31 ( Now )		2	// , InitNature, -1 - SAL : 631
	0x000009CE : pushc		25	// , InitNature, -1 - SAL : 634
	0x000009D2 : sta	// , InitNature, -1 - SAL : 635
	0x000009D4 : addldrzc		31 ( Now )		4	// , InitNature, -1 - SAL : 636
	0x000009DA : pushc		14	// , InitNature, -1 - SAL : 639
	0x000009DE : sta	// , InitNature, -1 - SAL : 640
	0x000009E0 : addldrzc		31 ( Now )		5	// , InitNature, -1 - SAL : 641
	0x000009E6 : pushc		34	// , InitNature, -1 - SAL : 644
	0x000009EA : sta	// , InitNature, -1 - SAL : 645
	0x000009EC : addldrzc		31 ( Now )		6	// , InitNature, -1 - SAL : 646
	0x000009F2 : pushc		0	// , InitNature, -1 - SAL : 649
	0x000009F6 : sta	// , InitNature, -1 - SAL : 650
	0x000009F8 : ret	// , InitNature, -1 - SAL : 651
}


FUNCTION : PassTime()
{
	0x000009FA : nop	// , PassTime, -1 - SAL : 1397
	0x000009FC : popz		92 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1398
	0x00000A00 : popz		91 ( Element of Function PassTime )	// , PassTime, -1 - SAL : 1399
	0x00000A04 : ssp	// , PassTime, -1 - SAL : 1400
	0x00000A06 : pushz		91 ( Element of Function PassTime )	// , PassTime, -1 - SAL : 1401
	0x00000A0A : dup	// , PassTime, -1 - SAL : 1402
	0x00000A0C : eqjp		0		0x00000A44	// , PassTime, -1 - SAL : 1403
	0x00000A14 : dup	// , PassTime, -1 - SAL : 1404
	0x00000A16 : eqjp		1		0x00000A5C	// , PassTime, -1 - SAL : 1405
	0x00000A1E : dup	// , PassTime, -1 - SAL : 1406
	0x00000A20 : eqjp		2		0x00000AB0	// , PassTime, -1 - SAL : 1407
	0x00000A28 : dup	// , PassTime, -1 - SAL : 1408
	0x00000A2A : eqjp		3		0x00000B64	// , PassTime, -1 - SAL : 1409
	0x00000A32 : dup	// , PassTime, -1 - SAL : 1410
	0x00000A34 : eqjp		4		0x00000B96	// , PassTime, -1 - SAL : 1411
	0x00000A3C : rsp	// , PassTime, -1 - SAL : 1412
	0x00000A3E : ujp		0x00000BE2	// , PassTime, -1 - SAL : 1413
	0x00000A44 : rsp	// , PassTime, -1 - SAL : 1414
	0x00000A46 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1415
	0x00000A4A : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1416
	0x00000A4E : ixa	// , PassTime, -1 - SAL : 1417
	0x00000A50 : addz		92 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1418
	0x00000A54 : sta	// , PassTime, -1 - SAL : 1420
	0x00000A56 : ujp		0x00000BE2	// , PassTime, -1 - SAL : 1421
	0x00000A5C : rsp	// , PassTime, -1 - SAL : 1422
	0x00000A5E : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1423
	0x00000A62 : inc	// , PassTime, -1 - SAL : 1424
	0x00000A64 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1425
	0x00000A68 : inc	// , PassTime, -1 - SAL : 1426
	0x00000A6A : ixa	// , PassTime, -1 - SAL : 1427
	0x00000A6C : addz		92 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1428
	0x00000A70 : sta	// , PassTime, -1 - SAL : 1430
	0x00000A72 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1431
	0x00000A76 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1432
	0x00000A7A : ixa	// , PassTime, -1 - SAL : 1433
	0x00000A7C : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1434
	0x00000A80 : inc	// , PassTime, -1 - SAL : 1435
	0x00000A82 : ixa	// , PassTime, -1 - SAL : 1436
	0x00000A84 : dec	// , PassTime, -1 - SAL : 1437
	0x00000A86 : pushc		12	// , PassTime, -1 - SAL : 1438
	0x00000A8A : div	// , PassTime, -1 - SAL : 1439
	0x00000A8C : add	// , PassTime, -1 - SAL : 1440
	0x00000A8E : sta	// , PassTime, -1 - SAL : 1441
	0x00000A90 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1442
	0x00000A94 : inc	// , PassTime, -1 - SAL : 1443
	0x00000A96 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1444
	0x00000A9A : inc	// , PassTime, -1 - SAL : 1445
	0x00000A9C : ixa	// , PassTime, -1 - SAL : 1446
	0x00000A9E : dec	// , PassTime, -1 - SAL : 1447
	0x00000AA0 : pushc		12	// , PassTime, -1 - SAL : 1448
	0x00000AA4 : mod	// , PassTime, -1 - SAL : 1449
	0x00000AA6 : inc	// , PassTime, -1 - SAL : 1450
	0x00000AA8 : sta	// , PassTime, -1 - SAL : 1451
	0x00000AAA : ujp		0x00000BE2	// , PassTime, -1 - SAL : 1452
	0x00000AB0 : rsp	// , PassTime, -1 - SAL : 1453
	0x00000AB2 : addldrzc		31 ( Now )		2	// , PassTime, -1 - SAL : 1454
	0x00000AB8 : addldrzc		31 ( Now )		2	// , PassTime, -1 - SAL : 1457
	0x00000ABE : ixa	// , PassTime, -1 - SAL : 1460
	0x00000AC0 : addz		92 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1461
	0x00000AC4 : sta	// , PassTime, -1 - SAL : 1463
	0x00000AC6 : pushz		93 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 1464
	0x00000ACA : addldrzc		31 ( Now )		2	// , PassTime, -1 - SAL : 1465
	0x00000AD0 : ixa	// , PassTime, -1 - SAL : 1468
	0x00000AD2 : dec	// , PassTime, -1 - SAL : 1469
	0x00000AD4 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1470
	0x00000AD8 : inc	// , PassTime, -1 - SAL : 1471
	0x00000ADA : ixa	// , PassTime, -1 - SAL : 1472
	0x00000ADC : ldrz		28 ( MONTH )	// , PassTime, -1 - SAL : 1473
	0x00000AE0 : add	// , PassTime, -1 - SAL : 1474
	0x00000AE2 : ixa	// , PassTime, -1 - SAL : 1475
	0x00000AE4 : div	// , PassTime, -1 - SAL : 1476
	0x00000AE6 : add	// , PassTime, -1 - SAL : 1477
	0x00000AE8 : popz		93 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 1478
	0x00000AEC : addldrzc		31 ( Now )		2	// , PassTime, -1 - SAL : 1479
	0x00000AF2 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1482
	0x00000AF6 : inc	// , PassTime, -1 - SAL : 1483
	0x00000AF8 : ixa	// , PassTime, -1 - SAL : 1484
	0x00000AFA : dec	// , PassTime, -1 - SAL : 1485
	0x00000AFC : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1486
	0x00000B00 : inc	// , PassTime, -1 - SAL : 1487
	0x00000B02 : ixa	// , PassTime, -1 - SAL : 1488
	0x00000B04 : ldrz		28 ( MONTH )	// , PassTime, -1 - SAL : 1489
	0x00000B08 : add	// , PassTime, -1 - SAL : 1490
	0x00000B0A : ixa	// , PassTime, -1 - SAL : 1491
	0x00000B0C : mod	// , PassTime, -1 - SAL : 1492
	0x00000B0E : inc	// , PassTime, -1 - SAL : 1493
	0x00000B10 : sta	// , PassTime, -1 - SAL : 1494
	0x00000B12 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1495
	0x00000B16 : inc	// , PassTime, -1 - SAL : 1496
	0x00000B18 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1497
	0x00000B1C : inc	// , PassTime, -1 - SAL : 1498
	0x00000B1E : ixa	// , PassTime, -1 - SAL : 1499
	0x00000B20 : addz		93 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 1500
	0x00000B24 : sta	// , PassTime, -1 - SAL : 1502
	0x00000B26 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1503
	0x00000B2A : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1504
	0x00000B2E : ixa	// , PassTime, -1 - SAL : 1505
	0x00000B30 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1506
	0x00000B34 : inc	// , PassTime, -1 - SAL : 1507
	0x00000B36 : ixa	// , PassTime, -1 - SAL : 1508
	0x00000B38 : dec	// , PassTime, -1 - SAL : 1509
	0x00000B3A : pushc		12	// , PassTime, -1 - SAL : 1510
	0x00000B3E : div	// , PassTime, -1 - SAL : 1511
	0x00000B40 : add	// , PassTime, -1 - SAL : 1512
	0x00000B42 : sta	// , PassTime, -1 - SAL : 1513
	0x00000B44 : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1514
	0x00000B48 : inc	// , PassTime, -1 - SAL : 1515
	0x00000B4A : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1516
	0x00000B4E : inc	// , PassTime, -1 - SAL : 1517
	0x00000B50 : ixa	// , PassTime, -1 - SAL : 1518
	0x00000B52 : dec	// , PassTime, -1 - SAL : 1519
	0x00000B54 : pushc		12	// , PassTime, -1 - SAL : 1520
	0x00000B58 : mod	// , PassTime, -1 - SAL : 1521
	0x00000B5A : inc	// , PassTime, -1 - SAL : 1522
	0x00000B5C : sta	// , PassTime, -1 - SAL : 1523
	0x00000B5E : ujp		0x00000BE2	// , PassTime, -1 - SAL : 1524
	0x00000B64 : rsp	// , PassTime, -1 - SAL : 1525
	0x00000B66 : addldrzc		31 ( Now )		4	// , PassTime, -1 - SAL : 1526
	0x00000B6C : addldrzc		31 ( Now )		4	// , PassTime, -1 - SAL : 1529
	0x00000B72 : ixa	// , PassTime, -1 - SAL : 1532
	0x00000B74 : addz		92 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1533
	0x00000B78 : sta	// , PassTime, -1 - SAL : 1535
	0x00000B7A : addldrzc		31 ( Now )		4	// , PassTime, -1 - SAL : 1536
	0x00000B80 : addldrzc		31 ( Now )		4	// , PassTime, -1 - SAL : 1539
	0x00000B86 : ixa	// , PassTime, -1 - SAL : 1542
	0x00000B88 : pushc		24	// , PassTime, -1 - SAL : 1543
	0x00000B8C : mod	// , PassTime, -1 - SAL : 1544
	0x00000B8E : sta	// , PassTime, -1 - SAL : 1545
	0x00000B90 : ujp		0x00000BE2	// , PassTime, -1 - SAL : 1546
	0x00000B96 : rsp	// , PassTime, -1 - SAL : 1547
	0x00000B98 : addldrzc		31 ( Now )		5	// , PassTime, -1 - SAL : 1548
	0x00000B9E : addldrzc		31 ( Now )		5	// , PassTime, -1 - SAL : 1551
	0x00000BA4 : ixa	// , PassTime, -1 - SAL : 1554
	0x00000BA6 : addz		92 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1555
	0x00000BAA : sta	// , PassTime, -1 - SAL : 1557
	0x00000BAC : addldrzc		31 ( Now )		4	// , PassTime, -1 - SAL : 1558
	0x00000BB2 : addldrzc		31 ( Now )		4	// , PassTime, -1 - SAL : 1561
	0x00000BB8 : ixa	// , PassTime, -1 - SAL : 1564
	0x00000BBA : ldrz		31 ( Now )	// , PassTime, -1 - SAL : 1565
	0x00000BBE : inc	// , PassTime, -1 - SAL : 1566
	0x00000BC0 : ixa	// , PassTime, -1 - SAL : 1567
	0x00000BC2 : pushc		60	// , PassTime, -1 - SAL : 1568
	0x00000BC6 : div	// , PassTime, -1 - SAL : 1569
	0x00000BC8 : add	// , PassTime, -1 - SAL : 1570
	0x00000BCA : sta	// , PassTime, -1 - SAL : 1571
	0x00000BCC : addldrzc		31 ( Now )		5	// , PassTime, -1 - SAL : 1572
	0x00000BD2 : addldrzc		31 ( Now )		5	// , PassTime, -1 - SAL : 1575
	0x00000BD8 : ixa	// , PassTime, -1 - SAL : 1578
	0x00000BDA : pushc		60	// , PassTime, -1 - SAL : 1579
	0x00000BDE : mod	// , PassTime, -1 - SAL : 1580
	0x00000BE0 : sta	// , PassTime, -1 - SAL : 1581
	0x00000BE2 : ret	// , PassTime, -1 - SAL : 1582
}


FUNCTION : RunEventLine()
{
	0x00000BE4 : nop	// , RunEventLine, -1 - SAL : 839
	0x00000BE6 : ssp	// , RunEventLine, -1 - SAL : 840
	0x00000BE8 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 841
	0x00000BEC : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 842
	0x00000BF2 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 843
	0x00000BF6 : add	// , RunEventLine, -1 - SAL : 844
	0x00000BF8 : ixa	// , RunEventLine, -1 - SAL : 845
	0x00000BFA : dup	// , RunEventLine, -1 - SAL : 846
	0x00000BFC : eqjp		-1		0x00000C5A	// , RunEventLine, -1 - SAL : 847
	0x00000C04 : dup	// , RunEventLine, -1 - SAL : 848
	0x00000C06 : eqjp		0		0x00000C68	// , RunEventLine, -1 - SAL : 849
	0x00000C0E : dup	// , RunEventLine, -1 - SAL : 850
	0x00000C10 : eqjp		1		0x00000CB8	// , RunEventLine, -1 - SAL : 851
	0x00000C18 : dup	// , RunEventLine, -1 - SAL : 852
	0x00000C1A : eqjp		2		0x00000D4A	// , RunEventLine, -1 - SAL : 853
	0x00000C22 : dup	// , RunEventLine, -1 - SAL : 854
	0x00000C24 : eqjp		3		0x00000D7C	// , RunEventLine, -1 - SAL : 855
	0x00000C2C : dup	// , RunEventLine, -1 - SAL : 856
	0x00000C2E : eqjp		4		0x00000DC0	// , RunEventLine, -1 - SAL : 857
	0x00000C36 : dup	// , RunEventLine, -1 - SAL : 858
	0x00000C38 : eqjp		5		0x00000E04	// , RunEventLine, -1 - SAL : 859
	0x00000C40 : dup	// , RunEventLine, -1 - SAL : 860
	0x00000C42 : eqjp		6		0x00000E54	// , RunEventLine, -1 - SAL : 861
	0x00000C4A : dup	// , RunEventLine, -1 - SAL : 862
	0x00000C4C : eqjp		7		0x00000E86	// , RunEventLine, -1 - SAL : 863
	0x00000C54 : ujp		0x00000E8E	// , RunEventLine, -1 - SAL : 864
	0x00000C5A : rsp	// , RunEventLine, -1 - SAL : 865
	0x00000C5C : zsetc		41 ( EventPointer )		0	// , RunEventLine, -1 - SAL : 866
	0x00000C62 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 867
	0x00000C68 : rsp	// , RunEventLine, -1 - SAL : 868
	0x00000C6A : pushz		39 ( NextKey )	// , RunEventLine, -1 - SAL : 869
	0x00000C6E : nejp		20		0x00000C94	// , RunEventLine, -1 - SAL : 870
	0x00000C76 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 871
	0x00000C7A : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 872
	0x00000C80 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 873
	0x00000C84 : add	// , RunEventLine, -1 - SAL : 874
	0x00000C86 : ixa	// , RunEventLine, -1 - SAL : 875
	0x00000C88 : call		0x00000308	// , RunEventLine, -1 - SAL : 876
	0x00000C8E : ujp		0x00000CAC	// , RunEventLine, -1 - SAL : 877
	0x00000C94 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 878
	0x00000C98 : incz		41 ( EventPointer )		-1	// , RunEventLine, -1 - SAL : 879
	0x00000C9E : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 880
	0x00000CA2 : add	// , RunEventLine, -1 - SAL : 881
	0x00000CA4 : ixa	// , RunEventLine, -1 - SAL : 882
	0x00000CA6 : call		0x00000308	// , RunEventLine, -1 - SAL : 883
	0x00000CAC : zsetc		39 ( NextKey )		-1	// , RunEventLine, -1 - SAL : 884
	0x00000CB2 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 885
	0x00000CB8 : rsp	// , RunEventLine, -1 - SAL : 886
	0x00000CBA : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 887
	0x00000CBE : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 888
	0x00000CC4 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 889
	0x00000CC8 : add	// , RunEventLine, -1 - SAL : 890
	0x00000CCA : ixa	// , RunEventLine, -1 - SAL : 891
	0x00000CCC : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 892
	0x00000CD0 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 893
	0x00000CD6 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 894
	0x00000CDA : add	// , RunEventLine, -1 - SAL : 895
	0x00000CDC : ixa	// , RunEventLine, -1 - SAL : 896
	0x00000CDE : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 897
	0x00000CE2 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 898
	0x00000CE8 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 899
	0x00000CEC : add	// , RunEventLine, -1 - SAL : 900
	0x00000CEE : ixa	// , RunEventLine, -1 - SAL : 901
	0x00000CF0 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 902
	0x00000CF4 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 903
	0x00000CFA : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 904
	0x00000CFE : add	// , RunEventLine, -1 - SAL : 905
	0x00000D00 : ixa	// , RunEventLine, -1 - SAL : 906
	0x00000D02 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 907
	0x00000D06 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 908
	0x00000D0C : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 909
	0x00000D10 : add	// , RunEventLine, -1 - SAL : 910
	0x00000D12 : ixa	// , RunEventLine, -1 - SAL : 911
	0x00000D14 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 912
	0x00000D18 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 913
	0x00000D1E : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 914
	0x00000D22 : add	// , RunEventLine, -1 - SAL : 915
	0x00000D24 : ixa	// , RunEventLine, -1 - SAL : 916
	0x00000D26 : call		0x0000051E	// , RunEventLine, -1 - SAL : 917
	0x00000D2C : pushz		39 ( NextKey )	// , RunEventLine, -1 - SAL : 918
	0x00000D30 : eqjp		20		0x00000D3E	// , RunEventLine, -1 - SAL : 919
	0x00000D38 : incz		41 ( EventPointer )		-7	// , RunEventLine, -1 - SAL : 920
	0x00000D3E : zsetc		39 ( NextKey )		-1	// , RunEventLine, -1 - SAL : 921
	0x00000D44 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 922
	0x00000D4A : rsp	// , RunEventLine, -1 - SAL : 923
	0x00000D4C : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 924
	0x00000D50 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 925
	0x00000D56 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 926
	0x00000D5A : add	// , RunEventLine, -1 - SAL : 927
	0x00000D5C : ixa	// , RunEventLine, -1 - SAL : 928
	0x00000D5E : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 929
	0x00000D62 : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 930
	0x00000D68 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 931
	0x00000D6C : add	// , RunEventLine, -1 - SAL : 932
	0x00000D6E : ixa	// , RunEventLine, -1 - SAL : 933
	0x00000D70 : call		0x0000121E	// , RunEventLine, -1 - SAL : 934
	0x00000D76 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 935
	0x00000D7C : rsp	// , RunEventLine, -1 - SAL : 936
	0x00000D7E : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 937
	0x00000D82 : pushc		3	// , RunEventLine, -1 - SAL : 938
	0x00000D86 : pushi		38 ( EventLine )		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 939
	0x00000D8C : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 940
	0x00000D90 : inc	// , RunEventLine, -1 - SAL : 941
	0x00000D92 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 942
	0x00000D96 : add	// , RunEventLine, -1 - SAL : 943
	0x00000D98 : ixa	// , RunEventLine, -1 - SAL : 944
	0x00000D9A : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 945
	0x00000D9E : pushc		2	// , RunEventLine, -1 - SAL : 946
	0x00000DA2 : add	// , RunEventLine, -1 - SAL : 947
	0x00000DA4 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 948
	0x00000DA8 : add	// , RunEventLine, -1 - SAL : 949
	0x00000DAA : ixa	// , RunEventLine, -1 - SAL : 950
	0x00000DAC : call		0x00000942	// , RunEventLine, -1 - SAL : 951
	0x00000DB2 : add	// , RunEventLine, -1 - SAL : 952
	0x00000DB4 : add	// , RunEventLine, -1 - SAL : 953
	0x00000DB6 : popz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 954
	0x00000DBA : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 955
	0x00000DC0 : rsp	// , RunEventLine, -1 - SAL : 956
	0x00000DC2 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 957
	0x00000DC6 : pushc		3	// , RunEventLine, -1 - SAL : 958
	0x00000DCA : pushi		38 ( EventLine )		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 959
	0x00000DD0 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 960
	0x00000DD4 : inc	// , RunEventLine, -1 - SAL : 961
	0x00000DD6 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 962
	0x00000DDA : add	// , RunEventLine, -1 - SAL : 963
	0x00000DDC : ixa	// , RunEventLine, -1 - SAL : 964
	0x00000DDE : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 965
	0x00000DE2 : pushc		2	// , RunEventLine, -1 - SAL : 966
	0x00000DE6 : add	// , RunEventLine, -1 - SAL : 967
	0x00000DE8 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 968
	0x00000DEC : add	// , RunEventLine, -1 - SAL : 969
	0x00000DEE : ixa	// , RunEventLine, -1 - SAL : 970
	0x00000DF0 : call		0x000007B0	// , RunEventLine, -1 - SAL : 971
	0x00000DF6 : add	// , RunEventLine, -1 - SAL : 972
	0x00000DF8 : add	// , RunEventLine, -1 - SAL : 973
	0x00000DFA : popz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 974
	0x00000DFE : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 975
	0x00000E04 : rsp	// , RunEventLine, -1 - SAL : 976
	0x00000E06 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 977
	0x00000E0A : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 978
	0x00000E10 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 979
	0x00000E14 : add	// , RunEventLine, -1 - SAL : 980
	0x00000E16 : ixa	// , RunEventLine, -1 - SAL : 981
	0x00000E18 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 982
	0x00000E1C : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 983
	0x00000E22 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 984
	0x00000E26 : add	// , RunEventLine, -1 - SAL : 985
	0x00000E28 : ixa	// , RunEventLine, -1 - SAL : 986
	0x00000E2A : call		0x000011BE	// , RunEventLine, -1 - SAL : 987
	0x00000E30 : pushz		44 ( EffectFrame )	// , RunEventLine, -1 - SAL : 988
	0x00000E34 : gejp		10		0x00000E48	// , RunEventLine, -1 - SAL : 989
	0x00000E3C : incz		41 ( EventPointer )		-3	// , RunEventLine, -1 - SAL : 990
	0x00000E42 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 991
	0x00000E48 : zsetc		44 ( EffectFrame )		0	// , RunEventLine, -1 - SAL : 992
	0x00000E4E : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 993
	0x00000E54 : rsp	// , RunEventLine, -1 - SAL : 994
	0x00000E56 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 995
	0x00000E5A : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 996
	0x00000E60 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 997
	0x00000E64 : add	// , RunEventLine, -1 - SAL : 998
	0x00000E66 : ixa	// , RunEventLine, -1 - SAL : 999
	0x00000E68 : pushz		41 ( EventPointer )	// , RunEventLine, -1 - SAL : 1000
	0x00000E6C : incz		41 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1001
	0x00000E72 : ldrz		38 ( EventLine )	// , RunEventLine, -1 - SAL : 1002
	0x00000E76 : add	// , RunEventLine, -1 - SAL : 1003
	0x00000E78 : ixa	// , RunEventLine, -1 - SAL : 1004
	0x00000E7A : call		0x00001206	// , RunEventLine, -1 - SAL : 1005
	0x00000E80 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 1006
	0x00000E86 : rsp	// , RunEventLine, -1 - SAL : 1007
	0x00000E88 : ujp		0x00000E96	// , RunEventLine, -1 - SAL : 1008
	0x00000E8E : rsp	// , RunEventLine, -1 - SAL : 1009
	0x00000E90 : zsetc		41 ( EventPointer )		0	// , RunEventLine, -1 - SAL : 1010
	0x00000E96 : ret	// , RunEventLine, -1 - SAL : 1011
}


FUNCTION : ScreenEffect()
{
	0x00000E98 : nop	// , ScreenEffect, -1 - SAL : 417
	0x00000E9A : popz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 418
	0x00000E9E : popz		55 ( Type of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 419
	0x00000EA2 : ssp	// , ScreenEffect, -1 - SAL : 420
	0x00000EA4 : pushz		55 ( Type of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 421
	0x00000EA8 : dup	// , ScreenEffect, -1 - SAL : 422
	0x00000EAA : eqjp		0		0x00000EC4	// , ScreenEffect, -1 - SAL : 423
	0x00000EB2 : dup	// , ScreenEffect, -1 - SAL : 424
	0x00000EB4 : eqjp		1		0x0000101E	// , ScreenEffect, -1 - SAL : 425
	0x00000EBC : rsp	// , ScreenEffect, -1 - SAL : 426
	0x00000EBE : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 427
	0x00000EC4 : rsp	// , ScreenEffect, -1 - SAL : 428
	0x00000EC6 : ssp	// , ScreenEffect, -1 - SAL : 429
	0x00000EC8 : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 430
	0x00000ECC : dup	// , ScreenEffect, -1 - SAL : 431
	0x00000ECE : eqjp		0		0x00000F38	// , ScreenEffect, -1 - SAL : 432
	0x00000ED6 : dup	// , ScreenEffect, -1 - SAL : 433
	0x00000ED8 : eqjp		1		0x00000F58	// , ScreenEffect, -1 - SAL : 434
	0x00000EE0 : dup	// , ScreenEffect, -1 - SAL : 435
	0x00000EE2 : eqjp		2		0x00000F78	// , ScreenEffect, -1 - SAL : 436
	0x00000EEA : dup	// , ScreenEffect, -1 - SAL : 437
	0x00000EEC : eqjp		3		0x00000F98	// , ScreenEffect, -1 - SAL : 438
	0x00000EF4 : dup	// , ScreenEffect, -1 - SAL : 439
	0x00000EF6 : eqjp		4		0x00000F98	// , ScreenEffect, -1 - SAL : 440
	0x00000EFE : dup	// , ScreenEffect, -1 - SAL : 441
	0x00000F00 : eqjp		5		0x00000F98	// , ScreenEffect, -1 - SAL : 442
	0x00000F08 : dup	// , ScreenEffect, -1 - SAL : 443
	0x00000F0A : eqjp		6		0x00000F98	// , ScreenEffect, -1 - SAL : 444
	0x00000F12 : dup	// , ScreenEffect, -1 - SAL : 445
	0x00000F14 : eqjp		7		0x00000FB8	// , ScreenEffect, -1 - SAL : 446
	0x00000F1C : dup	// , ScreenEffect, -1 - SAL : 447
	0x00000F1E : eqjp		8		0x00000FD8	// , ScreenEffect, -1 - SAL : 448
	0x00000F26 : dup	// , ScreenEffect, -1 - SAL : 449
	0x00000F28 : eqjp		9		0x00000FF8	// , ScreenEffect, -1 - SAL : 450
	0x00000F30 : rsp	// , ScreenEffect, -1 - SAL : 451
	0x00000F32 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 452
	0x00000F38 : rsp	// , ScreenEffect, -1 - SAL : 453
	0x00000F3A : pushc		0	// , ScreenEffect, -1 - SAL : 454
	0x00000F3E : pushc		20	// , ScreenEffect, -1 - SAL : 455
	0x00000F42 : pushc		239	// , ScreenEffect, -1 - SAL : 456
	0x00000F46 : pushc		280	// , ScreenEffect, -1 - SAL : 457
	0x00000F4A : pushc		3	// , ScreenEffect, -1 - SAL : 458
	0x00000F4E : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 459
	0x00000F52 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 460
	0x00000F58 : rsp	// , ScreenEffect, -1 - SAL : 461
	0x00000F5A : pushc		0	// , ScreenEffect, -1 - SAL : 462
	0x00000F5E : pushc		20	// , ScreenEffect, -1 - SAL : 463
	0x00000F62 : pushc		239	// , ScreenEffect, -1 - SAL : 464
	0x00000F66 : pushc		280	// , ScreenEffect, -1 - SAL : 465
	0x00000F6A : pushc		2	// , ScreenEffect, -1 - SAL : 466
	0x00000F6E : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 467
	0x00000F72 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 468
	0x00000F78 : rsp	// , ScreenEffect, -1 - SAL : 469
	0x00000F7A : pushc		0	// , ScreenEffect, -1 - SAL : 470
	0x00000F7E : pushc		20	// , ScreenEffect, -1 - SAL : 471
	0x00000F82 : pushc		239	// , ScreenEffect, -1 - SAL : 472
	0x00000F86 : pushc		280	// , ScreenEffect, -1 - SAL : 473
	0x00000F8A : pushc		1	// , ScreenEffect, -1 - SAL : 474
	0x00000F8E : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 475
	0x00000F92 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 476
	0x00000F98 : rsp	// , ScreenEffect, -1 - SAL : 477
	0x00000F9A : pushc		0	// , ScreenEffect, -1 - SAL : 478
	0x00000F9E : pushc		20	// , ScreenEffect, -1 - SAL : 479
	0x00000FA2 : pushc		239	// , ScreenEffect, -1 - SAL : 480
	0x00000FA6 : pushc		280	// , ScreenEffect, -1 - SAL : 481
	0x00000FAA : pushc		0	// , ScreenEffect, -1 - SAL : 482
	0x00000FAE : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 483
	0x00000FB2 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 484
	0x00000FB8 : rsp	// , ScreenEffect, -1 - SAL : 485
	0x00000FBA : pushc		0	// , ScreenEffect, -1 - SAL : 486
	0x00000FBE : pushc		20	// , ScreenEffect, -1 - SAL : 487
	0x00000FC2 : pushc		239	// , ScreenEffect, -1 - SAL : 488
	0x00000FC6 : pushc		280	// , ScreenEffect, -1 - SAL : 489
	0x00000FCA : pushc		1	// , ScreenEffect, -1 - SAL : 490
	0x00000FCE : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 491
	0x00000FD2 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 492
	0x00000FD8 : rsp	// , ScreenEffect, -1 - SAL : 493
	0x00000FDA : pushc		0	// , ScreenEffect, -1 - SAL : 494
	0x00000FDE : pushc		20	// , ScreenEffect, -1 - SAL : 495
	0x00000FE2 : pushc		239	// , ScreenEffect, -1 - SAL : 496
	0x00000FE6 : pushc		280	// , ScreenEffect, -1 - SAL : 497
	0x00000FEA : pushc		2	// , ScreenEffect, -1 - SAL : 498
	0x00000FEE : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 499
	0x00000FF2 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 500
	0x00000FF8 : rsp	// , ScreenEffect, -1 - SAL : 501
	0x00000FFA : pushc		0	// , ScreenEffect, -1 - SAL : 502
	0x00000FFE : pushc		20	// , ScreenEffect, -1 - SAL : 503
	0x00001002 : pushc		239	// , ScreenEffect, -1 - SAL : 504
	0x00001006 : pushc		280	// , ScreenEffect, -1 - SAL : 505
	0x0000100A : pushc		3	// , ScreenEffect, -1 - SAL : 506
	0x0000100E : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 507
	0x00001012 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 508
	0x00001018 : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 509
	0x0000101E : rsp	// , ScreenEffect, -1 - SAL : 510
	0x00001020 : ssp	// , ScreenEffect, -1 - SAL : 511
	0x00001022 : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 512
	0x00001026 : dup	// , ScreenEffect, -1 - SAL : 513
	0x00001028 : eqjp		0		0x00001092	// , ScreenEffect, -1 - SAL : 514
	0x00001030 : dup	// , ScreenEffect, -1 - SAL : 515
	0x00001032 : eqjp		1		0x00001092	// , ScreenEffect, -1 - SAL : 516
	0x0000103A : dup	// , ScreenEffect, -1 - SAL : 517
	0x0000103C : eqjp		2		0x00001092	// , ScreenEffect, -1 - SAL : 518
	0x00001044 : dup	// , ScreenEffect, -1 - SAL : 519
	0x00001046 : eqjp		3		0x00001092	// , ScreenEffect, -1 - SAL : 520
	0x0000104E : dup	// , ScreenEffect, -1 - SAL : 521
	0x00001050 : eqjp		4		0x00001092	// , ScreenEffect, -1 - SAL : 522
	0x00001058 : dup	// , ScreenEffect, -1 - SAL : 523
	0x0000105A : eqjp		5		0x00001122	// , ScreenEffect, -1 - SAL : 524
	0x00001062 : dup	// , ScreenEffect, -1 - SAL : 525
	0x00001064 : eqjp		6		0x00001122	// , ScreenEffect, -1 - SAL : 526
	0x0000106C : dup	// , ScreenEffect, -1 - SAL : 527
	0x0000106E : eqjp		7		0x00001122	// , ScreenEffect, -1 - SAL : 528
	0x00001076 : dup	// , ScreenEffect, -1 - SAL : 529
	0x00001078 : eqjp		8		0x00001122	// , ScreenEffect, -1 - SAL : 530
	0x00001080 : dup	// , ScreenEffect, -1 - SAL : 531
	0x00001082 : eqjp		9		0x00001122	// , ScreenEffect, -1 - SAL : 532
	0x0000108A : rsp	// , ScreenEffect, -1 - SAL : 533
	0x0000108C : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 534
	0x00001092 : rsp	// , ScreenEffect, -1 - SAL : 535
	0x00001094 : pushc		0	// , ScreenEffect, -1 - SAL : 536
	0x00001098 : pushc		280	// , ScreenEffect, -1 - SAL : 537
	0x0000109C : pushc		239	// , ScreenEffect, -1 - SAL : 538
	0x000010A0 : pushc		280	// , ScreenEffect, -1 - SAL : 539
	0x000010A4 : pushc		28	// , ScreenEffect, -1 - SAL : 540
	0x000010A8 : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 541
	0x000010AC : inc	// , ScreenEffect, -1 - SAL : 542
	0x000010AE : mult	// , ScreenEffect, -1 - SAL : 543
	0x000010B0 : sub	// , ScreenEffect, -1 - SAL : 544
	0x000010B2 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 545
	0x000010B6 : pushc		0	// , ScreenEffect, -1 - SAL : 546
	0x000010BA : pushc		20	// , ScreenEffect, -1 - SAL : 547
	0x000010BE : pushc		239	// , ScreenEffect, -1 - SAL : 548
	0x000010C2 : pushc		20	// , ScreenEffect, -1 - SAL : 549
	0x000010C6 : pushc		28	// , ScreenEffect, -1 - SAL : 550
	0x000010CA : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 551
	0x000010CE : inc	// , ScreenEffect, -1 - SAL : 552
	0x000010D0 : mult	// , ScreenEffect, -1 - SAL : 553
	0x000010D2 : add	// , ScreenEffect, -1 - SAL : 554
	0x000010D4 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 555
	0x000010D8 : pushc		239	// , ScreenEffect, -1 - SAL : 556
	0x000010DC : pushc		20	// , ScreenEffect, -1 - SAL : 557
	0x000010E0 : pushc		239	// , ScreenEffect, -1 - SAL : 558
	0x000010E4 : pushc		23	// , ScreenEffect, -1 - SAL : 559
	0x000010E8 : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 560
	0x000010EC : inc	// , ScreenEffect, -1 - SAL : 561
	0x000010EE : mult	// , ScreenEffect, -1 - SAL : 562
	0x000010F0 : sub	// , ScreenEffect, -1 - SAL : 563
	0x000010F2 : pushc		280	// , ScreenEffect, -1 - SAL : 564
	0x000010F6 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 565
	0x000010FA : pushc		0	// , ScreenEffect, -1 - SAL : 566
	0x000010FE : pushc		20	// , ScreenEffect, -1 - SAL : 567
	0x00001102 : pushc		0	// , ScreenEffect, -1 - SAL : 568
	0x00001106 : pushc		23	// , ScreenEffect, -1 - SAL : 569
	0x0000110A : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 570
	0x0000110E : inc	// , ScreenEffect, -1 - SAL : 571
	0x00001110 : mult	// , ScreenEffect, -1 - SAL : 572
	0x00001112 : add	// , ScreenEffect, -1 - SAL : 573
	0x00001114 : pushc		280	// , ScreenEffect, -1 - SAL : 574
	0x00001118 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 575
	0x0000111C : ujp		0x000011BC	// , ScreenEffect, -1 - SAL : 576
	0x00001122 : rsp	// , ScreenEffect, -1 - SAL : 577
	0x00001124 : pushc		0	// , ScreenEffect, -1 - SAL : 578
	0x00001128 : pushc		280	// , ScreenEffect, -1 - SAL : 579
	0x0000112C : pushc		239	// , ScreenEffect, -1 - SAL : 580
	0x00001130 : pushc		280	// , ScreenEffect, -1 - SAL : 581
	0x00001134 : pushc		28	// , ScreenEffect, -1 - SAL : 582
	0x00001138 : pushc		10	// , ScreenEffect, -1 - SAL : 583
	0x0000113C : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 584
	0x00001140 : sub	// , ScreenEffect, -1 - SAL : 585
	0x00001142 : mult	// , ScreenEffect, -1 - SAL : 586
	0x00001144 : sub	// , ScreenEffect, -1 - SAL : 587
	0x00001146 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 588
	0x0000114A : pushc		0	// , ScreenEffect, -1 - SAL : 589
	0x0000114E : pushc		20	// , ScreenEffect, -1 - SAL : 590
	0x00001152 : pushc		239	// , ScreenEffect, -1 - SAL : 591
	0x00001156 : pushc		20	// , ScreenEffect, -1 - SAL : 592
	0x0000115A : pushc		28	// , ScreenEffect, -1 - SAL : 593
	0x0000115E : pushc		10	// , ScreenEffect, -1 - SAL : 594
	0x00001162 : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 595
	0x00001166 : sub	// , ScreenEffect, -1 - SAL : 596
	0x00001168 : mult	// , ScreenEffect, -1 - SAL : 597
	0x0000116A : add	// , ScreenEffect, -1 - SAL : 598
	0x0000116C : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 599
	0x00001170 : pushc		239	// , ScreenEffect, -1 - SAL : 600
	0x00001174 : pushc		20	// , ScreenEffect, -1 - SAL : 601
	0x00001178 : pushc		239	// , ScreenEffect, -1 - SAL : 602
	0x0000117C : pushc		23	// , ScreenEffect, -1 - SAL : 603
	0x00001180 : pushc		10	// , ScreenEffect, -1 - SAL : 604
	0x00001184 : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 605
	0x00001188 : sub	// , ScreenEffect, -1 - SAL : 606
	0x0000118A : mult	// , ScreenEffect, -1 - SAL : 607
	0x0000118C : sub	// , ScreenEffect, -1 - SAL : 608
	0x0000118E : pushc		280	// , ScreenEffect, -1 - SAL : 609
	0x00001192 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 610
	0x00001196 : pushc		0	// , ScreenEffect, -1 - SAL : 611
	0x0000119A : pushc		20	// , ScreenEffect, -1 - SAL : 612
	0x0000119E : pushc		0	// , ScreenEffect, -1 - SAL : 613
	0x000011A2 : pushc		23	// , ScreenEffect, -1 - SAL : 614
	0x000011A6 : pushc		10	// , ScreenEffect, -1 - SAL : 615
	0x000011AA : pushz		56 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 616
	0x000011AE : sub	// , ScreenEffect, -1 - SAL : 617
	0x000011B0 : mult	// , ScreenEffect, -1 - SAL : 618
	0x000011B2 : add	// , ScreenEffect, -1 - SAL : 619
	0x000011B4 : pushc		280	// , ScreenEffect, -1 - SAL : 620
	0x000011B8 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 621
	0x000011BC : ret	// , ScreenEffect, -1 - SAL : 622
}


FUNCTION : SetBackground()
{
	0x000011BE : nop	// , SetBackground, -1 - SAL : 1327
	0x000011C0 : popz		82 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 1328
	0x000011C4 : popz		81 ( Layer of Function SetBackground )	// , SetBackground, -1 - SAL : 1329
	0x000011C8 : pushz		44 ( EffectFrame )	// , SetBackground, -1 - SAL : 1330
	0x000011CC : nejp		0		0x000011E2	// , SetBackground, -1 - SAL : 1331
	0x000011D4 : isetz		33 ( Background )		81 ( Layer of Function SetBackground )		82 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 1332
	0x000011DC : ujp		0x000011F0	// , SetBackground, -1 - SAL : 1333
	0x000011E2 : pushz		44 ( EffectFrame )	// , SetBackground, -1 - SAL : 1334
	0x000011E6 : lejp		10		0x000011F0	// , SetBackground, -1 - SAL : 1335
	0x000011EE : ret	// , SetBackground, -1 - SAL : 1336
	0x000011F0 : pushc		1	// , SetBackground, -1 - SAL : 1337
	0x000011F4 : pushz		44 ( EffectFrame )	// , SetBackground, -1 - SAL : 1338
	0x000011F8 : incz		44 ( EffectFrame )		1	// , SetBackground, -1 - SAL : 1339
	0x000011FE : call		0x00000E98	// , SetBackground, -1 - SAL : 1340
	0x00001204 : ret	// , SetBackground, -1 - SAL : 1341
}


FUNCTION : SetChara()
{
	0x00001206 : nop	// , SetChara, -1 - SAL : 1342
	0x00001208 : popz		84 ( ImageNumber of Function SetChara )	// , SetChara, -1 - SAL : 1343
	0x0000120C : stnz		83 ( Layer of Function SetChara )	// , SetChara, -1 - SAL : 1344
	0x00001210 : ldrz		34 ( BackChara )	// , SetChara, -1 - SAL : 1345
	0x00001214 : add	// , SetChara, -1 - SAL : 1346
	0x00001216 : pushz		84 ( ImageNumber of Function SetChara )	// , SetChara, -1 - SAL : 1347
	0x0000121A : sta	// , SetChara, -1 - SAL : 1348
	0x0000121C : ret	// , SetChara, -1 - SAL : 1349
}


FUNCTION : SetCurrentName()
{
	0x0000121E : nop	// , SetCurrentName, -1 - SAL : 1299
	0x00001220 : popz		74 ( Position of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 1300
	0x00001224 : stnz		73 ( NameNumber of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 1301
	0x00001228 : popz		42 ( CurrentName )	// , SetCurrentName, -1 - SAL : 1302
	0x0000122C : zsetz		43 ( NamePosition )		74 ( Position of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 1303
	0x00001232 : ret	// , SetCurrentName, -1 - SAL : 1304
}


FUNCTION : SetDate()
{
	0x00001234 : nop	// , SetDate, -1 - SAL : 1350
	0x00001236 : popz		87 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 1351
	0x0000123A : popz		86 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 1352
	0x0000123E : popz		85 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 1353
	0x00001242 : ldrz		31 ( Now )	// , SetDate, -1 - SAL : 1354
	0x00001246 : pushz		85 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 1355
	0x0000124A : sta	// , SetDate, -1 - SAL : 1356
	0x0000124C : ldrz		31 ( Now )	// , SetDate, -1 - SAL : 1357
	0x00001250 : inc	// , SetDate, -1 - SAL : 1358
	0x00001252 : pushz		86 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 1359
	0x00001256 : sta	// , SetDate, -1 - SAL : 1360
	0x00001258 : addldrzc		31 ( Now )		2	// , SetDate, -1 - SAL : 1361
	0x0000125E : pushz		87 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 1364
	0x00001262 : sta	// , SetDate, -1 - SAL : 1365
	0x00001264 : addldrzc		31 ( Now )		3	// , SetDate, -1 - SAL : 1366
	0x0000126A : pushz		85 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 1369
	0x0000126E : pushz		86 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 1370
	0x00001272 : pushz		87 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 1371
	0x00001276 : call		0x0000091E	// , SetDate, -1 - SAL : 1372
	0x0000127C : sta	// , SetDate, -1 - SAL : 1373
	0x0000127E : ret	// , SetDate, -1 - SAL : 1374
}


FUNCTION : SetTime()
{
	0x00001280 : nop	// , SetTime, -1 - SAL : 1375
	0x00001282 : popz		89 ( Minute of Function SetTime )	// , SetTime, -1 - SAL : 1376
	0x00001286 : popz		88 ( Hour of Function SetTime )	// , SetTime, -1 - SAL : 1377
	0x0000128A : addldrzc		31 ( Now )		4	// , SetTime, -1 - SAL : 1378
	0x00001290 : pushz		88 ( Hour of Function SetTime )	// , SetTime, -1 - SAL : 1381
	0x00001294 : sta	// , SetTime, -1 - SAL : 1382
	0x00001296 : addldrzc		31 ( Now )		5	// , SetTime, -1 - SAL : 1383
	0x0000129C : pushz		89 ( Minute of Function SetTime )	// , SetTime, -1 - SAL : 1386
	0x000012A0 : sta	// , SetTime, -1 - SAL : 1387
	0x000012A2 : ret	// , SetTime, -1 - SAL : 1388
}


FUNCTION : SetWeather()
{
	0x000012A4 : nop	// , SetWeather, -1 - SAL : 1389
	0x000012A6 : popz		90 ( Weather of Function SetWeather )	// , SetWeather, -1 - SAL : 1390
	0x000012AA : addldrzc		31 ( Now )		6	// , SetWeather, -1 - SAL : 1391
	0x000012B0 : pushz		90 ( Weather of Function SetWeather )	// , SetWeather, -1 - SAL : 1394
	0x000012B4 : sta	// , SetWeather, -1 - SAL : 1395
	0x000012B6 : ret	// , SetWeather, -1 - SAL : 1396
}


FUNCTION : ShadowText()
{
	0x000012B8 : nop	// , ShadowText, -1 - SAL : 1640
	0x000012BA : popz		101 ( tc of Function ShadowText )	// , ShadowText, -1 - SAL : 1641
	0x000012BE : popz		100 ( sc of Function ShadowText )	// , ShadowText, -1 - SAL : 1642
	0x000012C2 : popz		99 ( z of Function ShadowText )	// , ShadowText, -1 - SAL : 1643
	0x000012C6 : popz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1644
	0x000012CA : popz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1645
	0x000012CE : zseti		102 ( TempString of Function ShadowText )		36 ( Messages )		99 ( z of Function ShadowText )	// , ShadowText, -1 - SAL : 1646
	0x000012D6 : pushz		46 ( TestCount )	// , ShadowText, -1 - SAL : 1647
	0x000012DA : pushc		700	// , ShadowText, -1 - SAL : 1648
	0x000012DE : mod	// , ShadowText, -1 - SAL : 1649
	0x000012E0 : pushc		100	// , ShadowText, -1 - SAL : 1650
	0x000012E4 : div	// , ShadowText, -1 - SAL : 1651
	0x000012E6 : pushz		100 ( sc of Function ShadowText )	// , ShadowText, -1 - SAL : 1652
	0x000012EA : pushc		3	// , ShadowText, -1 - SAL : 1653
	0x000012EE : pushc		0	// , ShadowText, -1 - SAL : 1654
	0x000012F2 : calls		SetFontType(40)	// , ShadowText, -1 - SAL : 1655
	0x000012F6 : pushc		-1	// , ShadowText, -1 - SAL : 1656
	0x000012FA : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1657
	0x000012FE : pushc		1	// , ShadowText, -1 - SAL : 1659
	0x00001302 : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1660
	0x00001306 : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1662
	0x0000130A : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1663
	0x0000130E : pushc		-1	// , ShadowText, -1 - SAL : 1664
	0x00001312 : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1665
	0x00001316 : pushz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1667
	0x0000131A : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1668
	0x0000131E : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1669
	0x00001322 : pushz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1670
	0x00001326 : pushc		1	// , ShadowText, -1 - SAL : 1671
	0x0000132A : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1672
	0x0000132E : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1674
	0x00001332 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1675
	0x00001336 : pushz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1676
	0x0000133A : pushz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1677
	0x0000133E : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1678
	0x00001342 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1679
	0x00001346 : pushc		1	// , ShadowText, -1 - SAL : 1680
	0x0000134A : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1681
	0x0000134E : pushc		1	// , ShadowText, -1 - SAL : 1683
	0x00001352 : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1684
	0x00001356 : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1686
	0x0000135A : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1687
	0x0000135E : pushc		1	// , ShadowText, -1 - SAL : 1688
	0x00001362 : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1689
	0x00001366 : pushz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1691
	0x0000136A : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1692
	0x0000136E : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1693
	0x00001372 : pushz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1694
	0x00001376 : pushc		1	// , ShadowText, -1 - SAL : 1695
	0x0000137A : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1696
	0x0000137E : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1698
	0x00001382 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1699
	0x00001386 : pushc		-1	// , ShadowText, -1 - SAL : 1700
	0x0000138A : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1701
	0x0000138E : pushc		1	// , ShadowText, -1 - SAL : 1703
	0x00001392 : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1704
	0x00001396 : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1706
	0x0000139A : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1707
	0x0000139E : pushc		1	// , ShadowText, -1 - SAL : 1708
	0x000013A2 : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1709
	0x000013A6 : pushc		1	// , ShadowText, -1 - SAL : 1711
	0x000013AA : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1712
	0x000013AE : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1714
	0x000013B2 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1715
	0x000013B6 : pushc		-1	// , ShadowText, -1 - SAL : 1716
	0x000013BA : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1717
	0x000013BE : pushc		-1	// , ShadowText, -1 - SAL : 1719
	0x000013C2 : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1720
	0x000013C6 : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1722
	0x000013CA : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1723
	0x000013CE : pushz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1724
	0x000013D2 : pushc		-1	// , ShadowText, -1 - SAL : 1725
	0x000013D6 : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1726
	0x000013DA : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1728
	0x000013DE : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1729
	0x000013E2 : pushc		1	// , ShadowText, -1 - SAL : 1730
	0x000013E6 : addz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1731
	0x000013EA : pushc		-1	// , ShadowText, -1 - SAL : 1733
	0x000013EE : addz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1734
	0x000013F2 : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1736
	0x000013F6 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1737
	0x000013FA : pushz		46 ( TestCount )	// , ShadowText, -1 - SAL : 1738
	0x000013FE : pushc		700	// , ShadowText, -1 - SAL : 1739
	0x00001402 : mod	// , ShadowText, -1 - SAL : 1740
	0x00001404 : pushc		100	// , ShadowText, -1 - SAL : 1741
	0x00001408 : div	// , ShadowText, -1 - SAL : 1742
	0x0000140A : pushz		101 ( tc of Function ShadowText )	// , ShadowText, -1 - SAL : 1743
	0x0000140E : pushc		3	// , ShadowText, -1 - SAL : 1744
	0x00001412 : pushc		0	// , ShadowText, -1 - SAL : 1745
	0x00001416 : calls		SetFontType(40)	// , ShadowText, -1 - SAL : 1746
	0x0000141A : pushz		97 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1747
	0x0000141E : pushz		98 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1748
	0x00001422 : pushz		102 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1749
	0x00001426 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1750
	0x0000142A : ret	// , ShadowText, -1 - SAL : 1751
}


FUNCTION : TEST()
{
	0x0000142C : nop	// , TEST, -1 - SAL : 1590
	0x0000142E : zsetc		95 ( i of Function TEST )		150	// , TEST, -1 - SAL : 1591
	0x00001434 : zsetmi		96 ( TempString of Function TEST )		%%31	// , TEST, -1 - SAL : 1592
	0x0000143A : pushz		46 ( TestCount )	// , TEST, -1 - SAL : 1593
	0x0000143E : lejp		1800		0x0000144C	// , TEST, -1 - SAL : 1594
	0x00001446 : zsetc		46 ( TestCount )		0	// , TEST, -1 - SAL : 1595
	0x0000144C : pushc		2	// , TEST, -1 - SAL : 1596
	0x00001450 : pushc		79	// , TEST, -1 - SAL : 1597
	0x00001454 : pushc		3	// , TEST, -1 - SAL : 1598
	0x00001458 : pushc		0	// , TEST, -1 - SAL : 1599
	0x0000145C : calls		SetFontType(40)	// , TEST, -1 - SAL : 1600
	0x00001460 : pushz		94 ( temp of Function TEST )	// , TEST, -1 - SAL : 1601
	0x00001464 : pushmi		%%32	// , TEST, -1 - SAL : 1602
	0x00001468 : pushz		46 ( TestCount )	// , TEST, -1 - SAL : 1603
	0x0000146C : incz		46 ( TestCount )		1	// , TEST, -1 - SAL : 1604
	0x00001472 : pushz		39 ( NextKey )	// , TEST, -1 - SAL : 1605
	0x00001476 : pushz		41 ( EventPointer )	// , TEST, -1 - SAL : 1606
	0x0000147A : calls		MakeStr3(176)	// , TEST, -1 - SAL : 1607
	0x0000147E : pushc		2	// , TEST, -1 - SAL : 1608
	0x00001482 : pushc		-30	// , TEST, -1 - SAL : 1609
	0x00001486 : pushz		46 ( TestCount )	// , TEST, -1 - SAL : 1610
	0x0000148A : pushc		360	// , TEST, -1 - SAL : 1611
	0x0000148E : mod	// , TEST, -1 - SAL : 1612
	0x00001490 : add	// , TEST, -1 - SAL : 1613
	0x00001492 : pushz		94 ( temp of Function TEST )	// , TEST, -1 - SAL : 1614
	0x00001496 : calls		DrawStr(85)	// , TEST, -1 - SAL : 1615
	0x0000149A : pushz		94 ( temp of Function TEST )	// , TEST, -1 - SAL : 1616
	0x0000149E : pushmi		%%33	// , TEST, -1 - SAL : 1617
	0x000014A2 : pushz		46 ( TestCount )	// , TEST, -1 - SAL : 1618
	0x000014A6 : pushc		700	// , TEST, -1 - SAL : 1619
	0x000014AA : mod	// , TEST, -1 - SAL : 1620
	0x000014AC : pushc		100	// , TEST, -1 - SAL : 1621
	0x000014B0 : div	// , TEST, -1 - SAL : 1622
	0x000014B2 : pushz		40 ( SelectedAnswer )	// , TEST, -1 - SAL : 1623
	0x000014B6 : pushic		45 ( Variable )		0	// , TEST, -1 - SAL : 1624
	0x000014BC : calls		MakeStr3(176)	// , TEST, -1 - SAL : 1625
	0x000014C0 : pushc		2	// , TEST, -1 - SAL : 1626
	0x000014C4 : pushc		109	// , TEST, -1 - SAL : 1627
	0x000014C8 : pushc		3	// , TEST, -1 - SAL : 1628
	0x000014CC : pushc		0	// , TEST, -1 - SAL : 1629
	0x000014D0 : calls		SetFontType(40)	// , TEST, -1 - SAL : 1630
	0x000014D4 : pushc		3	// , TEST, -1 - SAL : 1631
	0x000014D8 : pushc		-10	// , TEST, -1 - SAL : 1632
	0x000014DC : pushz		46 ( TestCount )	// , TEST, -1 - SAL : 1633
	0x000014E0 : pushc		360	// , TEST, -1 - SAL : 1634
	0x000014E4 : mod	// , TEST, -1 - SAL : 1635
	0x000014E6 : add	// , TEST, -1 - SAL : 1636
	0x000014E8 : pushz		94 ( temp of Function TEST )	// , TEST, -1 - SAL : 1637
	0x000014EC : calls		DrawStr(85)	// , TEST, -1 - SAL : 1638
	0x000014F0 : ret	// , TEST, -1 - SAL : 1639
}


FUNCTION : main()
{
	0x000014F2 : nop	// , main, -1 - SAL : 1583
	0x000014F4 : call		0x00000080	// , main, -1 - SAL : 1584
	0x000014FA : call		0x000009B0	// , main, -1 - SAL : 1585
	0x00001500 : pushc		10	// , main, -1 - SAL : 1586
	0x00001504 : pushc		1	// , main, -1 - SAL : 1587
	0x00001508 : calls		SetTimer1(150)	// , main, -1 - SAL : 1588
	0x0000150C : end	// , main, -1 - SAL : 1589
}

====================== SYMBOL TABLE =====================

========================================================
			SYMBOL TABLE

--------------------------------------------------------
	  VALID VAR(STATIC) : 0 - ().swData
	  VALID VAR(STATIC) : 1 - ().swData2
	  VALID VAR(STATIC) : 2 - ().swData3
	  VALID VAR(STATIC) : 3 - ().swData4
	  VALID VAR(STATIC) : 4 - ().swWidth
	  VALID VAR(STATIC) : 5 - ().swHeight
	  VALID VAR(STATIC) : 6 - ().swFrame
	  VALID VAR(STATIC) : 7 - ().swFrame2
	  VALID VAR(STATIC) : 8 - ().swFrame3
	  VALID VAR(STATIC) : 9 - ().swFrame6
	  VALID VAR(STATIC) : 10 - ().swVMver
	  VALID VAR(STATIC) : 11 - ().swModel
	  VALID VAR(STATIC) : 12 - ().swSmsRcvBuf
	  VALID VAR(STATIC) : 13 - ().swRsRcvBuf
	  VALID VAR(STATIC) : 14 - ().swRcvBuf
	  VALID VAR(STATIC) : 15 - ().swReserved1
	  VALID VAR(STATIC) : 16 - ().swReserved2
	  VALID VAR(STATIC) : 17 - ().swReserved3
	  VALID VAR(STATIC) : 18 - ().swReserved4
	  VALID VAR(STATIC) : 19 - ().swSbuf
	  VALID VAR(STATIC) : 20 - ().talk_sup
	  VALID VAR(STATIC) : 21 - ().talk_name
	  VALID VAR(STATIC) : 22 - ().talk_ok
	  VALID VAR(STATIC) : 23 - ().talk_main
	  VALID VAR(STATIC) : 24 - ().talk_sub
	  VALID VAR(STATIC) : 25 - ().talk_sel
	  VALID VAR(STATIC) : 26 - ().menu
	  VALID VAR(STATIC) : 27 - ().bg
	  VALID VAR(STATIC) : 28 - ().MONTH
	  VALID VAR(STATIC) : 29 - ().WEATHER
	  VALID VAR(STATIC) : 30 - ().Me
	  VALID VAR(STATIC) : 31 - ().Now
	  VALID VAR(STATIC) : 32 - ().They
	  VALID VAR(STATIC) : 33 - ().Background
	  VALID VAR(STATIC) : 34 - ().BackChara
	  VALID VAR(STATIC) : 35 - ().Names
	  VALID VAR(STATIC) : 36 - ().Messages
	  VALID VAR(STATIC) : 37 - ().SelectMessages
	  VALID VAR(STATIC) : 38 - ().EventLine
	  VALID VAR(STATIC) : 39 - ().NextKey
	  VALID VAR(STATIC) : 40 - ().SelectedAnswer
	  VALID VAR(STATIC) : 41 - ().EventPointer
	  VALID VAR(STATIC) : 42 - ().CurrentName
	  VALID VAR(STATIC) : 43 - ().NamePosition
	  VALID VAR(STATIC) : 44 - ().EffectFrame
	  VALID VAR(STATIC) : 45 - ().Variable
	  VALID VAR(STATIC) : 46 - ().TestCount
	  VALID VAR(STATIC) : 47 - GetTotalDay().Year
	  VALID VAR(STATIC) : 48 - GetTotalDay().Month
	  VALID VAR(STATIC) : 49 - GetTotalDay().Day
	  VALID VAR(STATIC) : 50 - GetTotalDay().Total
	  VALID VAR(STATIC) : 51 - GetTotalDay().i
	  VALID VAR(STATIC) : 52 - GetWeek().Year
	  VALID VAR(STATIC) : 53 - GetWeek().Month
	  VALID VAR(STATIC) : 54 - GetWeek().Day
	  VALID VAR(STATIC) : 55 - ScreenEffect().Type
	  VALID VAR(STATIC) : 56 - ScreenEffect().Count
	  VALID VAR(STATIC) : 57 - DrawBackground().i
	  VALID VAR(STATIC) : 58 - DrawBackground().temp
	  VALID VAR(STATIC) : 59 - DrawInterface().TempString
	  VALID VAR(STATIC) : 60 - DrawMessages().MessageNumber
	  VALID VAR(STATIC) : 61 - DrawMessages().TempString
	  VALID VAR(STATIC) : 62 - DrawMessages().Length
	  VALID VAR(STATIC) : 63 - DrawMessages().i
	  VALID VAR(STATIC) : 64 - DrawMessages().PosNameY
	  VALID VAR(STATIC) : 65 - DrawQuestion().Value
	  VALID VAR(STATIC) : 66 - DrawQuestion().MsgCount
	  VALID VAR(STATIC) : 67 - DrawQuestion().Select1
	  VALID VAR(STATIC) : 68 - DrawQuestion().Select2
	  VALID VAR(STATIC) : 69 - DrawQuestion().Select3
	  VALID VAR(STATIC) : 70 - DrawQuestion().Select4
	  VALID VAR(STATIC) : 71 - DrawQuestion().i
	  VALID VAR(STATIC) : 72 - DrawQuestion().Temp
	  VALID VAR(STATIC) : 73 - SetCurrentName().NameNumber
	  VALID VAR(STATIC) : 74 - SetCurrentName().Position
	  VALID VAR(STATIC) : 75 - IfEqual().Value1
	  VALID VAR(STATIC) : 76 - IfEqual().Value2
	  VALID VAR(STATIC) : 77 - IfEqual().ElseCount
	  VALID VAR(STATIC) : 78 - ElseEqual().Value1
	  VALID VAR(STATIC) : 79 - ElseEqual().Value2
	  VALID VAR(STATIC) : 80 - ElseEqual().IfCount
	  VALID VAR(STATIC) : 81 - SetBackground().Layer
	  VALID VAR(STATIC) : 82 - SetBackground().ImageNumber
	  VALID VAR(STATIC) : 83 - SetChara().Layer
	  VALID VAR(STATIC) : 84 - SetChara().ImageNumber
	  VALID VAR(STATIC) : 85 - SetDate().Year
	  VALID VAR(STATIC) : 86 - SetDate().Month
	  VALID VAR(STATIC) : 87 - SetDate().Day
	  VALID VAR(STATIC) : 88 - SetTime().Hour
	  VALID VAR(STATIC) : 89 - SetTime().Minute
	  VALID VAR(STATIC) : 90 - SetWeather().Weather
	  VALID VAR(STATIC) : 91 - PassTime().Element
	  VALID VAR(STATIC) : 92 - PassTime().Count
	  VALID VAR(STATIC) : 93 - PassTime().TempCount
	  VALID VAR(STATIC) : 94 - TEST().temp
	  VALID VAR(STATIC) : 95 - TEST().i
	  VALID VAR(STATIC) : 96 - TEST().TempString
	  VALID VAR(STATIC) : 97 - ShadowText().j
	  VALID VAR(STATIC) : 98 - ShadowText().i
	  VALID VAR(STATIC) : 99 - ShadowText().z
	  VALID VAR(STATIC) : 100 - ShadowText().sc
	  VALID VAR(STATIC) : 101 - ShadowText().tc
	  VALID VAR(STATIC) : 102 - ShadowText().TempString
========================================================

============================== SYMBOL POOL ==============================
0  th SYMBOL POOL[0x00001848] : Real Offset 0x00001848
1  th SYMBOL POOL[0x0000184C] : Real Offset 0x0000184C
2  th SYMBOL POOL[0x00001850] : Real Offset 0x00001850
3  th SYMBOL POOL[0x00001854] : Real Offset 0x00001854
4  th SYMBOL POOL[0x00001858] : Real Offset 0x00001858
5  th SYMBOL POOL[0x0000185C] : Real Offset 0x0000185C
6  th SYMBOL POOL[0x00001860] : Real Offset 0x00001860
7  th SYMBOL POOL[0x00001864] : Real Offset 0x00001864
8  th SYMBOL POOL[0x00001868] : Real Offset 0x00001868
9  th SYMBOL POOL[0x0000186C] : Real Offset 0x0000186C
10 th SYMBOL POOL[0x00001870] : Real Offset 0x00001870
11 th SYMBOL POOL[0x0000187C] : Real Offset 0x0000187C
12 th SYMBOL POOL[0x0000189C] : Real Offset 0x0000189C
13 th SYMBOL POOL[0x00001940] : Real Offset 0x00001940
14 th SYMBOL POOL[0x00001B40] : Real Offset 0x00001B40
15 th SYMBOL POOL[0x00001F40] : Real Offset 0x00001F40
16 th SYMBOL POOL[0x00001F44] : Real Offset 0x00001F44
17 th SYMBOL POOL[0x00001F48] : Real Offset 0x00001F48
18 th SYMBOL POOL[0x00001F4C] : Real Offset 0x00001F4C
19 th SYMBOL POOL[0x00001F50] : Real Offset 0x00001F50
20 th SYMBOL POOL[0x00001F54] : Real Offset 0x00001F54
21 th SYMBOL POOL[0x00001F58] : Real Offset 0x00001F58
22 th SYMBOL POOL[0x00001F5C] : Real Offset 0x00001F5C
23 th SYMBOL POOL[0x00001F60] : Real Offset 0x00001F60
24 th SYMBOL POOL[0x00001F64] : Real Offset 0x00001F64
25 th SYMBOL POOL[0x00001F68] : Real Offset 0x00001F68
26 th SYMBOL POOL[0x00001F6C] : Real Offset 0x00001F6C
27 th SYMBOL POOL[0x00001F70] : Real Offset 0x00001F70
28 th SYMBOL POOL[0x00001F74] : Real Offset 0x00001F74
29 th SYMBOL POOL[0x00001FA4] : Real Offset 0x00001FA4
30 th SYMBOL POOL[0x00001FB8] : Real Offset 0x00001FB8
31 th SYMBOL POOL[0x00001FC0] : Real Offset 0x00001FC0
32 th SYMBOL POOL[0x00001FDC] : Real Offset 0x00001FDC
33 th SYMBOL POOL[0x00001FF4] : Real Offset 0x00001FF4
34 th SYMBOL POOL[0x00001FFC] : Real Offset 0x00001FFC
35 th SYMBOL POOL[0x00002008] : Real Offset 0x00002008
36 th SYMBOL POOL[0x0000201C] : Real Offset 0x0000201C
37 th SYMBOL POOL[0x0000203C] : Real Offset 0x0000203C
38 th SYMBOL POOL[0x0000204C] : Real Offset 0x0000204C
39 th SYMBOL POOL[0x00002148] : Real Offset 0x00002148
40 th SYMBOL POOL[0x0000214C] : Real Offset 0x0000214C
41 th SYMBOL POOL[0x00002150] : Real Offset 0x00002150
42 th SYMBOL POOL[0x00002154] : Real Offset 0x00002154
43 th SYMBOL POOL[0x00002158] : Real Offset 0x00002158
44 th SYMBOL POOL[0x0000215C] : Real Offset 0x0000215C
45 th SYMBOL POOL[0x00002160] : Real Offset 0x00002160
46 th SYMBOL POOL[0x00002228] : Real Offset 0x00002228
47 th SYMBOL POOL[0x0000222C] : Real Offset 0x0000222C
48 th SYMBOL POOL[0x00002230] : Real Offset 0x00002230
49 th SYMBOL POOL[0x00002234] : Real Offset 0x00002234
50 th SYMBOL POOL[0x00002238] : Real Offset 0x00002238
51 th SYMBOL POOL[0x0000223C] : Real Offset 0x0000223C
52 th SYMBOL POOL[0x00002240] : Real Offset 0x00002240
53 th SYMBOL POOL[0x00002244] : Real Offset 0x00002244
54 th SYMBOL POOL[0x00002248] : Real Offset 0x00002248
55 th SYMBOL POOL[0x0000224C] : Real Offset 0x0000224C
56 th SYMBOL POOL[0x00002250] : Real Offset 0x00002250
57 th SYMBOL POOL[0x00002254] : Real Offset 0x00002254
58 th SYMBOL POOL[0x00002258] : Real Offset 0x00002258
59 th SYMBOL POOL[0x0000225C] : Real Offset 0x0000225C
60 th SYMBOL POOL[0x00002260] : Real Offset 0x00002260
61 th SYMBOL POOL[0x00002264] : Real Offset 0x00002264
62 th SYMBOL POOL[0x00002268] : Real Offset 0x00002268
63 th SYMBOL POOL[0x0000226C] : Real Offset 0x0000226C
64 th SYMBOL POOL[0x00002270] : Real Offset 0x00002270
65 th SYMBOL POOL[0x00002274] : Real Offset 0x00002274
66 th SYMBOL POOL[0x00002278] : Real Offset 0x00002278
67 th SYMBOL POOL[0x0000227C] : Real Offset 0x0000227C
68 th SYMBOL POOL[0x00002280] : Real Offset 0x00002280
69 th SYMBOL POOL[0x00002284] : Real Offset 0x00002284
70 th SYMBOL POOL[0x00002288] : Real Offset 0x00002288
71 th SYMBOL POOL[0x0000228C] : Real Offset 0x0000228C
72 th SYMBOL POOL[0x00002290] : Real Offset 0x00002290
73 th SYMBOL POOL[0x00002294] : Real Offset 0x00002294
74 th SYMBOL POOL[0x00002298] : Real Offset 0x00002298
75 th SYMBOL POOL[0x0000229C] : Real Offset 0x0000229C
76 th SYMBOL POOL[0x000022A0] : Real Offset 0x000022A0
77 th SYMBOL POOL[0x000022A4] : Real Offset 0x000022A4
78 th SYMBOL POOL[0x000022A8] : Real Offset 0x000022A8
79 th SYMBOL POOL[0x000022AC] : Real Offset 0x000022AC
80 th SYMBOL POOL[0x000022B0] : Real Offset 0x000022B0
81 th SYMBOL POOL[0x000022B4] : Real Offset 0x000022B4
82 th SYMBOL POOL[0x000022B8] : Real Offset 0x000022B8
83 th SYMBOL POOL[0x000022BC] : Real Offset 0x000022BC
84 th SYMBOL POOL[0x000022C0] : Real Offset 0x000022C0
85 th SYMBOL POOL[0x000022C4] : Real Offset 0x000022C4
86 th SYMBOL POOL[0x000022C8] : Real Offset 0x000022C8
87 th SYMBOL POOL[0x000022CC] : Real Offset 0x000022CC
88 th SYMBOL POOL[0x000022D0] : Real Offset 0x000022D0
89 th SYMBOL POOL[0x000022D4] : Real Offset 0x000022D4
90 th SYMBOL POOL[0x000022D8] : Real Offset 0x000022D8
91 th SYMBOL POOL[0x000022DC] : Real Offset 0x000022DC
92 th SYMBOL POOL[0x000022E0] : Real Offset 0x000022E0
93 th SYMBOL POOL[0x000022E4] : Real Offset 0x000022E4
94 th SYMBOL POOL[0x000022E8] : Real Offset 0x000022E8
95 th SYMBOL POOL[0x000022EC] : Real Offset 0x000022EC
96 th SYMBOL POOL[0x000022F0] : Real Offset 0x000022F0
97 th SYMBOL POOL[0x000022F4] : Real Offset 0x000022F4
98 th SYMBOL POOL[0x000022F8] : Real Offset 0x000022F8
99 th SYMBOL POOL[0x000022FC] : Real Offset 0x000022FC
100th SYMBOL POOL[0x00002300] : Real Offset 0x00002300
101th SYMBOL POOL[0x00002304] : Real Offset 0x00002304
102th SYMBOL POOL[0x00002308] : Real Offset 0x00002308
