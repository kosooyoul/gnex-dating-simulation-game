STATIC VAR.	swData           of SYSTEM          0       1       
STATIC VAR.	swData2          of SYSTEM          1       1       
STATIC VAR.	swData3          of SYSTEM          2       1       
STATIC VAR.	swData4          of SYSTEM          3       1       
STATIC VAR.	swWidth          of SYSTEM          4       1       
STATIC VAR.	swHeight         of SYSTEM          5       1       
STATIC VAR.	swFrame          of SYSTEM          6       1       
STATIC VAR.	swFrame2         of SYSTEM          7       1       
STATIC VAR.	swFrame3         of SYSTEM          8       1       
STATIC VAR.	swFrame6         of SYSTEM          9       1       
STATIC VAR.	swVMver          of SYSTEM          10      3       0       
STATIC VAR.	swModel          of SYSTEM          11      8       0       
STATIC VAR.	swSmsRcvBuf      of SYSTEM          12      41      0       
STATIC VAR.	swRsRcvBuf       of SYSTEM          13      128     0       
STATIC VAR.	swRcvBuf         of SYSTEM          14      256     0       
STATIC VAR.	swReserved1      of SYSTEM          15      1       
STATIC VAR.	swReserved2      of SYSTEM          16      1       
STATIC VAR.	swReserved3      of SYSTEM          17      1       
STATIC VAR.	swReserved4      of SYSTEM          18      1       
STATIC VAR.	swSbuf           of SYSTEM          19      1       
STATIC VAR.	talk_sup         of SYSTEM          20      117     1       
STATIC VAR.	talk_name        of SYSTEM          21      118     1       
STATIC VAR.	talk_ok          of SYSTEM          22      119     1       
STATIC VAR.	talk_main        of SYSTEM          23      120     1       
STATIC VAR.	talk_sub         of SYSTEM          24      121     1       
STATIC VAR.	talk_sel         of SYSTEM          25      122     1       
STATIC VAR.	menu             of SYSTEM          26      123     1       
STATIC VAR.	title_back_title of SYSTEM          27      124     1       
STATIC VAR.	title_back_menu  of SYSTEM          28      125     1       
STATIC VAR.	title_menu       of SYSTEM          29      5       
 126         127         128         129         130        
STATIC VAR.	function_window  of SYSTEM          30      131     1       
STATIC VAR.	function_name    of SYSTEM          31      3       
 132         133         134        
STATIC VAR.	load_saved       of SYSTEM          32      135     1       
STATIC VAR.	load_empty       of SYSTEM          33      136     1       
STATIC VAR.	function_check   of SYSTEM          34      137     1       
STATIC VAR.	function_option  of SYSTEM          35      138     1       
STATIC VAR.	function_load_left of SYSTEM          36      139     1       
STATIC VAR.	function_load_right of SYSTEM          37      140     1       
STATIC VAR.	function_ok      of SYSTEM          38      141     1       
STATIC VAR.	function_crl     of SYSTEM          39      142     1       
STATIC VAR.	bg               of SYSTEM          40      5       
 143         144         145         146         147        
STATIC VAR.	chara            of SYSTEM          41      2       
 148         149        
STATIC VAR.	MONTH            of SYSTEM          42      12      
 31          28          31          30          31          30          31          31         
 30          31          30          31         
STATIC VAR.	OptionAutoSkip   of SYSTEM          43      0       0       
STATIC VAR.	OptionSpokeSkip  of SYSTEM          44      0       0       
STATIC VAR.	WEATHER          of SYSTEM          45      5       
0            1           2           3           4          
STATIC VAR.	Me               of SYSTEM          46      2       0       
STATIC VAR.	Now              of SYSTEM          47      7       0       
STATIC VAR.	They             of SYSTEM          48      6       0       
STATIC VAR.	Background       of SYSTEM          49      2       2       
-1          -1          
STATIC VAR.	BackChara        of SYSTEM          50      3       3       
-1          -1          -1          
STATIC VAR.	Names            of SYSTEM          51      7       
 13          14          15          16          17          18          19         
STATIC VAR.	Messages         of SYSTEM          52      89      
 20          21          22          23          24          25          26          27         
 28          29          30          31          32          33          34          35         
 36          37          38          39          40          41          42          43         
 44          45          46          47          48          49          50          51         
 52          53          54          55          56          57          58          59         
 60          61          62          63          64          65          66          67         
 68          69          70          71          72          73          74          75         
 76          77          78          79          80          81          82          83         
 84          85          86          87          88          89          90          91         
 92          93          94          95          96          97          98          99         
 100         101         102         103         104         105         106         107        
 108        
STATIC VAR.	SelectMessages   of SYSTEM          53      4       
 109         110         111         112        
STATIC VAR.	EventLine        of SYSTEM          54      111     
 2          -1          0           0            15          5          0           0           
0            2           1           1           6          0           0           0           
 4           1          0            4          0            1           2           3          
 2          -1          0           0            18          2           1           1          
 3          0           0            2          0            5           3           1          
0            2          0            6           3           2          0            2          
0            7           3           3          0            2          0            8          
 6          0           -1           2          -1          0           0            16         
 5          0            1           1           2          -1          0           0           
 9           2          0           0           0            10          2          -1          
0           0            17          5          0            2           2          0           
 11          2           3           1           6          0            1          0           
 12          2          0           0           0            13          2          -1          
0            6          0           -1          0            14         -1          
STATIC VAR.	TESTIMG          of SYSTEM          55      2       
 150         151        
STATIC VAR.	SelectedAnswer   of SYSTEM          56      0       0       
STATIC VAR.	EventPointer     of SYSTEM          57      0       0       
STATIC VAR.	CurrentName      of SYSTEM          58      1       
STATIC VAR.	NamePosition     of SYSTEM          59      0       0       
STATIC VAR.	EffectFrame      of SYSTEM          60      0       0       
STATIC VAR.	Variable         of SYSTEM          61      50      0       
STATIC VAR.	SelectedTitleMenu of SYSTEM          62      0       0       
STATIC VAR.	SelectedMenu     of SYSTEM          63      0       0       
STATIC VAR.	SelectedObject   of SYSTEM          64      0       0       
STATIC VAR.	PrologueEventPointer of SYSTEM          65      0       0       
STATIC VAR.	PrologueEventList of SYSTEM          66      419     
0           0           0            1           2          0           0           0           
 2           2           1           1          0            3           2          0           
0           0            4           2           1           1          0            5          
 2          0           0           0            6           2           2          0           
0            7           2           3           1          0            8           2          
 2          0           0            9           2           3           1          0           
 10          2           2          0           0            11          2           3          
 1          0            12          2           2          0           0            13         
 2           3           1          0            14          2           2          0           
0            15          2           3           1          0            16          2          
 2          0           0            17          2           3           1          0           
 18          2           2          0           0            19          2           3          
 1          0            20          2           2          0           0            21         
 2           3           1          0            22          2           2          0           
0            23          2           3           1          0            24          2          
 2          0           0            25          2           3           1          0           
 26          2           4           1          0            27          2           2          
0           0            28          2           4           1          0            29         
 2           2          0           0            30          2           4           1          
0            31          2           2          0           0            32          2          
 4           1          0            33          2           2          0           0           
 34          2           6           1          0            35          2           2          
0           0            36          2           4           1          0            37         
 2           2          0           0            38          2           5           1          
0            39          2           2          0           0            40          2          
 5           1          0            41          2           2          0           0           
 42          2           5           1          0            43         0            44         
 2           2          0           0            45          2           5           1          
0            46          2           5           1          0            47         0           
 48          2           5           1          0            49          2           2          
0           0            50          2           5           1          0            51         
 2           2          0           0            52          2           5           1          
0            53          2           2          0           0            54          2          
 5           1          0            55          2           2          0           0           
 56          2           5           1          0            57          2           2          
0           0            58          2           5           1          0            59         
 2           2          0           0            60          2           5           1          
0            61          2           4           1          0            62          2          
 2          0           0            63          2           4           1          0           
 64          2           2          0           0            65          2           4          
 1          0            66          2           2          0           0            67         
 2           4           1          0            68          2           2          0           
0            69          2           4           1          0            70          2          
 2          0           0            71          2           4           1          0           
 72          2           2          0           0            73          2           4          
 1          0            74         0            75          2           2          0           
0            76          2           4           1          0            77          2          
 2          0           0            78          2           4           1          0           
 79          2           2          0           0            80          2           4          
 1          0            81          2           2          0           0            82         
 2           4           1          0            83          2           2          0           
0            84         0            85         0            86         0            87         
0            88         -1          
STATIC VAR.	TestCount        of SYSTEM          67      0       0       
STATIC VAR.	NextKey          of SYSTEM          68      1       
STATIC VAR.	GameMode         of SYSTEM          69      0       0       
STATIC VAR.	Year             of GetTotalDay                     70      1       
STATIC VAR.	Month            of GetTotalDay                     71      1       
STATIC VAR.	Day              of GetTotalDay                     72      1       
STATIC VAR.	Total            of GetTotalDay                     73      1       
STATIC VAR.	i                of GetTotalDay                     74      1       
STATIC VAR.	Year             of GetWeek                         75      1       
STATIC VAR.	Month            of GetWeek                         76      1       
STATIC VAR.	Day              of GetWeek                         77      1       
STATIC VAR.	Type             of ScreenEffect                    78      1       
STATIC VAR.	Count            of ScreenEffect                    79      1       
STATIC VAR.	Imgnum           of ScreenEffect                    80      1       
STATIC VAR.	j                of ShadowText                      81      1       
STATIC VAR.	i                of ShadowText                      82      1       
STATIC VAR.	z                of ShadowText                      83      1       
STATIC VAR.	sc               of ShadowText                      84      1       
STATIC VAR.	tc               of ShadowText                      85      1       
STATIC VAR.	TempString       of ShadowText                      86      152     1       
STATIC VAR.	i                of DrawBackground                  87      1       
STATIC VAR.	temp             of DrawBackground                  88      153     1       
STATIC VAR.	TempString       of DrawInterface                   89      154     1       
STATIC VAR.	MessageNumber    of DrawMessages                    90      1       
STATIC VAR.	TempString       of DrawMessages                    91      155     1       
STATIC VAR.	Length           of DrawMessages                    92      1       
STATIC VAR.	i                of DrawMessages                    93      1       
STATIC VAR.	PosNameY         of DrawMessages                    94      1       
STATIC VAR.	Value            of DrawQuestion                    95      1       
STATIC VAR.	MsgCount         of DrawQuestion                    96      1       
STATIC VAR.	Select1          of DrawQuestion                    97      1       
STATIC VAR.	Select2          of DrawQuestion                    98      1       
STATIC VAR.	Select3          of DrawQuestion                    99      1       
STATIC VAR.	Select4          of DrawQuestion                    100     1       
STATIC VAR.	i                of DrawQuestion                    101     1       
STATIC VAR.	Temp             of DrawQuestion                    102     156     1       
STATIC VAR.	NameNumber       of SetCurrentName                  103     1       
STATIC VAR.	Position         of SetCurrentName                  104     1       
STATIC VAR.	Value1           of IfEqual                         105     1       
STATIC VAR.	Value2           of IfEqual                         106     1       
STATIC VAR.	ElseCount        of IfEqual                         107     1       
STATIC VAR.	Value1           of ElseEqual                       108     1       
STATIC VAR.	Value2           of ElseEqual                       109     1       
STATIC VAR.	IfCount          of ElseEqual                       110     1       
STATIC VAR.	Layer            of SetBackground                   111     1       
STATIC VAR.	ImageNumber      of SetBackground                   112     1       
STATIC VAR.	Effect           of SetBackground                   113     1       
STATIC VAR.	Layer            of SetChara                        114     1       
STATIC VAR.	ImageNumber      of SetChara                        115     1       
STATIC VAR.	Year             of SetDate                         116     1       
STATIC VAR.	Month            of SetDate                         117     1       
STATIC VAR.	Day              of SetDate                         118     1       
STATIC VAR.	Hour             of SetTime                         119     1       
STATIC VAR.	Minute           of SetTime                         120     1       
STATIC VAR.	Weather          of SetWeather                      121     1       
STATIC VAR.	Element          of PassTime                        122     1       
STATIC VAR.	Count            of PassTime                        123     1       
STATIC VAR.	TempCount        of PassTime                        124     1       
STATIC VAR.	i                of ShowTitleContinue               125     1       
STATIC VAR.	temp             of TEST                            126     157     1       
STATIC VAR.	i                of TEST                            127     1       
STATIC VAR.	TempString       of TEST                            128     113     1       
STATIC VAR.	Mode             of ChangeGameMode                  129     1       
FUNCTION	GetTotalDay      has 3     args.
FUNCTION	GetWeek          has 3     args.
FUNCTION	ScreenEffect     has 3     args.
FUNCTION	ShadowText       has 5     args.
FUNCTION	InitNature       has 0     args.
FUNCTION	InitEvent        has 0     args.
FUNCTION	DrawBackground   has 0     args.
FUNCTION	DrawInterface    has 0     args.
FUNCTION	RunMainPlay      has 0     args.
FUNCTION	RunEventLine     has 0     args.
FUNCTION	DrawMessages     has 1     args.
FUNCTION	DrawQuestion     has 6     args.
FUNCTION	SetCurrentName   has 2     args.
FUNCTION	IfEqual          has 3     args.
FUNCTION	ElseEqual        has 3     args.
FUNCTION	SetBackground    has 3     args.
FUNCTION	SetChara         has 2     args.
FUNCTION	SetDate          has 3     args.
FUNCTION	SetTime          has 2     args.
FUNCTION	SetWeather       has 1     args.
FUNCTION	PassTime         has 2     args.
FUNCTION	RunTitle         has 0     args.
FUNCTION	DrawTitle        has 0     args.
FUNCTION	SelectTitleMenu  has 0     args.
FUNCTION	ShowTitleContinue has 0     args.
FUNCTION	ShowTitleOption  has 0     args.
FUNCTION	ShowTitleGameInfo has 0     args.
FUNCTION	RunPrologue      has 0     args.
FUNCTION	RunPrologueEvent has 0     args.
FUNCTION	TEST             has 0     args.
FUNCTION	EVENT_TIMEOUT    has 0     args.
FUNCTION	EVENT_KEYPRESS   has 0     args.
FUNCTION	ChangeGameMode   has 1     args.
MEDIA		%%0     has [ 0 0 0 5 ].
MEDIA		%%1     has [ 1 1 0 5 ].
MEDIA		%%2     has [ 2 2 0 3 ].
MEDIA		%%3     has [ 3 3 0 3 ].
MEDIA		%%4     has [ 4 4 0 5 ].
MEDIA		%%5     has [ 5 5 0 7 ].
MEDIA		%%6     has [ 6 6 0 7 ].
MEDIA		%%7     has [ 7 7 0 7 ].
MEDIA		%%8     has [ 8 8 0 7 ].
MEDIA		%%9     has [ 9 9 0 7 ].
MEDIA		%%10    has [ 10 10 0 7 ].
MEDIA		%%11    has [ 11 11 0 3 ].
MEDIA		%%12    has [ 12 12 0 6 ].
MEDIA		%%13    has [ 13 13 0 4 ].
MEDIA		%%14    has [ 14 14 0 4 ].
MEDIA		%%15    has [ 15 15 0 5 ].
MEDIA		%%16    has [ 16 16 0 5 ].
MEDIA		%%17    has [ 17 17 0 5 ].
MEDIA		%%18    has [ 18 18 0 7 ].
MEDIA		%%19    has [ 19 19 0 5 ].
MEDIA		%%20    has [ 20 20 0 21 ].
MEDIA		%%21    has [ 21 21 0 27 ].
MEDIA		%%22    has [ 22 22 0 12 ].
MEDIA		%%23    has [ 23 23 0 11 ].
MEDIA		%%24    has [ 24 24 0 12 ].
MEDIA		%%25    has [ 25 25 0 15 ].
MEDIA		%%26    has [ 26 26 0 4 ].
MEDIA		%%27    has [ 27 27 0 13 ].
MEDIA		%%28    has [ 28 28 0 30 ].
MEDIA		%%29    has [ 29 29 0 17 ].
MEDIA		%%30    has [ 30 30 0 30 ].
MEDIA		%%31    has [ 31 31 0 40 ].
MEDIA		%%32    has [ 32 32 0 14 ].
MEDIA		%%33    has [ 33 33 0 18 ].
MEDIA		%%34    has [ 34 34 0 14 ].
MEDIA		%%35    has [ 35 35 0 28 ].
MEDIA		%%36    has [ 36 36 0 4 ].
MEDIA		%%37    has [ 37 37 0 24 ].
MEDIA		%%38    has [ 38 38 0 20 ].
MEDIA		%%39    has [ 39 39 0 12 ].
MEDIA		%%40    has [ 40 40 0 32 ].
MEDIA		%%41    has [ 41 41 0 32 ].
MEDIA		%%42    has [ 42 42 0 45 ].
MEDIA		%%43    has [ 43 43 0 40 ].
MEDIA		%%44    has [ 44 44 0 8 ].
MEDIA		%%45    has [ 45 45 0 38 ].
MEDIA		%%46    has [ 46 46 0 6 ].
MEDIA		%%47    has [ 47 47 0 12 ].
MEDIA		%%48    has [ 48 48 0 17 ].
MEDIA		%%49    has [ 49 49 0 40 ].
MEDIA		%%50    has [ 50 50 0 6 ].
MEDIA		%%51    has [ 51 51 0 81 ].
MEDIA		%%52    has [ 52 52 0 23 ].
MEDIA		%%53    has [ 53 53 0 109 ].
MEDIA		%%54    has [ 54 54 0 6 ].
MEDIA		%%55    has [ 55 55 0 29 ].
MEDIA		%%56    has [ 56 56 0 6 ].
MEDIA		%%57    has [ 57 57 0 4 ].
MEDIA		%%58    has [ 58 58 0 21 ].
MEDIA		%%59    has [ 59 59 0 17 ].
MEDIA		%%60    has [ 60 60 0 20 ].
MEDIA		%%61    has [ 61 61 0 85 ].
MEDIA		%%62    has [ 62 62 0 15 ].
MEDIA		%%63    has [ 63 63 0 66 ].
MEDIA		%%64    has [ 64 64 0 68 ].
MEDIA		%%65    has [ 65 65 0 16 ].
MEDIA		%%66    has [ 66 66 0 71 ].
MEDIA		%%67    has [ 67 67 0 62 ].
MEDIA		%%68    has [ 68 68 0 42 ].
MEDIA		%%69    has [ 69 69 0 23 ].
MEDIA		%%70    has [ 70 70 0 7 ].
MEDIA		%%71    has [ 71 71 0 12 ].
MEDIA		%%72    has [ 72 72 0 12 ].
MEDIA		%%73    has [ 73 73 0 15 ].
MEDIA		%%74    has [ 74 74 0 27 ].
MEDIA		%%75    has [ 75 75 0 20 ].
MEDIA		%%76    has [ 76 76 0 13 ].
MEDIA		%%77    has [ 77 77 0 72 ].
MEDIA		%%78    has [ 78 78 0 31 ].
MEDIA		%%79    has [ 79 79 0 14 ].
MEDIA		%%80    has [ 80 80 0 21 ].
MEDIA		%%81    has [ 81 81 0 33 ].
MEDIA		%%82    has [ 82 82 0 29 ].
MEDIA		%%83    has [ 83 83 0 13 ].
MEDIA		%%84    has [ 84 84 0 27 ].
MEDIA		%%85    has [ 85 85 0 9 ].
MEDIA		%%86    has [ 86 86 0 48 ].
MEDIA		%%87    has [ 87 87 0 6 ].
MEDIA		%%88    has [ 88 88 0 16 ].
MEDIA		%%89    has [ 89 89 0 17 ].
MEDIA		%%90    has [ 90 90 0 25 ].
MEDIA		%%91    has [ 91 91 0 8 ].
MEDIA		%%92    has [ 92 92 0 42 ].
MEDIA		%%93    has [ 93 93 0 18 ].
MEDIA		%%94    has [ 94 94 0 63 ].
MEDIA		%%95    has [ 95 95 0 58 ].
MEDIA		%%96    has [ 96 96 0 4 ].
MEDIA		%%97    has [ 97 97 0 17 ].
MEDIA		%%98    has [ 98 98 0 11 ].
MEDIA		%%99    has [ 99 99 0 37 ].
MEDIA		%%100   has [ 100 100 0 16 ].
MEDIA		%%101   has [ 101 101 0 15 ].
MEDIA		%%102   has [ 102 102 0 33 ].
MEDIA		%%103   has [ 103 103 0 18 ].
MEDIA		%%104   has [ 104 104 0 8 ].
MEDIA		%%105   has [ 105 105 0 63 ].
MEDIA		%%106   has [ 106 106 0 26 ].
MEDIA		%%107   has [ 107 107 0 43 ].
MEDIA		%%108   has [ 108 108 0 34 ].
MEDIA		%%109   has [ 109 109 0 30 ].
MEDIA		%%110   has [ 110 110 0 29 ].
MEDIA		%%111   has [ 111 111 0 19 ].
MEDIA		%%112   has [ 112 112 0 30 ].
MEDIA		%%113   has [ 113 113 0 22 ].
MEDIA		%%114   has [ 114 114 0 36 ].
MEDIA		%%115   has [ 115 115 0 43 ].
MEDIA		%%116   has [ 116 116 0 17 ].
MEDIA		%%117   has [ 117 117 1 5 ].
MEDIA		%%118   has [ 118 118 1 5 ].
MEDIA		%%119   has [ 119 119 1 5 ].
MEDIA		%%120   has [ 120 120 1 5 ].
MEDIA		%%121   has [ 121 121 1 5 ].
MEDIA		%%122   has [ 122 122 1 5 ].
MEDIA		%%123   has [ 123 123 1 5 ].
MEDIA		%%124   has [ 124 124 1 5 ].
MEDIA		%%125   has [ 125 125 1 5 ].
MEDIA		%%126   has [ 126 126 1 5 ].
MEDIA		%%127   has [ 127 127 1 5 ].
MEDIA		%%128   has [ 128 128 1 5 ].
MEDIA		%%129   has [ 129 129 1 5 ].
MEDIA		%%130   has [ 130 130 1 5 ].
MEDIA		%%131   has [ 131 131 1 5 ].
MEDIA		%%132   has [ 132 132 1 5 ].
MEDIA		%%133   has [ 133 133 1 5 ].
MEDIA		%%134   has [ 134 134 1 5 ].
MEDIA		%%135   has [ 135 135 1 5 ].
MEDIA		%%136   has [ 136 136 1 5 ].
MEDIA		%%137   has [ 137 137 1 5 ].
MEDIA		%%138   has [ 138 138 1 5 ].
MEDIA		%%139   has [ 139 139 1 5 ].
MEDIA		%%140   has [ 140 140 1 5 ].
MEDIA		%%141   has [ 141 141 1 5 ].
MEDIA		%%142   has [ 142 142 1 5 ].
MEDIA		%%143   has [ 143 143 1 5 ].
MEDIA		%%144   has [ 144 144 1 5 ].
MEDIA		%%145   has [ 145 145 1 5 ].
MEDIA		%%146   has [ 146 146 1 5 ].
MEDIA		%%147   has [ 147 147 1 5 ].
MEDIA		%%148   has [ 148 148 1 5 ].
MEDIA		%%149   has [ 149 149 1 5 ].
MEDIA		%%150   has [ 150 150 1 9 ].
MEDIA		%%151   has [ 151 151 1 9 ].
MEDIA		%%152   has [ 152 152 0 0 ].
MEDIA		%%153   has [ 153 153 0 0 ].
MEDIA		%%154   has [ 154 154 0 0 ].
MEDIA		%%155   has [ 155 155 0 0 ].
MEDIA		%%156   has [ 156 156 0 0 ].
MEDIA		%%157   has [ 157 157 0 0 ].
MEDIA		%%158   has [ 158 158 0 0 ].
CODESIZE	14       Bytes in $init           
LABEL		$$0              of GetTotalDay     
LABEL		$$5              of GetTotalDay     
LABEL		$$4              of GetTotalDay     
LABEL		$$2              of GetTotalDay     
LABEL		$$1              of GetTotalDay     
LABEL		$$9              of GetTotalDay     
LABEL		$$8              of GetTotalDay     
LABEL		$$7              of GetTotalDay     
LABEL		$$6              of GetTotalDay     
LABEL		$$10             of GetTotalDay     
LABEL		$$11             of GetTotalDay     
CODESIZE	328      Bytes in GetTotalDay     
CODESIZE	36       Bytes in GetWeek         
LABEL		$$14             of ScreenEffect    
LABEL		$$18             of ScreenEffect    
LABEL		$$19             of ScreenEffect    
LABEL		$$20             of ScreenEffect    
LABEL		$$21             of ScreenEffect    
LABEL		$$22             of ScreenEffect    
LABEL		$$23             of ScreenEffect    
LABEL		$$24             of ScreenEffect    
LABEL		$$15             of ScreenEffect    
LABEL		$$26             of ScreenEffect    
LABEL		$$27             of ScreenEffect    
LABEL		$$16             of ScreenEffect    
LABEL		$$29             of ScreenEffect    
LABEL		$$30             of ScreenEffect    
LABEL		$$31             of ScreenEffect    
LABEL		$$32             of ScreenEffect    
LABEL		$$13             of ScreenEffect    
CODESIZE	1086     Bytes in ScreenEffect    
CODESIZE	406      Bytes in ShadowText      
CODESIZE	90       Bytes in InitNature      
CODESIZE	70       Bytes in InitEvent       
LABEL		$$33             of DrawBackground  
LABEL		$$35             of DrawBackground  
LABEL		$$34             of DrawBackground  
LABEL		$$37             of DrawBackground  
LABEL		$$39             of DrawBackground  
LABEL		$$38             of DrawBackground  
CODESIZE	188      Bytes in DrawBackground  
CODESIZE	488      Bytes in DrawInterface   
CODESIZE	22       Bytes in RunMainPlay     
LABEL		$$42             of RunEventLine    
LABEL		$$43             of RunEventLine    
LABEL		$$52             of RunEventLine    
LABEL		$$53             of RunEventLine    
LABEL		$$44             of RunEventLine    
LABEL		$$54             of RunEventLine    
LABEL		$$45             of RunEventLine    
LABEL		$$46             of RunEventLine    
LABEL		$$47             of RunEventLine    
LABEL		$$48             of RunEventLine    
LABEL		$$55             of RunEventLine    
LABEL		$$49             of RunEventLine    
LABEL		$$50             of RunEventLine    
LABEL		$$51             of RunEventLine    
LABEL		$$41             of RunEventLine    
CODESIZE	710      Bytes in RunEventLine    
LABEL		$$60             of DrawMessages    
LABEL		$$61             of DrawMessages    
LABEL		$$57             of DrawMessages    
LABEL		$$58             of DrawMessages    
LABEL		$$62             of DrawMessages    
LABEL		$$64             of DrawMessages    
LABEL		$$63             of DrawMessages    
CODESIZE	534      Bytes in DrawMessages    
LABEL		$$66             of DrawQuestion    
LABEL		$$70             of DrawQuestion    
LABEL		$$71             of DrawQuestion    
LABEL		$$72             of DrawQuestion    
LABEL		$$73             of DrawQuestion    
LABEL		$$69             of DrawQuestion    
LABEL		$$67             of DrawQuestion    
LABEL		$$74             of DrawQuestion    
LABEL		$$76             of DrawQuestion    
LABEL		$$75             of DrawQuestion    
CODESIZE	558      Bytes in DrawQuestion    
CODESIZE	22       Bytes in SetCurrentName  
LABEL		$$79             of IfEqual         
CODESIZE	40       Bytes in IfEqual         
LABEL		$$81             of ElseEqual       
CODESIZE	40       Bytes in ElseEqual       
LABEL		$$83             of SetBackground   
LABEL		$$84             of SetBackground   
CODESIZE	80       Bytes in SetBackground   
CODESIZE	24       Bytes in SetChara        
CODESIZE	84       Bytes in SetDate         
CODESIZE	44       Bytes in SetTime         
CODESIZE	24       Bytes in SetWeather      
LABEL		$$87             of PassTime        
LABEL		$$88             of PassTime        
LABEL		$$89             of PassTime        
LABEL		$$90             of PassTime        
LABEL		$$91             of PassTime        
LABEL		$$86             of PassTime        
CODESIZE	558      Bytes in PassTime        
CODESIZE	22       Bytes in RunTitle        
LABEL		$$93             of DrawTitle       
LABEL		$$94             of DrawTitle       
LABEL		$$95             of DrawTitle       
LABEL		$$96             of DrawTitle       
LABEL		$$97             of DrawTitle       
LABEL		$$98             of DrawTitle       
LABEL		$$92             of DrawTitle       
LABEL		$$101            of DrawTitle       
LABEL		$$102            of DrawTitle       
LABEL		$$103            of DrawTitle       
LABEL		$$99             of DrawTitle       
CODESIZE	336      Bytes in DrawTitle       
LABEL		$$107            of SelectTitleMenu 
LABEL		$$113            of SelectTitleMenu 
LABEL		$$114            of SelectTitleMenu 
LABEL		$$115            of SelectTitleMenu 
LABEL		$$108            of SelectTitleMenu 
LABEL		$$117            of SelectTitleMenu 
LABEL		$$118            of SelectTitleMenu 
LABEL		$$119            of SelectTitleMenu 
LABEL		$$109            of SelectTitleMenu 
LABEL		$$121            of SelectTitleMenu 
LABEL		$$122            of SelectTitleMenu 
LABEL		$$126            of SelectTitleMenu 
LABEL		$$127            of SelectTitleMenu 
LABEL		$$123            of SelectTitleMenu 
LABEL		$$110            of SelectTitleMenu 
LABEL		$$111            of SelectTitleMenu 
LABEL		$$104            of SelectTitleMenu 
LABEL		$$129            of SelectTitleMenu 
LABEL		$$130            of SelectTitleMenu 
LABEL		$$131            of SelectTitleMenu 
LABEL		$$134            of SelectTitleMenu 
LABEL		$$135            of SelectTitleMenu 
LABEL		$$136            of SelectTitleMenu 
LABEL		$$137            of SelectTitleMenu 
LABEL		$$132            of SelectTitleMenu 
LABEL		$$105            of SelectTitleMenu 
CODESIZE	706      Bytes in SelectTitleMenu 
LABEL		$$138            of ShowTitleContinue
LABEL		$$139            of ShowTitleContinue
CODESIZE	238      Bytes in ShowTitleContinue
LABEL		$$141            of ShowTitleOption 
LABEL		$$142            of ShowTitleOption 
CODESIZE	186      Bytes in ShowTitleOption 
CODESIZE	20       Bytes in ShowTitleGameInfo
CODESIZE	16       Bytes in RunPrologue     
LABEL		$$144            of RunPrologueEvent
LABEL		$$145            of RunPrologueEvent
LABEL		$$153            of RunPrologueEvent
LABEL		$$154            of RunPrologueEvent
LABEL		$$146            of RunPrologueEvent
LABEL		$$155            of RunPrologueEvent
LABEL		$$147            of RunPrologueEvent
LABEL		$$148            of RunPrologueEvent
LABEL		$$149            of RunPrologueEvent
LABEL		$$150            of RunPrologueEvent
LABEL		$$156            of RunPrologueEvent
LABEL		$$151            of RunPrologueEvent
LABEL		$$152            of RunPrologueEvent
LABEL		$$143            of RunPrologueEvent
CODESIZE	702      Bytes in RunPrologueEvent
CODESIZE	32       Bytes in main            
LABEL		$$158            of TEST            
CODESIZE	266      Bytes in TEST            
LABEL		$$160            of EVENT_TIMEOUT   
LABEL		$$161            of EVENT_TIMEOUT   
LABEL		$$162            of EVENT_TIMEOUT   
LABEL		$$163            of EVENT_TIMEOUT   
LABEL		$$164            of EVENT_TIMEOUT   
LABEL		$$159            of EVENT_TIMEOUT   
CODESIZE	120      Bytes in EVENT_TIMEOUT   
LABEL		$$166            of EVENT_KEYPRESS  
LABEL		$$167            of EVENT_KEYPRESS  
LABEL		$$168            of EVENT_KEYPRESS  
LABEL		$$165            of EVENT_KEYPRESS  
LABEL		$$170            of EVENT_KEYPRESS  
LABEL		$$171            of EVENT_KEYPRESS  
LABEL		$$172            of EVENT_KEYPRESS  
LABEL		$$169            of EVENT_KEYPRESS  
CODESIZE	172      Bytes in EVENT_KEYPRESS  
LABEL		$$174            of ChangeGameMode  
LABEL		$$175            of ChangeGameMode  
LABEL		$$176            of ChangeGameMode  
LABEL		$$177            of ChangeGameMode  
LABEL		$$178            of ChangeGameMode  
LABEL		$$173            of ChangeGameMode  
CODESIZE	124      Bytes in ChangeGameMode  
000th Func is '$init'
001th Func is 'ChangeGameMode'
002th Func is 'DrawBackground'
003th Func is 'DrawInterface'
004th Func is 'DrawMessages'
005th Func is 'DrawQuestion'
006th Func is 'DrawTitle'
007th Func is 'EVENT_KEYPRESS'
008th Func is 'EVENT_TIMEOUT'
009th Func is 'ElseEqual'
010th Func is 'GetTotalDay'
011th Func is 'GetWeek'
012th Func is 'IfEqual'
013th Func is 'InitEvent'
014th Func is 'InitNature'
015th Func is 'PassTime'
016th Func is 'RunEventLine'
017th Func is 'RunMainPlay'
018th Func is 'RunPrologue'
019th Func is 'RunPrologueEvent'
020th Func is 'RunTitle'
021th Func is 'ScreenEffect'
022th Func is 'SelectTitleMenu'
023th Func is 'SetBackground'
024th Func is 'SetChara'
025th Func is 'SetCurrentName'
026th Func is 'SetDate'
027th Func is 'SetTime'
028th Func is 'SetWeather'
029th Func is 'ShadowText'
030th Func is 'ShowTitleContinue'
031th Func is 'ShowTitleGameInfo'
032th Func is 'ShowTitleOption'
033th Func is 'TEST'
034th Func is 'main'
-------------------------------------------------
Optimize Function '$init()'
		Code Length : 14 Byte(s).
		Final Optimized Code Length : 14 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetTotalDay()'
		Code Length : 328 Byte(s).
	pushz		Day of Function GetTotalDay
	add
		Step.1 Reduced Original Code Length : 322 Byte(s).

		==> addz		72 ( Day of Function GetTotalDay )
		Step.2 Optimized Code Length : 326 Byte(s).

		Final Optimized Code Length : 326 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetWeek()'
		Code Length : 36 Byte(s).
		Final Optimized Code Length : 36 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ScreenEffect()'
		Code Length : 1086 Byte(s).
		Final Optimized Code Length : 1086 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShadowText()'
		Code Length : 406 Byte(s).
	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 400 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 404 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 398 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 402 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 396 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 400 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 394 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 398 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 392 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 396 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 390 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 394 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 388 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 392 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 386 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 390 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 384 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 388 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 382 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 386 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 380 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 384 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 378 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 382 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 376 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 380 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 374 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 378 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 372 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 376 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 370 Byte(s).

		==> addz		81 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 374 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 368 Byte(s).

		==> addz		82 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 372 Byte(s).

		Final Optimized Code Length : 372 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitNature()'
		Code Length : 90 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 80 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 86 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 76 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 82 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 72 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 78 Byte(s).

	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 68 Byte(s).

		==> addldrzc		47 ( Now )		6
		Step.2 Optimized Code Length : 74 Byte(s).

		Final Optimized Code Length : 74 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitEvent()'
		Code Length : 70 Byte(s).
		Final Optimized Code Length : 70 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBackground()'
		Code Length : 188 Byte(s).
		Final Optimized Code Length : 188 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawInterface()'
		Code Length : 488 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 478 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 484 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 474 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 480 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 470 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 476 Byte(s).

	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 466 Byte(s).

		==> addldrzc		47 ( Now )		6
		Step.2 Optimized Code Length : 472 Byte(s).

		Final Optimized Code Length : 472 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunMainPlay()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunEventLine()'
		Code Length : 710 Byte(s).
		Final Optimized Code Length : 710 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawMessages()'
		Code Length : 534 Byte(s).
		Final Optimized Code Length : 534 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawQuestion()'
		Code Length : 558 Byte(s).
	pushz		SelectedAnswer
	pushz		MsgCount of Function DrawQuestion
	add
		Step.1 Reduced Original Code Length : 548 Byte(s).

		==> addzz		56 ( SelectedAnswer )		96 ( MsgCount of Function DrawQuestion )
		Step.2 Optimized Code Length : 554 Byte(s).

		Final Optimized Code Length : 554 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetCurrentName()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'IfEqual()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ElseEqual()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetBackground()'
		Code Length : 80 Byte(s).
		Final Optimized Code Length : 80 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetChara()'
		Code Length : 24 Byte(s).
		Final Optimized Code Length : 24 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetDate()'
		Code Length : 84 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 74 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 80 Byte(s).

	ldrz		Now
	pushc		3
	add
		Step.1 Reduced Original Code Length : 70 Byte(s).

		==> addldrzc		47 ( Now )		3
		Step.2 Optimized Code Length : 76 Byte(s).

		Final Optimized Code Length : 76 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetTime()'
		Code Length : 44 Byte(s).
	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 34 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 40 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 30 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 36 Byte(s).

		Final Optimized Code Length : 36 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetWeather()'
		Code Length : 24 Byte(s).
	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 14 Byte(s).

		==> addldrzc		47 ( Now )		6
		Step.2 Optimized Code Length : 20 Byte(s).

		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'PassTime()'
		Code Length : 558 Byte(s).
	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 552 Byte(s).

		==> addz		123 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 556 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 550 Byte(s).

		==> addz		123 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 554 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 544 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 550 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 540 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 546 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 540 Byte(s).

		==> addz		123 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 544 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 534 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 540 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 530 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 536 Byte(s).

	pushz		TempCount of Function PassTime
	add
		Step.1 Reduced Original Code Length : 530 Byte(s).

		==> addz		124 ( TempCount of Function PassTime )
		Step.2 Optimized Code Length : 534 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 524 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 530 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 520 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 526 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 520 Byte(s).

		==> addz		123 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 524 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 514 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 520 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 510 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 516 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 506 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 512 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 502 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 508 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 502 Byte(s).

		==> addz		123 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 506 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 496 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 502 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 492 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 498 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 488 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 494 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 484 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 490 Byte(s).

		Final Optimized Code Length : 490 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunTitle()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawTitle()'
		Code Length : 336 Byte(s).
		Final Optimized Code Length : 336 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SelectTitleMenu()'
		Code Length : 706 Byte(s).
		Final Optimized Code Length : 706 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShowTitleContinue()'
		Code Length : 238 Byte(s).
		Final Optimized Code Length : 238 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShowTitleOption()'
		Code Length : 186 Byte(s).
		Final Optimized Code Length : 186 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShowTitleGameInfo()'
		Code Length : 20 Byte(s).
		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunPrologue()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunPrologueEvent()'
		Code Length : 702 Byte(s).
		Final Optimized Code Length : 702 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'main()'
		Code Length : 32 Byte(s).
		Final Optimized Code Length : 32 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'TEST()'
		Code Length : 266 Byte(s).
		Final Optimized Code Length : 266 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_TIMEOUT()'
		Code Length : 120 Byte(s).
		Final Optimized Code Length : 120 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_KEYPRESS()'
		Code Length : 172 Byte(s).
		Final Optimized Code Length : 172 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ChangeGameMode()'
		Code Length : 124 Byte(s).
		Final Optimized Code Length : 124 Byte(s).
-------------------------------------------------
FUNC COUNT: 35
Set FUNC ADDRESS : $init [0x00000080]
Set FUNC ADDRESS : ChangeGameMode [0x0000008E]
Set FUNC ADDRESS : DrawBackground [0x0000010A]
Set FUNC ADDRESS : DrawInterface [0x000001C6]
Set FUNC ADDRESS : DrawMessages [0x0000039E]
Set FUNC ADDRESS : DrawQuestion [0x000005B4]
Set FUNC ADDRESS : DrawTitle [0x000007DE]
Set FUNC ADDRESS : EVENT_KEYPRESS [0x0000092E]
Set FUNC ADDRESS : EVENT_TIMEOUT [0x000009DA]
Set FUNC ADDRESS : ElseEqual [0x00000A52]
Set FUNC ADDRESS : GetTotalDay [0x00000A7A]
Set FUNC ADDRESS : GetWeek [0x00000BC0]
Set FUNC ADDRESS : IfEqual [0x00000BE4]
Set FUNC ADDRESS : InitEvent [0x00000C0C]
Set FUNC ADDRESS : InitNature [0x00000C52]
Set FUNC ADDRESS : PassTime [0x00000C9C]
Set FUNC ADDRESS : RunEventLine [0x00000E86]
Set FUNC ADDRESS : RunMainPlay [0x0000114C]
Set FUNC ADDRESS : RunPrologue [0x00001162]
Set FUNC ADDRESS : RunPrologueEvent [0x00001172]
Set FUNC ADDRESS : RunTitle [0x00001430]
Set FUNC ADDRESS : ScreenEffect [0x00001446]
Set FUNC ADDRESS : SelectTitleMenu [0x00001884]
Set FUNC ADDRESS : SetBackground [0x00001B46]
Set FUNC ADDRESS : SetChara [0x00001B96]
Set FUNC ADDRESS : SetCurrentName [0x00001BAE]
Set FUNC ADDRESS : SetDate [0x00001BC4]
Set FUNC ADDRESS : SetTime [0x00001C10]
Set FUNC ADDRESS : SetWeather [0x00001C34]
Set FUNC ADDRESS : ShadowText [0x00001C48]
Set FUNC ADDRESS : ShowTitleContinue [0x00001DBC]
Set FUNC ADDRESS : ShowTitleGameInfo [0x00001EAA]
Set FUNC ADDRESS : ShowTitleOption [0x00001EBE]
Set FUNC ADDRESS : TEST [0x00001F78]
Set FUNC ADDRESS : main [0x00002082]

FUNCTION : $init()
{
	0x00000080 : zsetc		58 ( CurrentName )		-1	// , $init, -1 - SAL : 839
	0x00000086 : zsetc		68 ( NextKey )		-1	// , $init, -1 - SAL : 840
	0x0000008C : ret	// , $init, -1 - SAL : 841
}


FUNCTION : ChangeGameMode()
{
	0x0000008E : nop	// , ChangeGameMode, -1 - SAL : 2996
	0x00000090 : popz		129 ( Mode of Function ChangeGameMode )	// , ChangeGameMode, -1 - SAL : 2997
	0x00000094 : ssp	// , ChangeGameMode, -1 - SAL : 2998
	0x00000096 : pushz		129 ( Mode of Function ChangeGameMode )	// , ChangeGameMode, -1 - SAL : 2999
	0x0000009A : dup	// , ChangeGameMode, -1 - SAL : 3000
	0x0000009C : eqjp		0		0x000000C8	// , ChangeGameMode, -1 - SAL : 3001
	0x000000A4 : dup	// , ChangeGameMode, -1 - SAL : 3002
	0x000000A6 : eqjp		1		0x000000DC	// , ChangeGameMode, -1 - SAL : 3003
	0x000000AE : dup	// , ChangeGameMode, -1 - SAL : 3004
	0x000000B0 : eqjp		2		0x000000EA	// , ChangeGameMode, -1 - SAL : 3005
	0x000000B8 : dup	// , ChangeGameMode, -1 - SAL : 3006
	0x000000BA : eqjp		3		0x000000F8	// , ChangeGameMode, -1 - SAL : 3007
	0x000000C2 : ujp		0x00000106	// , ChangeGameMode, -1 - SAL : 3008
	0x000000C8 : rsp	// , ChangeGameMode, -1 - SAL : 3009
	0x000000CA : call		0x00000C52	// , ChangeGameMode, -1 - SAL : 3010
	0x000000D0 : zsetc		69 ( GameMode )		0	// , ChangeGameMode, -1 - SAL : 3011
	0x000000D6 : ujp		0x00000108	// , ChangeGameMode, -1 - SAL : 3012
	0x000000DC : rsp	// , ChangeGameMode, -1 - SAL : 3013
	0x000000DE : zsetc		69 ( GameMode )		1	// , ChangeGameMode, -1 - SAL : 3014
	0x000000E4 : ujp		0x00000108	// , ChangeGameMode, -1 - SAL : 3015
	0x000000EA : rsp	// , ChangeGameMode, -1 - SAL : 3016
	0x000000EC : zsetc		69 ( GameMode )		2	// , ChangeGameMode, -1 - SAL : 3017
	0x000000F2 : ujp		0x00000108	// , ChangeGameMode, -1 - SAL : 3018
	0x000000F8 : rsp	// , ChangeGameMode, -1 - SAL : 3019
	0x000000FA : zsetc		69 ( GameMode )		3	// , ChangeGameMode, -1 - SAL : 3020
	0x00000100 : ujp		0x00000108	// , ChangeGameMode, -1 - SAL : 3021
	0x00000106 : rsp	// , ChangeGameMode, -1 - SAL : 3022
	0x00000108 : ret	// , ChangeGameMode, -1 - SAL : 3023
}


FUNCTION : DrawBackground()
{
	0x0000010A : nop	// , DrawBackground, -1 - SAL : 1367
	0x0000010C : pushc		2	// , DrawBackground, -1 - SAL : 1368
	0x00000110 : pushc		25	// , DrawBackground, -1 - SAL : 1369
	0x00000114 : pushc		3	// , DrawBackground, -1 - SAL : 1370
	0x00000118 : pushc		0	// , DrawBackground, -1 - SAL : 1371
	0x0000011C : calls		SetFontType(40)	// , DrawBackground, -1 - SAL : 1372
	0x00000120 : zsetc		87 ( i of Function DrawBackground )		0	// , DrawBackground, -1 - SAL : 1373
	0x00000126 : pushz		87 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1374
	0x0000012A : gejp		2		0x00000164	// , DrawBackground, -1 - SAL : 1375
	0x00000132 : pushi		49 ( Background )		87 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1376
	0x00000138 : ltjp		0		0x00000158	// , DrawBackground, -1 - SAL : 1377
	0x00000140 : pushc		0	// , DrawBackground, -1 - SAL : 1378
	0x00000144 : pushc		20	// , DrawBackground, -1 - SAL : 1379
	0x00000148 : pushi		49 ( Background )		87 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1380
	0x0000014E : ldrz		40 ( bg )	// , DrawBackground, -1 - SAL : 1381
	0x00000152 : add	// , DrawBackground, -1 - SAL : 1382
	0x00000154 : ixa	// , DrawBackground, -1 - SAL : 1383
	0x00000156 : CopyImage	// , DrawBackground, -1 - SAL : 1384
	0x00000158 : incz		87 ( i of Function DrawBackground )		1	// , DrawBackground, -1 - SAL : 1385
	0x0000015E : ujp		0x00000126	// , DrawBackground, -1 - SAL : 1386
	0x00000164 : zsetc		87 ( i of Function DrawBackground )		0	// , DrawBackground, -1 - SAL : 1387
	0x0000016A : pushz		87 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1388
	0x0000016E : gejp		1		0x000001A8	// , DrawBackground, -1 - SAL : 1389
	0x00000176 : pushi		50 ( BackChara )		87 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1390
	0x0000017C : ltjp		0		0x0000019C	// , DrawBackground, -1 - SAL : 1391
	0x00000184 : pushc		30	// , DrawBackground, -1 - SAL : 1392
	0x00000188 : pushc		100	// , DrawBackground, -1 - SAL : 1393
	0x0000018C : pushi		50 ( BackChara )		87 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1394
	0x00000192 : ldrz		41 ( chara )	// , DrawBackground, -1 - SAL : 1395
	0x00000196 : add	// , DrawBackground, -1 - SAL : 1396
	0x00000198 : ixa	// , DrawBackground, -1 - SAL : 1397
	0x0000019A : CopyImage	// , DrawBackground, -1 - SAL : 1398
	0x0000019C : incz		87 ( i of Function DrawBackground )		1	// , DrawBackground, -1 - SAL : 1399
	0x000001A2 : ujp		0x0000016A	// , DrawBackground, -1 - SAL : 1400
	0x000001A8 : pushc		3	// , DrawBackground, -1 - SAL : 1401
	0x000001AC : calls		SetColor(38)	// , DrawBackground, -1 - SAL : 1402
	0x000001B0 : pushc		0	// , DrawBackground, -1 - SAL : 1403
	0x000001B4 : pushc		210	// , DrawBackground, -1 - SAL : 1404
	0x000001B8 : pushc		240	// , DrawBackground, -1 - SAL : 1405
	0x000001BC : pushc		300	// , DrawBackground, -1 - SAL : 1406
	0x000001C0 : calls		FillRect(70)	// , DrawBackground, -1 - SAL : 1407
	0x000001C4 : ret	// , DrawBackground, -1 - SAL : 1408
}


FUNCTION : DrawInterface()
{
	0x000001C6 : nop	// , DrawInterface, -1 - SAL : 1409
	0x000001C8 : pushc		21	// , DrawInterface, -1 - SAL : 1410
	0x000001CC : pushc		30	// , DrawInterface, -1 - SAL : 1411
	0x000001D0 : calls		SetShadeColor(52)	// , DrawInterface, -1 - SAL : 1412
	0x000001D4 : pushc		0	// , DrawInterface, -1 - SAL : 1413
	0x000001D8 : pushc		0	// , DrawInterface, -1 - SAL : 1414
	0x000001DC : pushc		239	// , DrawInterface, -1 - SAL : 1415
	0x000001E0 : pushc		19	// , DrawInterface, -1 - SAL : 1416
	0x000001E4 : pushc		3	// , DrawInterface, -1 - SAL : 1417
	0x000001E8 : pushc		1	// , DrawInterface, -1 - SAL : 1418
	0x000001EC : calls		ShadeRect(78)	// , DrawInterface, -1 - SAL : 1419
	0x000001F0 : pushc		3	// , DrawInterface, -1 - SAL : 1420
	0x000001F4 : calls		SetColor(38)	// , DrawInterface, -1 - SAL : 1421
	0x000001F8 : pushc		0	// , DrawInterface, -1 - SAL : 1422
	0x000001FC : pushc		0	// , DrawInterface, -1 - SAL : 1423
	0x00000200 : pushc		239	// , DrawInterface, -1 - SAL : 1424
	0x00000204 : pushc		19	// , DrawInterface, -1 - SAL : 1425
	0x00000208 : calls		DrawRect(69)	// , DrawInterface, -1 - SAL : 1426
	0x0000020C : pushc		0	// , DrawInterface, -1 - SAL : 1427
	0x00000210 : pushc		277	// , DrawInterface, -1 - SAL : 1428
	0x00000214 : pushc		123	// , DrawInterface, -1 - SAL : 1429
	0x00000218 : CopyImage	// , DrawInterface, -1 - SAL : 1430
	0x0000021A : pushc		47	// , DrawInterface, -1 - SAL : 1431
	0x0000021E : pushc		277	// , DrawInterface, -1 - SAL : 1432
	0x00000222 : pushc		123	// , DrawInterface, -1 - SAL : 1433
	0x00000226 : CopyImage	// , DrawInterface, -1 - SAL : 1434
	0x00000228 : pushc		94	// , DrawInterface, -1 - SAL : 1435
	0x0000022C : pushc		277	// , DrawInterface, -1 - SAL : 1436
	0x00000230 : pushc		123	// , DrawInterface, -1 - SAL : 1437
	0x00000234 : CopyImage	// , DrawInterface, -1 - SAL : 1438
	0x00000236 : pushc		141	// , DrawInterface, -1 - SAL : 1439
	0x0000023A : pushc		277	// , DrawInterface, -1 - SAL : 1440
	0x0000023E : pushc		123	// , DrawInterface, -1 - SAL : 1441
	0x00000242 : CopyImage	// , DrawInterface, -1 - SAL : 1442
	0x00000244 : pushc		188	// , DrawInterface, -1 - SAL : 1443
	0x00000248 : pushc		277	// , DrawInterface, -1 - SAL : 1444
	0x0000024C : pushc		123	// , DrawInterface, -1 - SAL : 1445
	0x00000250 : CopyImage	// , DrawInterface, -1 - SAL : 1446
	0x00000252 : pushc		2	// , DrawInterface, -1 - SAL : 1447
	0x00000256 : pushc		0	// , DrawInterface, -1 - SAL : 1448
	0x0000025A : pushc		3	// , DrawInterface, -1 - SAL : 1449
	0x0000025E : pushc		0	// , DrawInterface, -1 - SAL : 1450
	0x00000262 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1451
	0x00000266 : pushc		5	// , DrawInterface, -1 - SAL : 1452
	0x0000026A : pushc		282	// , DrawInterface, -1 - SAL : 1453
	0x0000026E : pushmi		%%5	// , DrawInterface, -1 - SAL : 1454
	0x00000272 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1455
	0x00000276 : pushc		52	// , DrawInterface, -1 - SAL : 1456
	0x0000027A : pushc		282	// , DrawInterface, -1 - SAL : 1457
	0x0000027E : pushmi		%%6	// , DrawInterface, -1 - SAL : 1458
	0x00000282 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1459
	0x00000286 : pushc		99	// , DrawInterface, -1 - SAL : 1460
	0x0000028A : pushc		282	// , DrawInterface, -1 - SAL : 1461
	0x0000028E : pushmi		%%7	// , DrawInterface, -1 - SAL : 1462
	0x00000292 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1463
	0x00000296 : pushc		146	// , DrawInterface, -1 - SAL : 1464
	0x0000029A : pushc		282	// , DrawInterface, -1 - SAL : 1465
	0x0000029E : pushmi		%%8	// , DrawInterface, -1 - SAL : 1466
	0x000002A2 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1467
	0x000002A6 : pushc		193	// , DrawInterface, -1 - SAL : 1468
	0x000002AA : pushc		282	// , DrawInterface, -1 - SAL : 1469
	0x000002AE : pushmi		%%9	// , DrawInterface, -1 - SAL : 1470
	0x000002B2 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1471
	0x000002B6 : pushc		1	// , DrawInterface, -1 - SAL : 1472
	0x000002BA : pushc		0	// , DrawInterface, -1 - SAL : 1473
	0x000002BE : pushc		3	// , DrawInterface, -1 - SAL : 1474
	0x000002C2 : pushc		0	// , DrawInterface, -1 - SAL : 1475
	0x000002C6 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1476
	0x000002CA : pushz		89 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1477
	0x000002CE : pushmi		%%10	// , DrawInterface, -1 - SAL : 1478
	0x000002D2 : ldrz		47 ( Now )	// , DrawInterface, -1 - SAL : 1479
	0x000002D6 : ixa	// , DrawInterface, -1 - SAL : 1480
	0x000002D8 : ldrz		47 ( Now )	// , DrawInterface, -1 - SAL : 1481
	0x000002DC : inc	// , DrawInterface, -1 - SAL : 1482
	0x000002DE : ixa	// , DrawInterface, -1 - SAL : 1483
	0x000002E0 : calls		MakeStr2(175)	// , DrawInterface, -1 - SAL : 1484
	0x000002E4 : pushc		7	// , DrawInterface, -1 - SAL : 1485
	0x000002E8 : pushc		8	// , DrawInterface, -1 - SAL : 1486
	0x000002EC : pushz		89 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1487
	0x000002F0 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1488
	0x000002F4 : pushc		2	// , DrawInterface, -1 - SAL : 1489
	0x000002F8 : pushc		0	// , DrawInterface, -1 - SAL : 1490
	0x000002FC : pushc		3	// , DrawInterface, -1 - SAL : 1491
	0x00000300 : pushc		0	// , DrawInterface, -1 - SAL : 1492
	0x00000304 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1493
	0x00000308 : pushz		89 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1494
	0x0000030C : pushmi		%%11	// , DrawInterface, -1 - SAL : 1495
	0x00000310 : addldrzc		47 ( Now )		2	// , DrawInterface, -1 - SAL : 1496
	0x00000316 : ixa	// , DrawInterface, -1 - SAL : 1499
	0x00000318 : calls		MakeStr1(174)	// , DrawInterface, -1 - SAL : 1500
	0x0000031C : pushc		70	// , DrawInterface, -1 - SAL : 1501
	0x00000320 : pushc		6	// , DrawInterface, -1 - SAL : 1502
	0x00000324 : pushz		89 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1503
	0x00000328 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1504
	0x0000032C : pushc		1	// , DrawInterface, -1 - SAL : 1505
	0x00000330 : pushc		0	// , DrawInterface, -1 - SAL : 1506
	0x00000334 : pushc		3	// , DrawInterface, -1 - SAL : 1507
	0x00000338 : pushc		0	// , DrawInterface, -1 - SAL : 1508
	0x0000033C : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1509
	0x00000340 : pushz		89 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1510
	0x00000344 : pushmi		%%12	// , DrawInterface, -1 - SAL : 1511
	0x00000348 : addldrzc		47 ( Now )		4	// , DrawInterface, -1 - SAL : 1512
	0x0000034E : ixa	// , DrawInterface, -1 - SAL : 1515
	0x00000350 : addldrzc		47 ( Now )		5	// , DrawInterface, -1 - SAL : 1516
	0x00000356 : ixa	// , DrawInterface, -1 - SAL : 1519
	0x00000358 : calls		MakeStr2(175)	// , DrawInterface, -1 - SAL : 1520
	0x0000035C : pushc		100	// , DrawInterface, -1 - SAL : 1521
	0x00000360 : pushc		8	// , DrawInterface, -1 - SAL : 1522
	0x00000364 : pushz		89 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1523
	0x00000368 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1524
	0x0000036C : pushc		2	// , DrawInterface, -1 - SAL : 1525
	0x00000370 : pushc		0	// , DrawInterface, -1 - SAL : 1526
	0x00000374 : pushc		3	// , DrawInterface, -1 - SAL : 1527
	0x00000378 : pushc		0	// , DrawInterface, -1 - SAL : 1528
	0x0000037C : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1529
	0x00000380 : pushc		180	// , DrawInterface, -1 - SAL : 1530
	0x00000384 : pushc		6	// , DrawInterface, -1 - SAL : 1531
	0x00000388 : addldrzc		47 ( Now )		6	// , DrawInterface, -1 - SAL : 1532
	0x0000038E : ixa	// , DrawInterface, -1 - SAL : 1535
	0x00000390 : ldrz		45 ( WEATHER )	// , DrawInterface, -1 - SAL : 1536
	0x00000394 : add	// , DrawInterface, -1 - SAL : 1537
	0x00000396 : ixa	// , DrawInterface, -1 - SAL : 1538
	0x00000398 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1539
	0x0000039C : ret	// , DrawInterface, -1 - SAL : 1540
}


FUNCTION : DrawMessages()
{
	0x0000039E : nop	// , DrawMessages, -1 - SAL : 1724
	0x000003A0 : stnz		90 ( MessageNumber of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1725
	0x000003A4 : ldrz		52 ( Messages )	// , DrawMessages, -1 - SAL : 1726
	0x000003A8 : add	// , DrawMessages, -1 - SAL : 1727
	0x000003AA : ixa	// , DrawMessages, -1 - SAL : 1728
	0x000003AC : calls		StrLen(160)	// , DrawMessages, -1 - SAL : 1729
	0x000003B0 : pushc		36	// , DrawMessages, -1 - SAL : 1730
	0x000003B4 : div	// , DrawMessages, -1 - SAL : 1731
	0x000003B6 : inc	// , DrawMessages, -1 - SAL : 1732
	0x000003B8 : popz		92 ( Length of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1733
	0x000003BC : pushc		252	// , DrawMessages, -1 - SAL : 1734
	0x000003C0 : pushc		60	// , DrawMessages, -1 - SAL : 1735
	0x000003C4 : sub	// , DrawMessages, -1 - SAL : 1736
	0x000003C6 : popz		94 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1737
	0x000003CA : pushz		58 ( CurrentName )	// , DrawMessages, -1 - SAL : 1738
	0x000003CE : lejp		-1		0x000004B0	// , DrawMessages, -1 - SAL : 1739
	0x000003D6 : ssp	// , DrawMessages, -1 - SAL : 1740
	0x000003D8 : pushz		59 ( NamePosition )	// , DrawMessages, -1 - SAL : 1741
	0x000003DC : dup	// , DrawMessages, -1 - SAL : 1742
	0x000003DE : eqjp		0		0x000003F8	// , DrawMessages, -1 - SAL : 1743
	0x000003E6 : dup	// , DrawMessages, -1 - SAL : 1744
	0x000003E8 : eqjp		1		0x00000454	// , DrawMessages, -1 - SAL : 1745
	0x000003F0 : rsp	// , DrawMessages, -1 - SAL : 1746
	0x000003F2 : ujp		0x000004C4	// , DrawMessages, -1 - SAL : 1747
	0x000003F8 : rsp	// , DrawMessages, -1 - SAL : 1748
	0x000003FA : pushc		4	// , DrawMessages, -1 - SAL : 1749
	0x000003FE : pushc		252	// , DrawMessages, -1 - SAL : 1750
	0x00000402 : pushc		60	// , DrawMessages, -1 - SAL : 1751
	0x00000406 : sub	// , DrawMessages, -1 - SAL : 1752
	0x00000408 : pushc		118	// , DrawMessages, -1 - SAL : 1753
	0x0000040C : CopyImage	// , DrawMessages, -1 - SAL : 1754
	0x0000040E : pushc		215	// , DrawMessages, -1 - SAL : 1755
	0x00000412 : pushc		260	// , DrawMessages, -1 - SAL : 1756
	0x00000416 : pushc		60	// , DrawMessages, -1 - SAL : 1757
	0x0000041A : sub	// , DrawMessages, -1 - SAL : 1758
	0x0000041C : pushc		119	// , DrawMessages, -1 - SAL : 1759
	0x00000420 : CopyImage	// , DrawMessages, -1 - SAL : 1760
	0x00000422 : pushc		2	// , DrawMessages, -1 - SAL : 1761
	0x00000426 : pushc		0	// , DrawMessages, -1 - SAL : 1762
	0x0000042A : pushc		3	// , DrawMessages, -1 - SAL : 1763
	0x0000042E : pushc		1	// , DrawMessages, -1 - SAL : 1764
	0x00000432 : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1765
	0x00000436 : pushc		40	// , DrawMessages, -1 - SAL : 1766
	0x0000043A : pushz		94 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1767
	0x0000043E : pushc		5	// , DrawMessages, -1 - SAL : 1768
	0x00000442 : add	// , DrawMessages, -1 - SAL : 1769
	0x00000444 : pushi		51 ( Names )		58 ( CurrentName )	// , DrawMessages, -1 - SAL : 1770
	0x0000044A : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1771
	0x0000044E : ujp		0x000004C4	// , DrawMessages, -1 - SAL : 1772
	0x00000454 : rsp	// , DrawMessages, -1 - SAL : 1773
	0x00000456 : pushc		166	// , DrawMessages, -1 - SAL : 1774
	0x0000045A : pushc		252	// , DrawMessages, -1 - SAL : 1775
	0x0000045E : pushc		60	// , DrawMessages, -1 - SAL : 1776
	0x00000462 : sub	// , DrawMessages, -1 - SAL : 1777
	0x00000464 : pushc		118	// , DrawMessages, -1 - SAL : 1778
	0x00000468 : CopyImage	// , DrawMessages, -1 - SAL : 1779
	0x0000046A : pushc		2	// , DrawMessages, -1 - SAL : 1780
	0x0000046E : pushc		260	// , DrawMessages, -1 - SAL : 1781
	0x00000472 : pushc		60	// , DrawMessages, -1 - SAL : 1782
	0x00000476 : sub	// , DrawMessages, -1 - SAL : 1783
	0x00000478 : pushc		119	// , DrawMessages, -1 - SAL : 1784
	0x0000047C : CopyImage	// , DrawMessages, -1 - SAL : 1785
	0x0000047E : pushc		2	// , DrawMessages, -1 - SAL : 1786
	0x00000482 : pushc		0	// , DrawMessages, -1 - SAL : 1787
	0x00000486 : pushc		3	// , DrawMessages, -1 - SAL : 1788
	0x0000048A : pushc		1	// , DrawMessages, -1 - SAL : 1789
	0x0000048E : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1790
	0x00000492 : pushc		202	// , DrawMessages, -1 - SAL : 1791
	0x00000496 : pushz		94 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1792
	0x0000049A : pushc		5	// , DrawMessages, -1 - SAL : 1793
	0x0000049E : add	// , DrawMessages, -1 - SAL : 1794
	0x000004A0 : pushi		51 ( Names )		58 ( CurrentName )	// , DrawMessages, -1 - SAL : 1795
	0x000004A6 : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1796
	0x000004AA : ujp		0x000004C4	// , DrawMessages, -1 - SAL : 1797
	0x000004B0 : pushc		215	// , DrawMessages, -1 - SAL : 1798
	0x000004B4 : pushc		260	// , DrawMessages, -1 - SAL : 1799
	0x000004B8 : pushc		60	// , DrawMessages, -1 - SAL : 1800
	0x000004BC : sub	// , DrawMessages, -1 - SAL : 1801
	0x000004BE : pushc		119	// , DrawMessages, -1 - SAL : 1802
	0x000004C2 : CopyImage	// , DrawMessages, -1 - SAL : 1803
	0x000004C4 : pushc		3	// , DrawMessages, -1 - SAL : 1804
	0x000004C8 : calls		SetColor(38)	// , DrawMessages, -1 - SAL : 1805
	0x000004CC : pushc		4	// , DrawMessages, -1 - SAL : 1806
	0x000004D0 : pushc		274	// , DrawMessages, -1 - SAL : 1807
	0x000004D4 : pushc		60	// , DrawMessages, -1 - SAL : 1808
	0x000004D8 : sub	// , DrawMessages, -1 - SAL : 1809
	0x000004DA : pushc		285	// , DrawMessages, -1 - SAL : 1810
	0x000004DE : pushc		272	// , DrawMessages, -1 - SAL : 1811
	0x000004E2 : pushc		2	// , DrawMessages, -1 - SAL : 1812
	0x000004E6 : calls		FillRectEx(71)	// , DrawMessages, -1 - SAL : 1813
	0x000004EA : pushc		0	// , DrawMessages, -1 - SAL : 1814
	0x000004EE : pushc		270	// , DrawMessages, -1 - SAL : 1815
	0x000004F2 : pushc		60	// , DrawMessages, -1 - SAL : 1816
	0x000004F6 : sub	// , DrawMessages, -1 - SAL : 1817
	0x000004F8 : pushc		117	// , DrawMessages, -1 - SAL : 1818
	0x000004FC : CopyImage	// , DrawMessages, -1 - SAL : 1819
	0x000004FE : pushc		2	// , DrawMessages, -1 - SAL : 1820
	0x00000502 : pushc		0	// , DrawMessages, -1 - SAL : 1821
	0x00000506 : pushc		3	// , DrawMessages, -1 - SAL : 1822
	0x0000050A : pushc		0	// , DrawMessages, -1 - SAL : 1823
	0x0000050E : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1824
	0x00000512 : zsetc		93 ( i of Function DrawMessages )		0	// , DrawMessages, -1 - SAL : 1825
	0x00000518 : pushz		93 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1826
	0x0000051C : gejp		4		0x000005A4	// , DrawMessages, -1 - SAL : 1827
	0x00000524 : pushc		0	// , DrawMessages, -1 - SAL : 1828
	0x00000528 : pushc		275	// , DrawMessages, -1 - SAL : 1829
	0x0000052C : pushc		14	// , DrawMessages, -1 - SAL : 1830
	0x00000530 : pushz		93 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1831
	0x00000534 : mult	// , DrawMessages, -1 - SAL : 1832
	0x00000536 : sub	// , DrawMessages, -1 - SAL : 1833
	0x00000538 : pushc		18	// , DrawMessages, -1 - SAL : 1834
	0x0000053C : sub	// , DrawMessages, -1 - SAL : 1835
	0x0000053E : pushc		120	// , DrawMessages, -1 - SAL : 1836
	0x00000542 : CopyImage	// , DrawMessages, -1 - SAL : 1837
	0x00000544 : pushz		93 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1838
	0x00000548 : pushz		92 ( Length of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1839
	0x0000054C : lt	// , DrawMessages, -1 - SAL : 1840
	0x0000054E : fjp		0x00000598	// , DrawMessages, -1 - SAL : 1841
	0x00000554 : pushz		91 ( TempString of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1842
	0x00000558 : pushi		52 ( Messages )		90 ( MessageNumber of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1843
	0x0000055E : pushz		93 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1844
	0x00000562 : pushc		36	// , DrawMessages, -1 - SAL : 1845
	0x00000566 : mult	// , DrawMessages, -1 - SAL : 1846
	0x00000568 : pushc		36	// , DrawMessages, -1 - SAL : 1847
	0x0000056C : calls		StrSub(162)	// , DrawMessages, -1 - SAL : 1848
	0x00000570 : pushc		7	// , DrawMessages, -1 - SAL : 1849
	0x00000574 : pushc		277	// , DrawMessages, -1 - SAL : 1850
	0x00000578 : pushc		3	// , DrawMessages, -1 - SAL : 1851
	0x0000057C : pushz		93 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1852
	0x00000580 : sub	// , DrawMessages, -1 - SAL : 1853
	0x00000582 : pushc		14	// , DrawMessages, -1 - SAL : 1854
	0x00000586 : mult	// , DrawMessages, -1 - SAL : 1855
	0x00000588 : sub	// , DrawMessages, -1 - SAL : 1856
	0x0000058A : pushc		18	// , DrawMessages, -1 - SAL : 1857
	0x0000058E : sub	// , DrawMessages, -1 - SAL : 1858
	0x00000590 : pushz		91 ( TempString of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1859
	0x00000594 : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1860
	0x00000598 : incz		93 ( i of Function DrawMessages )		1	// , DrawMessages, -1 - SAL : 1861
	0x0000059E : ujp		0x00000518	// , DrawMessages, -1 - SAL : 1862
	0x000005A4 : pushc		0	// , DrawMessages, -1 - SAL : 1863
	0x000005A8 : pushc		270	// , DrawMessages, -1 - SAL : 1864
	0x000005AC : pushc		121	// , DrawMessages, -1 - SAL : 1865
	0x000005B0 : CopyImage	// , DrawMessages, -1 - SAL : 1866
	0x000005B2 : ret	// , DrawMessages, -1 - SAL : 1867
}


FUNCTION : DrawQuestion()
{
	0x000005B4 : nop	// , DrawQuestion, -1 - SAL : 1868
	0x000005B6 : popz		100 ( Select4 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1869
	0x000005BA : popz		99 ( Select3 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1870
	0x000005BE : popz		98 ( Select2 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1871
	0x000005C2 : popz		97 ( Select1 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1872
	0x000005C6 : popz		96 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1873
	0x000005CA : popz		95 ( Value of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1874
	0x000005CE : pushc		3	// , DrawQuestion, -1 - SAL : 1875
	0x000005D2 : calls		SetColor(38)	// , DrawQuestion, -1 - SAL : 1876
	0x000005D6 : pushc		4	// , DrawQuestion, -1 - SAL : 1877
	0x000005DA : pushc		288	// , DrawQuestion, -1 - SAL : 1878
	0x000005DE : pushc		74	// , DrawQuestion, -1 - SAL : 1879
	0x000005E2 : sub	// , DrawQuestion, -1 - SAL : 1880
	0x000005E4 : pushc		285	// , DrawQuestion, -1 - SAL : 1881
	0x000005E8 : pushc		272	// , DrawQuestion, -1 - SAL : 1882
	0x000005EC : pushc		2	// , DrawQuestion, -1 - SAL : 1883
	0x000005F0 : calls		FillRectEx(71)	// , DrawQuestion, -1 - SAL : 1884
	0x000005F4 : pushc		0	// , DrawQuestion, -1 - SAL : 1885
	0x000005F8 : pushc		284	// , DrawQuestion, -1 - SAL : 1886
	0x000005FC : pushc		74	// , DrawQuestion, -1 - SAL : 1887
	0x00000600 : sub	// , DrawQuestion, -1 - SAL : 1888
	0x00000602 : pushc		117	// , DrawQuestion, -1 - SAL : 1889
	0x00000606 : CopyImage	// , DrawQuestion, -1 - SAL : 1890
	0x00000608 : pushc		0	// , DrawQuestion, -1 - SAL : 1891
	0x0000060C : pushc		275	// , DrawQuestion, -1 - SAL : 1892
	0x00000610 : pushc		46	// , DrawQuestion, -1 - SAL : 1893
	0x00000614 : sub	// , DrawQuestion, -1 - SAL : 1894
	0x00000616 : pushc		120	// , DrawQuestion, -1 - SAL : 1895
	0x0000061A : CopyImage	// , DrawQuestion, -1 - SAL : 1896
	0x0000061C : pushc		0	// , DrawQuestion, -1 - SAL : 1897
	0x00000620 : pushc		275	// , DrawQuestion, -1 - SAL : 1898
	0x00000624 : pushc		32	// , DrawQuestion, -1 - SAL : 1899
	0x00000628 : sub	// , DrawQuestion, -1 - SAL : 1900
	0x0000062A : pushc		120	// , DrawQuestion, -1 - SAL : 1901
	0x0000062E : CopyImage	// , DrawQuestion, -1 - SAL : 1902
	0x00000630 : pushc		0	// , DrawQuestion, -1 - SAL : 1903
	0x00000634 : pushc		257	// , DrawQuestion, -1 - SAL : 1904
	0x00000638 : pushc		120	// , DrawQuestion, -1 - SAL : 1905
	0x0000063C : CopyImage	// , DrawQuestion, -1 - SAL : 1906
	0x0000063E : pushc		2	// , DrawQuestion, -1 - SAL : 1907
	0x00000642 : pushc		0	// , DrawQuestion, -1 - SAL : 1908
	0x00000646 : pushc		3	// , DrawQuestion, -1 - SAL : 1909
	0x0000064A : pushc		1	// , DrawQuestion, -1 - SAL : 1910
	0x0000064E : calls		SetFontType(40)	// , DrawQuestion, -1 - SAL : 1911
	0x00000652 : zsetc		101 ( i of Function DrawQuestion )		0	// , DrawQuestion, -1 - SAL : 1912
	0x00000658 : pushz		101 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1913
	0x0000065C : pushz		96 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1914
	0x00000660 : lt	// , DrawQuestion, -1 - SAL : 1915
	0x00000662 : fjp		0x00000708	// , DrawQuestion, -1 - SAL : 1916
	0x00000668 : ssp	// , DrawQuestion, -1 - SAL : 1917
	0x0000066A : pushz		101 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1918
	0x0000066E : inc	// , DrawQuestion, -1 - SAL : 1919
	0x00000670 : dup	// , DrawQuestion, -1 - SAL : 1920
	0x00000672 : eqjp		4		0x000006A0	// , DrawQuestion, -1 - SAL : 1921
	0x0000067A : dup	// , DrawQuestion, -1 - SAL : 1922
	0x0000067C : eqjp		3		0x000006B0	// , DrawQuestion, -1 - SAL : 1923
	0x00000684 : dup	// , DrawQuestion, -1 - SAL : 1924
	0x00000686 : eqjp		2		0x000006C0	// , DrawQuestion, -1 - SAL : 1925
	0x0000068E : dup	// , DrawQuestion, -1 - SAL : 1926
	0x00000690 : eqjp		1		0x000006D0	// , DrawQuestion, -1 - SAL : 1927
	0x00000698 : rsp	// , DrawQuestion, -1 - SAL : 1928
	0x0000069A : ujp		0x000006DA	// , DrawQuestion, -1 - SAL : 1929
	0x000006A0 : rsp	// , DrawQuestion, -1 - SAL : 1930
	0x000006A2 : zseti		102 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		100 ( Select4 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1931
	0x000006AA : ujp		0x000006DA	// , DrawQuestion, -1 - SAL : 1932
	0x000006B0 : rsp	// , DrawQuestion, -1 - SAL : 1933
	0x000006B2 : zseti		102 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		99 ( Select3 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1934
	0x000006BA : ujp		0x000006DA	// , DrawQuestion, -1 - SAL : 1935
	0x000006C0 : rsp	// , DrawQuestion, -1 - SAL : 1936
	0x000006C2 : zseti		102 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		98 ( Select2 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1937
	0x000006CA : ujp		0x000006DA	// , DrawQuestion, -1 - SAL : 1938
	0x000006D0 : rsp	// , DrawQuestion, -1 - SAL : 1939
	0x000006D2 : zseti		102 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		97 ( Select1 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1940
	0x000006DA : pushc		120	// , DrawQuestion, -1 - SAL : 1941
	0x000006DE : pushc		235	// , DrawQuestion, -1 - SAL : 1942
	0x000006E2 : pushz		101 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1943
	0x000006E6 : pushc		14	// , DrawQuestion, -1 - SAL : 1944
	0x000006EA : mult	// , DrawQuestion, -1 - SAL : 1945
	0x000006EC : add	// , DrawQuestion, -1 - SAL : 1946
	0x000006EE : pushc		18	// , DrawQuestion, -1 - SAL : 1947
	0x000006F2 : sub	// , DrawQuestion, -1 - SAL : 1948
	0x000006F4 : pushz		102 ( Temp of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1949
	0x000006F8 : calls		DrawStr(85)	// , DrawQuestion, -1 - SAL : 1950
	0x000006FC : incz		101 ( i of Function DrawQuestion )		1	// , DrawQuestion, -1 - SAL : 1951
	0x00000702 : ujp		0x00000658	// , DrawQuestion, -1 - SAL : 1952
	0x00000708 : pushc		0	// , DrawQuestion, -1 - SAL : 1953
	0x0000070C : pushc		270	// , DrawQuestion, -1 - SAL : 1954
	0x00000710 : pushc		121	// , DrawQuestion, -1 - SAL : 1955
	0x00000714 : CopyImage	// , DrawQuestion, -1 - SAL : 1956
	0x00000716 : pushz		68 ( NextKey )	// , DrawQuestion, -1 - SAL : 1957
	0x0000071A : nejp		19		0x00000738	// , DrawQuestion, -1 - SAL : 1958
	0x00000722 : pushz		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1959
	0x00000726 : inc	// , DrawQuestion, -1 - SAL : 1960
	0x00000728 : pushz		96 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1961
	0x0000072C : mod	// , DrawQuestion, -1 - SAL : 1962
	0x0000072E : popz		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1963
	0x00000732 : ujp		0x00000778	// , DrawQuestion, -1 - SAL : 1964
	0x00000738 : pushz		68 ( NextKey )	// , DrawQuestion, -1 - SAL : 1965
	0x0000073C : nejp		18		0x0000075C	// , DrawQuestion, -1 - SAL : 1966
	0x00000744 : addzz		56 ( SelectedAnswer )		96 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1967
	0x0000074A : dec	// , DrawQuestion, -1 - SAL : 1970
	0x0000074C : pushz		96 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1971
	0x00000750 : mod	// , DrawQuestion, -1 - SAL : 1972
	0x00000752 : popz		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1973
	0x00000756 : ujp		0x00000778	// , DrawQuestion, -1 - SAL : 1974
	0x0000075C : pushz		68 ( NextKey )	// , DrawQuestion, -1 - SAL : 1975
	0x00000760 : nejp		20		0x00000778	// , DrawQuestion, -1 - SAL : 1976
	0x00000768 : isetz		61 ( Variable )		95 ( Value of Function DrawQuestion )		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1977
	0x00000770 : zsetc		56 ( SelectedAnswer )		0	// , DrawQuestion, -1 - SAL : 1978
	0x00000776 : ret	// , DrawQuestion, -1 - SAL : 1979
	0x00000778 : pushc		0	// , DrawQuestion, -1 - SAL : 1980
	0x0000077C : calls		SetColor(38)	// , DrawQuestion, -1 - SAL : 1981
	0x00000780 : pushc		6	// , DrawQuestion, -1 - SAL : 1982
	0x00000784 : pushc		233	// , DrawQuestion, -1 - SAL : 1983
	0x00000788 : pushz		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1984
	0x0000078C : pushc		14	// , DrawQuestion, -1 - SAL : 1985
	0x00000790 : mult	// , DrawQuestion, -1 - SAL : 1986
	0x00000792 : add	// , DrawQuestion, -1 - SAL : 1987
	0x00000794 : pushc		18	// , DrawQuestion, -1 - SAL : 1988
	0x00000798 : sub	// , DrawQuestion, -1 - SAL : 1989
	0x0000079A : pushc		233	// , DrawQuestion, -1 - SAL : 1990
	0x0000079E : pushc		247	// , DrawQuestion, -1 - SAL : 1991
	0x000007A2 : pushz		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1992
	0x000007A6 : pushc		14	// , DrawQuestion, -1 - SAL : 1993
	0x000007AA : mult	// , DrawQuestion, -1 - SAL : 1994
	0x000007AC : add	// , DrawQuestion, -1 - SAL : 1995
	0x000007AE : pushc		18	// , DrawQuestion, -1 - SAL : 1996
	0x000007B2 : sub	// , DrawQuestion, -1 - SAL : 1997
	0x000007B4 : pushc		3	// , DrawQuestion, -1 - SAL : 1998
	0x000007B8 : calls		FillRectEx(71)	// , DrawQuestion, -1 - SAL : 1999
	0x000007BC : pushc		4	// , DrawQuestion, -1 - SAL : 2000
	0x000007C0 : pushc		232	// , DrawQuestion, -1 - SAL : 2001
	0x000007C4 : pushz		56 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 2002
	0x000007C8 : pushc		14	// , DrawQuestion, -1 - SAL : 2003
	0x000007CC : mult	// , DrawQuestion, -1 - SAL : 2004
	0x000007CE : add	// , DrawQuestion, -1 - SAL : 2005
	0x000007D0 : pushc		18	// , DrawQuestion, -1 - SAL : 2006
	0x000007D4 : sub	// , DrawQuestion, -1 - SAL : 2007
	0x000007D6 : pushc		122	// , DrawQuestion, -1 - SAL : 2008
	0x000007DA : CopyImage	// , DrawQuestion, -1 - SAL : 2009
	0x000007DC : ret	// , DrawQuestion, -1 - SAL : 2010
}


FUNCTION : DrawTitle()
{
	0x000007DE : nop	// , DrawTitle, -1 - SAL : 2302
	0x000007E0 : pushc		0	// , DrawTitle, -1 - SAL : 2303
	0x000007E4 : pushc		0	// , DrawTitle, -1 - SAL : 2304
	0x000007E8 : pushc		124	// , DrawTitle, -1 - SAL : 2305
	0x000007EC : CopyImage	// , DrawTitle, -1 - SAL : 2306
	0x000007EE : pushc		0	// , DrawTitle, -1 - SAL : 2307
	0x000007F2 : pushc		89	// , DrawTitle, -1 - SAL : 2308
	0x000007F6 : pushc		125	// , DrawTitle, -1 - SAL : 2309
	0x000007FA : CopyImage	// , DrawTitle, -1 - SAL : 2310
	0x000007FC : ssp	// , DrawTitle, -1 - SAL : 2311
	0x000007FE : pushz		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2312
	0x00000802 : dup	// , DrawTitle, -1 - SAL : 2313
	0x00000804 : eqjp		0		0x0000083A	// , DrawTitle, -1 - SAL : 2314
	0x0000080C : dup	// , DrawTitle, -1 - SAL : 2315
	0x0000080E : eqjp		1		0x00000852	// , DrawTitle, -1 - SAL : 2316
	0x00000816 : dup	// , DrawTitle, -1 - SAL : 2317
	0x00000818 : eqjp		2		0x0000086A	// , DrawTitle, -1 - SAL : 2318
	0x00000820 : dup	// , DrawTitle, -1 - SAL : 2319
	0x00000822 : eqjp		3		0x00000882	// , DrawTitle, -1 - SAL : 2320
	0x0000082A : dup	// , DrawTitle, -1 - SAL : 2321
	0x0000082C : eqjp		4		0x0000089A	// , DrawTitle, -1 - SAL : 2322
	0x00000834 : ujp		0x000008B2	// , DrawTitle, -1 - SAL : 2323
	0x0000083A : rsp	// , DrawTitle, -1 - SAL : 2324
	0x0000083C : pushc		100	// , DrawTitle, -1 - SAL : 2325
	0x00000840 : pushc		136	// , DrawTitle, -1 - SAL : 2326
	0x00000844 : pushi		29 ( title_menu )		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2327
	0x0000084A : CopyImage	// , DrawTitle, -1 - SAL : 2328
	0x0000084C : ujp		0x000008B4	// , DrawTitle, -1 - SAL : 2329
	0x00000852 : rsp	// , DrawTitle, -1 - SAL : 2330
	0x00000854 : pushc		100	// , DrawTitle, -1 - SAL : 2331
	0x00000858 : pushc		166	// , DrawTitle, -1 - SAL : 2332
	0x0000085C : pushi		29 ( title_menu )		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2333
	0x00000862 : CopyImage	// , DrawTitle, -1 - SAL : 2334
	0x00000864 : ujp		0x000008B4	// , DrawTitle, -1 - SAL : 2335
	0x0000086A : rsp	// , DrawTitle, -1 - SAL : 2336
	0x0000086C : pushc		100	// , DrawTitle, -1 - SAL : 2337
	0x00000870 : pushc		197	// , DrawTitle, -1 - SAL : 2338
	0x00000874 : pushi		29 ( title_menu )		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2339
	0x0000087A : CopyImage	// , DrawTitle, -1 - SAL : 2340
	0x0000087C : ujp		0x000008B4	// , DrawTitle, -1 - SAL : 2341
	0x00000882 : rsp	// , DrawTitle, -1 - SAL : 2342
	0x00000884 : pushc		100	// , DrawTitle, -1 - SAL : 2343
	0x00000888 : pushc		226	// , DrawTitle, -1 - SAL : 2344
	0x0000088C : pushi		29 ( title_menu )		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2345
	0x00000892 : CopyImage	// , DrawTitle, -1 - SAL : 2346
	0x00000894 : ujp		0x000008B4	// , DrawTitle, -1 - SAL : 2347
	0x0000089A : rsp	// , DrawTitle, -1 - SAL : 2348
	0x0000089C : pushc		100	// , DrawTitle, -1 - SAL : 2349
	0x000008A0 : pushc		255	// , DrawTitle, -1 - SAL : 2350
	0x000008A4 : pushi		29 ( title_menu )		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2351
	0x000008AA : CopyImage	// , DrawTitle, -1 - SAL : 2352
	0x000008AC : ujp		0x000008B4	// , DrawTitle, -1 - SAL : 2353
	0x000008B2 : rsp	// , DrawTitle, -1 - SAL : 2354
	0x000008B4 : pushz		63 ( SelectedMenu )	// , DrawTitle, -1 - SAL : 2355
	0x000008B8 : fjp		0x0000092C	// , DrawTitle, -1 - SAL : 2356
	0x000008BE : pushc		0	// , DrawTitle, -1 - SAL : 2357
	0x000008C2 : pushc		85	// , DrawTitle, -1 - SAL : 2358
	0x000008C6 : pushc		131	// , DrawTitle, -1 - SAL : 2359
	0x000008CA : pushc		1	// , DrawTitle, -1 - SAL : 2360
	0x000008CE : pushc		0	// , DrawTitle, -1 - SAL : 2361
	0x000008D2 : pushc		0	// , DrawTitle, -1 - SAL : 2362
	0x000008D6 : pushc		0	// , DrawTitle, -1 - SAL : 2363
	0x000008DA : CopyImageEx	// , DrawTitle, -1 - SAL : 2364
	0x000008DC : ssp	// , DrawTitle, -1 - SAL : 2365
	0x000008DE : pushz		62 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2366
	0x000008E2 : dup	// , DrawTitle, -1 - SAL : 2367
	0x000008E4 : eqjp		1		0x00000908	// , DrawTitle, -1 - SAL : 2368
	0x000008EC : dup	// , DrawTitle, -1 - SAL : 2369
	0x000008EE : eqjp		2		0x00000916	// , DrawTitle, -1 - SAL : 2370
	0x000008F6 : dup	// , DrawTitle, -1 - SAL : 2371
	0x000008F8 : eqjp		3		0x00000924	// , DrawTitle, -1 - SAL : 2372
	0x00000900 : rsp	// , DrawTitle, -1 - SAL : 2373
	0x00000902 : ujp		0x0000092C	// , DrawTitle, -1 - SAL : 2374
	0x00000908 : rsp	// , DrawTitle, -1 - SAL : 2375
	0x0000090A : call		0x00001DBC	// , DrawTitle, -1 - SAL : 2376
	0x00000910 : ujp		0x0000092C	// , DrawTitle, -1 - SAL : 2377
	0x00000916 : rsp	// , DrawTitle, -1 - SAL : 2378
	0x00000918 : call		0x00001EBE	// , DrawTitle, -1 - SAL : 2379
	0x0000091E : ujp		0x0000092C	// , DrawTitle, -1 - SAL : 2380
	0x00000924 : rsp	// , DrawTitle, -1 - SAL : 2381
	0x00000926 : call		0x00001EAA	// , DrawTitle, -1 - SAL : 2382
	0x0000092C : ret	// , DrawTitle, -1 - SAL : 2383
}


FUNCTION : EVENT_KEYPRESS()
{
	0x0000092E : nop	// , EVENT_KEYPRESS, -1 - SAL : 2956
	0x00000930 : ssp	// , EVENT_KEYPRESS, -1 - SAL : 2957
	0x00000932 : pushz		0 ( swData )	// , EVENT_KEYPRESS, -1 - SAL : 2958
	0x00000936 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2959
	0x00000938 : eqjp		20		0x0000097A	// , EVENT_KEYPRESS, -1 - SAL : 2960
	0x00000940 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2961
	0x00000942 : eqjp		13		0x00000982	// , EVENT_KEYPRESS, -1 - SAL : 2962
	0x0000094A : dup	// , EVENT_KEYPRESS, -1 - SAL : 2963
	0x0000094C : eqjp		16		0x0000098A	// , EVENT_KEYPRESS, -1 - SAL : 2964
	0x00000954 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2965
	0x00000956 : eqjp		17		0x0000098A	// , EVENT_KEYPRESS, -1 - SAL : 2966
	0x0000095E : dup	// , EVENT_KEYPRESS, -1 - SAL : 2967
	0x00000960 : eqjp		18		0x0000098A	// , EVENT_KEYPRESS, -1 - SAL : 2968
	0x00000968 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2969
	0x0000096A : eqjp		19		0x0000098A	// , EVENT_KEYPRESS, -1 - SAL : 2970
	0x00000972 : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2971
	0x00000974 : ujp		0x0000098C	// , EVENT_KEYPRESS, -1 - SAL : 2972
	0x0000097A : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2973
	0x0000097C : ujp		0x0000098C	// , EVENT_KEYPRESS, -1 - SAL : 2974
	0x00000982 : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2975
	0x00000984 : ujp		0x0000098C	// , EVENT_KEYPRESS, -1 - SAL : 2976
	0x0000098A : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2977
	0x0000098C : ssp	// , EVENT_KEYPRESS, -1 - SAL : 2978
	0x0000098E : pushz		69 ( GameMode )	// , EVENT_KEYPRESS, -1 - SAL : 2979
	0x00000992 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2980
	0x00000994 : eqjp		0		0x000009C0	// , EVENT_KEYPRESS, -1 - SAL : 2981
	0x0000099C : dup	// , EVENT_KEYPRESS, -1 - SAL : 2982
	0x0000099E : eqjp		1		0x000009C0	// , EVENT_KEYPRESS, -1 - SAL : 2983
	0x000009A6 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2984
	0x000009A8 : eqjp		2		0x000009C0	// , EVENT_KEYPRESS, -1 - SAL : 2985
	0x000009B0 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2986
	0x000009B2 : eqjp		3		0x000009CE	// , EVENT_KEYPRESS, -1 - SAL : 2987
	0x000009BA : ujp		0x000009D6	// , EVENT_KEYPRESS, -1 - SAL : 2988
	0x000009C0 : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2989
	0x000009C2 : zsetz		68 ( NextKey )		0 ( swData )	// , EVENT_KEYPRESS, -1 - SAL : 2990
	0x000009C8 : ujp		0x000009D8	// , EVENT_KEYPRESS, -1 - SAL : 2991
	0x000009CE : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2992
	0x000009D0 : ujp		0x000009D8	// , EVENT_KEYPRESS, -1 - SAL : 2993
	0x000009D6 : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2994
	0x000009D8 : end	// , EVENT_KEYPRESS, -1 - SAL : 2995
}


FUNCTION : EVENT_TIMEOUT()
{
	0x000009DA : nop	// , EVENT_TIMEOUT, -1 - SAL : 2928
	0x000009DC : pushc		3	// , EVENT_TIMEOUT, -1 - SAL : 2929
	0x000009E0 : calls		Clear(54)	// , EVENT_TIMEOUT, -1 - SAL : 2930
	0x000009E4 : ssp	// , EVENT_TIMEOUT, -1 - SAL : 2931
	0x000009E6 : pushz		69 ( GameMode )	// , EVENT_TIMEOUT, -1 - SAL : 2932
	0x000009EA : dup	// , EVENT_TIMEOUT, -1 - SAL : 2933
	0x000009EC : eqjp		0		0x00000A18	// , EVENT_TIMEOUT, -1 - SAL : 2934
	0x000009F4 : dup	// , EVENT_TIMEOUT, -1 - SAL : 2935
	0x000009F6 : eqjp		1		0x00000A26	// , EVENT_TIMEOUT, -1 - SAL : 2936
	0x000009FE : dup	// , EVENT_TIMEOUT, -1 - SAL : 2937
	0x00000A00 : eqjp		2		0x00000A34	// , EVENT_TIMEOUT, -1 - SAL : 2938
	0x00000A08 : dup	// , EVENT_TIMEOUT, -1 - SAL : 2939
	0x00000A0A : eqjp		3		0x00000A42	// , EVENT_TIMEOUT, -1 - SAL : 2940
	0x00000A12 : ujp		0x00000A4A	// , EVENT_TIMEOUT, -1 - SAL : 2941
	0x00000A18 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2942
	0x00000A1A : call		0x00001430	// , EVENT_TIMEOUT, -1 - SAL : 2943
	0x00000A20 : ujp		0x00000A4C	// , EVENT_TIMEOUT, -1 - SAL : 2944
	0x00000A26 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2945
	0x00000A28 : call		0x00001162	// , EVENT_TIMEOUT, -1 - SAL : 2946
	0x00000A2E : ujp		0x00000A4C	// , EVENT_TIMEOUT, -1 - SAL : 2947
	0x00000A34 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2948
	0x00000A36 : call		0x0000114C	// , EVENT_TIMEOUT, -1 - SAL : 2949
	0x00000A3C : ujp		0x00000A4C	// , EVENT_TIMEOUT, -1 - SAL : 2950
	0x00000A42 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2951
	0x00000A44 : ujp		0x00000A4C	// , EVENT_TIMEOUT, -1 - SAL : 2952
	0x00000A4A : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2953
	0x00000A4C : calls		Flush(95)	// , EVENT_TIMEOUT, -1 - SAL : 2954
	0x00000A50 : end	// , EVENT_TIMEOUT, -1 - SAL : 2955
}


FUNCTION : ElseEqual()
{
	0x00000A52 : nop	// , ElseEqual, -1 - SAL : 2028
	0x00000A54 : popz		110 ( IfCount of Function ElseEqual )	// , ElseEqual, -1 - SAL : 2029
	0x00000A58 : popz		109 ( Value2 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 2030
	0x00000A5C : stnz		108 ( Value1 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 2031
	0x00000A60 : pushi		61 ( Variable )		109 ( Value2 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 2032
	0x00000A66 : ne	// , ElseEqual, -1 - SAL : 2033
	0x00000A68 : fjp		0x00000A74	// , ElseEqual, -1 - SAL : 2034
	0x00000A6E : pushc		0	// , ElseEqual, -1 - SAL : 2035
	0x00000A72 : ret	// , ElseEqual, -1 - SAL : 2036
	0x00000A74 : pushz		110 ( IfCount of Function ElseEqual )	// , ElseEqual, -1 - SAL : 2037
	0x00000A78 : ret	// , ElseEqual, -1 - SAL : 2038
}


FUNCTION : GetTotalDay()
{
	0x00000A7A : nop	// , GetTotalDay, -1 - SAL : 842
	0x00000A7C : popz		72 ( Day of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 843
	0x00000A80 : popz		71 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 844
	0x00000A84 : popz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 845
	0x00000A88 : zsetc		73 ( Total of Function GetTotalDay )		0	// , GetTotalDay, -1 - SAL : 846
	0x00000A8E : zsetc		74 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 847
	0x00000A94 : pushz		74 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 848
	0x00000A98 : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 849
	0x00000A9C : lt	// , GetTotalDay, -1 - SAL : 850
	0x00000A9E : fjp		0x00000B04	// , GetTotalDay, -1 - SAL : 851
	0x00000AA4 : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 852
	0x00000AA8 : pushc		4	// , GetTotalDay, -1 - SAL : 853
	0x00000AAC : mod	// , GetTotalDay, -1 - SAL : 854
	0x00000AAE : pushc		0	// , GetTotalDay, -1 - SAL : 855
	0x00000AB2 : eq	// , GetTotalDay, -1 - SAL : 856
	0x00000AB4 : dup	// , GetTotalDay, -1 - SAL : 857
	0x00000AB6 : fjp		0x00000AD0	// , GetTotalDay, -1 - SAL : 858
	0x00000ABC : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 859
	0x00000AC0 : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 860
	0x00000AC4 : pushc		100	// , GetTotalDay, -1 - SAL : 861
	0x00000AC8 : mod	// , GetTotalDay, -1 - SAL : 862
	0x00000ACA : pushc		0	// , GetTotalDay, -1 - SAL : 863
	0x00000ACE : ne	// , GetTotalDay, -1 - SAL : 864
	0x00000AD0 : dup	// , GetTotalDay, -1 - SAL : 865
	0x00000AD2 : tjp		0x00000AEC	// , GetTotalDay, -1 - SAL : 866
	0x00000AD8 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 867
	0x00000ADC : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 868
	0x00000AE0 : pushc		400	// , GetTotalDay, -1 - SAL : 869
	0x00000AE4 : mod	// , GetTotalDay, -1 - SAL : 870
	0x00000AE6 : pushc		0	// , GetTotalDay, -1 - SAL : 871
	0x00000AEA : eq	// , GetTotalDay, -1 - SAL : 872
	0x00000AEC : fjp		0x00000AF8	// , GetTotalDay, -1 - SAL : 873
	0x00000AF2 : incz		73 ( Total of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 874
	0x00000AF8 : incz		74 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 875
	0x00000AFE : ujp		0x00000A94	// , GetTotalDay, -1 - SAL : 876
	0x00000B04 : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 877
	0x00000B08 : pushc		4	// , GetTotalDay, -1 - SAL : 878
	0x00000B0C : mod	// , GetTotalDay, -1 - SAL : 879
	0x00000B0E : pushc		0	// , GetTotalDay, -1 - SAL : 880
	0x00000B12 : eq	// , GetTotalDay, -1 - SAL : 881
	0x00000B14 : dup	// , GetTotalDay, -1 - SAL : 882
	0x00000B16 : fjp		0x00000B30	// , GetTotalDay, -1 - SAL : 883
	0x00000B1C : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 884
	0x00000B20 : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 885
	0x00000B24 : pushc		100	// , GetTotalDay, -1 - SAL : 886
	0x00000B28 : mod	// , GetTotalDay, -1 - SAL : 887
	0x00000B2A : pushc		0	// , GetTotalDay, -1 - SAL : 888
	0x00000B2E : ne	// , GetTotalDay, -1 - SAL : 889
	0x00000B30 : dup	// , GetTotalDay, -1 - SAL : 890
	0x00000B32 : tjp		0x00000B4C	// , GetTotalDay, -1 - SAL : 891
	0x00000B38 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 892
	0x00000B3C : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 893
	0x00000B40 : pushc		400	// , GetTotalDay, -1 - SAL : 894
	0x00000B44 : mod	// , GetTotalDay, -1 - SAL : 895
	0x00000B46 : pushc		0	// , GetTotalDay, -1 - SAL : 896
	0x00000B4A : eq	// , GetTotalDay, -1 - SAL : 897
	0x00000B4C : dup	// , GetTotalDay, -1 - SAL : 898
	0x00000B4E : fjp		0x00000B62	// , GetTotalDay, -1 - SAL : 899
	0x00000B54 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 900
	0x00000B58 : pushz		71 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 901
	0x00000B5C : pushc		2	// , GetTotalDay, -1 - SAL : 902
	0x00000B60 : gt	// , GetTotalDay, -1 - SAL : 903
	0x00000B62 : fjp		0x00000B6E	// , GetTotalDay, -1 - SAL : 904
	0x00000B68 : incz		73 ( Total of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 905
	0x00000B6E : zsetc		74 ( i of Function GetTotalDay )		0	// , GetTotalDay, -1 - SAL : 906
	0x00000B74 : pushz		74 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 907
	0x00000B78 : pushz		71 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 908
	0x00000B7C : dec	// , GetTotalDay, -1 - SAL : 909
	0x00000B7E : lt	// , GetTotalDay, -1 - SAL : 910
	0x00000B80 : fjp		0x00000BA2	// , GetTotalDay, -1 - SAL : 911
	0x00000B86 : pushz		73 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 912
	0x00000B8A : pushi		42 ( MONTH )		74 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 913
	0x00000B90 : add	// , GetTotalDay, -1 - SAL : 914
	0x00000B92 : popz		73 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 915
	0x00000B96 : incz		74 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 916
	0x00000B9C : ujp		0x00000B74	// , GetTotalDay, -1 - SAL : 917
	0x00000BA2 : pushz		73 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 918
	0x00000BA6 : pushz		70 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 919
	0x00000BAA : pushc		365	// , GetTotalDay, -1 - SAL : 920
	0x00000BAE : mult	// , GetTotalDay, -1 - SAL : 921
	0x00000BB0 : add	// , GetTotalDay, -1 - SAL : 922
	0x00000BB2 : stnz		73 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 923
	0x00000BB6 : addz		72 ( Day of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 924
	0x00000BBA : stnz		73 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 926
	0x00000BBE : ret	// , GetTotalDay, -1 - SAL : 927
}


FUNCTION : GetWeek()
{
	0x00000BC0 : nop	// , GetWeek, -1 - SAL : 928
	0x00000BC2 : popz		77 ( Day of Function GetWeek )	// , GetWeek, -1 - SAL : 929
	0x00000BC6 : popz		76 ( Month of Function GetWeek )	// , GetWeek, -1 - SAL : 930
	0x00000BCA : stnz		75 ( Year of Function GetWeek )	// , GetWeek, -1 - SAL : 931
	0x00000BCE : pushz		76 ( Month of Function GetWeek )	// , GetWeek, -1 - SAL : 932
	0x00000BD2 : pushz		77 ( Day of Function GetWeek )	// , GetWeek, -1 - SAL : 933
	0x00000BD6 : call		0x00000A7A	// , GetWeek, -1 - SAL : 934
	0x00000BDC : pushc		7	// , GetWeek, -1 - SAL : 935
	0x00000BE0 : mod	// , GetWeek, -1 - SAL : 936
	0x00000BE2 : ret	// , GetWeek, -1 - SAL : 937
}


FUNCTION : IfEqual()
{
	0x00000BE4 : nop	// , IfEqual, -1 - SAL : 2017
	0x00000BE6 : popz		107 ( ElseCount of Function IfEqual )	// , IfEqual, -1 - SAL : 2018
	0x00000BEA : popz		106 ( Value2 of Function IfEqual )	// , IfEqual, -1 - SAL : 2019
	0x00000BEE : stnz		105 ( Value1 of Function IfEqual )	// , IfEqual, -1 - SAL : 2020
	0x00000BF2 : pushi		61 ( Variable )		106 ( Value2 of Function IfEqual )	// , IfEqual, -1 - SAL : 2021
	0x00000BF8 : eq	// , IfEqual, -1 - SAL : 2022
	0x00000BFA : fjp		0x00000C06	// , IfEqual, -1 - SAL : 2023
	0x00000C00 : pushc		0	// , IfEqual, -1 - SAL : 2024
	0x00000C04 : ret	// , IfEqual, -1 - SAL : 2025
	0x00000C06 : pushz		107 ( ElseCount of Function IfEqual )	// , IfEqual, -1 - SAL : 2026
	0x00000C0A : ret	// , IfEqual, -1 - SAL : 2027
}


FUNCTION : InitEvent()
{
	0x00000C0C : nop	// , InitEvent, -1 - SAL : 1350
	0x00000C0E : nsetc		48 ( They )		0		0	// , InitEvent, -1 - SAL : 1351
	0x00000C16 : nsetc		48 ( They )		2		1	// , InitEvent, -1 - SAL : 1352
	0x00000C1E : nsetc		48 ( They )		4		2	// , InitEvent, -1 - SAL : 1353
	0x00000C26 : ldric		48 ( They )		0	// , InitEvent, -1 - SAL : 1354
	0x00000C2C : inc	// , InitEvent, -1 - SAL : 1355
	0x00000C2E : pushc		50	// , InitEvent, -1 - SAL : 1356
	0x00000C32 : sta	// , InitEvent, -1 - SAL : 1357
	0x00000C34 : ldric		48 ( They )		2	// , InitEvent, -1 - SAL : 1358
	0x00000C3A : inc	// , InitEvent, -1 - SAL : 1359
	0x00000C3C : pushc		0	// , InitEvent, -1 - SAL : 1360
	0x00000C40 : sta	// , InitEvent, -1 - SAL : 1361
	0x00000C42 : ldric		48 ( They )		4	// , InitEvent, -1 - SAL : 1362
	0x00000C48 : inc	// , InitEvent, -1 - SAL : 1363
	0x00000C4A : pushc		-50	// , InitEvent, -1 - SAL : 1364
	0x00000C4E : sta	// , InitEvent, -1 - SAL : 1365
	0x00000C50 : ret	// , InitEvent, -1 - SAL : 1366
}


FUNCTION : InitNature()
{
	0x00000C52 : nop	// , InitNature, -1 - SAL : 1321
	0x00000C54 : ldrz		47 ( Now )	// , InitNature, -1 - SAL : 1322
	0x00000C58 : pushc		2008	// , InitNature, -1 - SAL : 1323
	0x00000C5C : sta	// , InitNature, -1 - SAL : 1324
	0x00000C5E : ldrz		47 ( Now )	// , InitNature, -1 - SAL : 1325
	0x00000C62 : inc	// , InitNature, -1 - SAL : 1326
	0x00000C64 : pushc		12	// , InitNature, -1 - SAL : 1327
	0x00000C68 : sta	// , InitNature, -1 - SAL : 1328
	0x00000C6A : addldrzc		47 ( Now )		2	// , InitNature, -1 - SAL : 1329
	0x00000C70 : pushc		25	// , InitNature, -1 - SAL : 1332
	0x00000C74 : sta	// , InitNature, -1 - SAL : 1333
	0x00000C76 : addldrzc		47 ( Now )		4	// , InitNature, -1 - SAL : 1334
	0x00000C7C : pushc		14	// , InitNature, -1 - SAL : 1337
	0x00000C80 : sta	// , InitNature, -1 - SAL : 1338
	0x00000C82 : addldrzc		47 ( Now )		5	// , InitNature, -1 - SAL : 1339
	0x00000C88 : pushc		34	// , InitNature, -1 - SAL : 1342
	0x00000C8C : sta	// , InitNature, -1 - SAL : 1343
	0x00000C8E : addldrzc		47 ( Now )		6	// , InitNature, -1 - SAL : 1344
	0x00000C94 : pushc		0	// , InitNature, -1 - SAL : 1347
	0x00000C98 : sta	// , InitNature, -1 - SAL : 1348
	0x00000C9A : ret	// , InitNature, -1 - SAL : 1349
}


FUNCTION : PassTime()
{
	0x00000C9C : nop	// , PassTime, -1 - SAL : 2111
	0x00000C9E : popz		123 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 2112
	0x00000CA2 : popz		122 ( Element of Function PassTime )	// , PassTime, -1 - SAL : 2113
	0x00000CA6 : ssp	// , PassTime, -1 - SAL : 2114
	0x00000CA8 : pushz		122 ( Element of Function PassTime )	// , PassTime, -1 - SAL : 2115
	0x00000CAC : dup	// , PassTime, -1 - SAL : 2116
	0x00000CAE : eqjp		0		0x00000CE6	// , PassTime, -1 - SAL : 2117
	0x00000CB6 : dup	// , PassTime, -1 - SAL : 2118
	0x00000CB8 : eqjp		1		0x00000CFE	// , PassTime, -1 - SAL : 2119
	0x00000CC0 : dup	// , PassTime, -1 - SAL : 2120
	0x00000CC2 : eqjp		2		0x00000D52	// , PassTime, -1 - SAL : 2121
	0x00000CCA : dup	// , PassTime, -1 - SAL : 2122
	0x00000CCC : eqjp		3		0x00000E06	// , PassTime, -1 - SAL : 2123
	0x00000CD4 : dup	// , PassTime, -1 - SAL : 2124
	0x00000CD6 : eqjp		4		0x00000E38	// , PassTime, -1 - SAL : 2125
	0x00000CDE : rsp	// , PassTime, -1 - SAL : 2126
	0x00000CE0 : ujp		0x00000E84	// , PassTime, -1 - SAL : 2127
	0x00000CE6 : rsp	// , PassTime, -1 - SAL : 2128
	0x00000CE8 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2129
	0x00000CEC : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2130
	0x00000CF0 : ixa	// , PassTime, -1 - SAL : 2131
	0x00000CF2 : addz		123 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 2132
	0x00000CF6 : sta	// , PassTime, -1 - SAL : 2134
	0x00000CF8 : ujp		0x00000E84	// , PassTime, -1 - SAL : 2135
	0x00000CFE : rsp	// , PassTime, -1 - SAL : 2136
	0x00000D00 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2137
	0x00000D04 : inc	// , PassTime, -1 - SAL : 2138
	0x00000D06 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2139
	0x00000D0A : inc	// , PassTime, -1 - SAL : 2140
	0x00000D0C : ixa	// , PassTime, -1 - SAL : 2141
	0x00000D0E : addz		123 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 2142
	0x00000D12 : sta	// , PassTime, -1 - SAL : 2144
	0x00000D14 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2145
	0x00000D18 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2146
	0x00000D1C : ixa	// , PassTime, -1 - SAL : 2147
	0x00000D1E : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2148
	0x00000D22 : inc	// , PassTime, -1 - SAL : 2149
	0x00000D24 : ixa	// , PassTime, -1 - SAL : 2150
	0x00000D26 : dec	// , PassTime, -1 - SAL : 2151
	0x00000D28 : pushc		12	// , PassTime, -1 - SAL : 2152
	0x00000D2C : div	// , PassTime, -1 - SAL : 2153
	0x00000D2E : add	// , PassTime, -1 - SAL : 2154
	0x00000D30 : sta	// , PassTime, -1 - SAL : 2155
	0x00000D32 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2156
	0x00000D36 : inc	// , PassTime, -1 - SAL : 2157
	0x00000D38 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2158
	0x00000D3C : inc	// , PassTime, -1 - SAL : 2159
	0x00000D3E : ixa	// , PassTime, -1 - SAL : 2160
	0x00000D40 : dec	// , PassTime, -1 - SAL : 2161
	0x00000D42 : pushc		12	// , PassTime, -1 - SAL : 2162
	0x00000D46 : mod	// , PassTime, -1 - SAL : 2163
	0x00000D48 : inc	// , PassTime, -1 - SAL : 2164
	0x00000D4A : sta	// , PassTime, -1 - SAL : 2165
	0x00000D4C : ujp		0x00000E84	// , PassTime, -1 - SAL : 2166
	0x00000D52 : rsp	// , PassTime, -1 - SAL : 2167
	0x00000D54 : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 2168
	0x00000D5A : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 2171
	0x00000D60 : ixa	// , PassTime, -1 - SAL : 2174
	0x00000D62 : addz		123 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 2175
	0x00000D66 : sta	// , PassTime, -1 - SAL : 2177
	0x00000D68 : pushz		124 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 2178
	0x00000D6C : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 2179
	0x00000D72 : ixa	// , PassTime, -1 - SAL : 2182
	0x00000D74 : dec	// , PassTime, -1 - SAL : 2183
	0x00000D76 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2184
	0x00000D7A : inc	// , PassTime, -1 - SAL : 2185
	0x00000D7C : ixa	// , PassTime, -1 - SAL : 2186
	0x00000D7E : ldrz		42 ( MONTH )	// , PassTime, -1 - SAL : 2187
	0x00000D82 : add	// , PassTime, -1 - SAL : 2188
	0x00000D84 : ixa	// , PassTime, -1 - SAL : 2189
	0x00000D86 : div	// , PassTime, -1 - SAL : 2190
	0x00000D88 : add	// , PassTime, -1 - SAL : 2191
	0x00000D8A : popz		124 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 2192
	0x00000D8E : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 2193
	0x00000D94 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2196
	0x00000D98 : inc	// , PassTime, -1 - SAL : 2197
	0x00000D9A : ixa	// , PassTime, -1 - SAL : 2198
	0x00000D9C : dec	// , PassTime, -1 - SAL : 2199
	0x00000D9E : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2200
	0x00000DA2 : inc	// , PassTime, -1 - SAL : 2201
	0x00000DA4 : ixa	// , PassTime, -1 - SAL : 2202
	0x00000DA6 : ldrz		42 ( MONTH )	// , PassTime, -1 - SAL : 2203
	0x00000DAA : add	// , PassTime, -1 - SAL : 2204
	0x00000DAC : ixa	// , PassTime, -1 - SAL : 2205
	0x00000DAE : mod	// , PassTime, -1 - SAL : 2206
	0x00000DB0 : inc	// , PassTime, -1 - SAL : 2207
	0x00000DB2 : sta	// , PassTime, -1 - SAL : 2208
	0x00000DB4 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2209
	0x00000DB8 : inc	// , PassTime, -1 - SAL : 2210
	0x00000DBA : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2211
	0x00000DBE : inc	// , PassTime, -1 - SAL : 2212
	0x00000DC0 : ixa	// , PassTime, -1 - SAL : 2213
	0x00000DC2 : addz		124 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 2214
	0x00000DC6 : sta	// , PassTime, -1 - SAL : 2216
	0x00000DC8 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2217
	0x00000DCC : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2218
	0x00000DD0 : ixa	// , PassTime, -1 - SAL : 2219
	0x00000DD2 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2220
	0x00000DD6 : inc	// , PassTime, -1 - SAL : 2221
	0x00000DD8 : ixa	// , PassTime, -1 - SAL : 2222
	0x00000DDA : dec	// , PassTime, -1 - SAL : 2223
	0x00000DDC : pushc		12	// , PassTime, -1 - SAL : 2224
	0x00000DE0 : div	// , PassTime, -1 - SAL : 2225
	0x00000DE2 : add	// , PassTime, -1 - SAL : 2226
	0x00000DE4 : sta	// , PassTime, -1 - SAL : 2227
	0x00000DE6 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2228
	0x00000DEA : inc	// , PassTime, -1 - SAL : 2229
	0x00000DEC : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2230
	0x00000DF0 : inc	// , PassTime, -1 - SAL : 2231
	0x00000DF2 : ixa	// , PassTime, -1 - SAL : 2232
	0x00000DF4 : dec	// , PassTime, -1 - SAL : 2233
	0x00000DF6 : pushc		12	// , PassTime, -1 - SAL : 2234
	0x00000DFA : mod	// , PassTime, -1 - SAL : 2235
	0x00000DFC : inc	// , PassTime, -1 - SAL : 2236
	0x00000DFE : sta	// , PassTime, -1 - SAL : 2237
	0x00000E00 : ujp		0x00000E84	// , PassTime, -1 - SAL : 2238
	0x00000E06 : rsp	// , PassTime, -1 - SAL : 2239
	0x00000E08 : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 2240
	0x00000E0E : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 2243
	0x00000E14 : ixa	// , PassTime, -1 - SAL : 2246
	0x00000E16 : addz		123 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 2247
	0x00000E1A : sta	// , PassTime, -1 - SAL : 2249
	0x00000E1C : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 2250
	0x00000E22 : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 2253
	0x00000E28 : ixa	// , PassTime, -1 - SAL : 2256
	0x00000E2A : pushc		24	// , PassTime, -1 - SAL : 2257
	0x00000E2E : mod	// , PassTime, -1 - SAL : 2258
	0x00000E30 : sta	// , PassTime, -1 - SAL : 2259
	0x00000E32 : ujp		0x00000E84	// , PassTime, -1 - SAL : 2260
	0x00000E38 : rsp	// , PassTime, -1 - SAL : 2261
	0x00000E3A : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 2262
	0x00000E40 : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 2265
	0x00000E46 : ixa	// , PassTime, -1 - SAL : 2268
	0x00000E48 : addz		123 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 2269
	0x00000E4C : sta	// , PassTime, -1 - SAL : 2271
	0x00000E4E : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 2272
	0x00000E54 : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 2275
	0x00000E5A : ixa	// , PassTime, -1 - SAL : 2278
	0x00000E5C : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 2279
	0x00000E60 : inc	// , PassTime, -1 - SAL : 2280
	0x00000E62 : ixa	// , PassTime, -1 - SAL : 2281
	0x00000E64 : pushc		60	// , PassTime, -1 - SAL : 2282
	0x00000E68 : div	// , PassTime, -1 - SAL : 2283
	0x00000E6A : add	// , PassTime, -1 - SAL : 2284
	0x00000E6C : sta	// , PassTime, -1 - SAL : 2285
	0x00000E6E : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 2286
	0x00000E74 : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 2289
	0x00000E7A : ixa	// , PassTime, -1 - SAL : 2292
	0x00000E7C : pushc		60	// , PassTime, -1 - SAL : 2293
	0x00000E80 : mod	// , PassTime, -1 - SAL : 2294
	0x00000E82 : sta	// , PassTime, -1 - SAL : 2295
	0x00000E84 : ret	// , PassTime, -1 - SAL : 2296
}


FUNCTION : RunEventLine()
{
	0x00000E86 : nop	// , RunEventLine, -1 - SAL : 1546
	0x00000E88 : ssp	// , RunEventLine, -1 - SAL : 1547
	0x00000E8A : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1548
	0x00000E8E : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1549
	0x00000E94 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1550
	0x00000E98 : add	// , RunEventLine, -1 - SAL : 1551
	0x00000E9A : ixa	// , RunEventLine, -1 - SAL : 1552
	0x00000E9C : dup	// , RunEventLine, -1 - SAL : 1553
	0x00000E9E : eqjp		-1		0x00000EFC	// , RunEventLine, -1 - SAL : 1554
	0x00000EA6 : dup	// , RunEventLine, -1 - SAL : 1555
	0x00000EA8 : eqjp		0		0x00000F0A	// , RunEventLine, -1 - SAL : 1556
	0x00000EB0 : dup	// , RunEventLine, -1 - SAL : 1557
	0x00000EB2 : eqjp		1		0x00000F5A	// , RunEventLine, -1 - SAL : 1558
	0x00000EBA : dup	// , RunEventLine, -1 - SAL : 1559
	0x00000EBC : eqjp		2		0x00000FEC	// , RunEventLine, -1 - SAL : 1560
	0x00000EC4 : dup	// , RunEventLine, -1 - SAL : 1561
	0x00000EC6 : eqjp		3		0x0000101E	// , RunEventLine, -1 - SAL : 1562
	0x00000ECE : dup	// , RunEventLine, -1 - SAL : 1563
	0x00000ED0 : eqjp		4		0x00001062	// , RunEventLine, -1 - SAL : 1564
	0x00000ED8 : dup	// , RunEventLine, -1 - SAL : 1565
	0x00000EDA : eqjp		5		0x000010A6	// , RunEventLine, -1 - SAL : 1566
	0x00000EE2 : dup	// , RunEventLine, -1 - SAL : 1567
	0x00000EE4 : eqjp		6		0x00001108	// , RunEventLine, -1 - SAL : 1568
	0x00000EEC : dup	// , RunEventLine, -1 - SAL : 1569
	0x00000EEE : eqjp		7		0x0000113A	// , RunEventLine, -1 - SAL : 1570
	0x00000EF6 : ujp		0x00001142	// , RunEventLine, -1 - SAL : 1571
	0x00000EFC : rsp	// , RunEventLine, -1 - SAL : 1572
	0x00000EFE : zsetc		57 ( EventPointer )		0	// , RunEventLine, -1 - SAL : 1573
	0x00000F04 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1574
	0x00000F0A : rsp	// , RunEventLine, -1 - SAL : 1575
	0x00000F0C : pushz		68 ( NextKey )	// , RunEventLine, -1 - SAL : 1576
	0x00000F10 : nejp		20		0x00000F36	// , RunEventLine, -1 - SAL : 1577
	0x00000F18 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1578
	0x00000F1C : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1579
	0x00000F22 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1580
	0x00000F26 : add	// , RunEventLine, -1 - SAL : 1581
	0x00000F28 : ixa	// , RunEventLine, -1 - SAL : 1582
	0x00000F2A : call		0x0000039E	// , RunEventLine, -1 - SAL : 1583
	0x00000F30 : ujp		0x00000F4E	// , RunEventLine, -1 - SAL : 1584
	0x00000F36 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1585
	0x00000F3A : incz		57 ( EventPointer )		-1	// , RunEventLine, -1 - SAL : 1586
	0x00000F40 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1587
	0x00000F44 : add	// , RunEventLine, -1 - SAL : 1588
	0x00000F46 : ixa	// , RunEventLine, -1 - SAL : 1589
	0x00000F48 : call		0x0000039E	// , RunEventLine, -1 - SAL : 1590
	0x00000F4E : zsetc		68 ( NextKey )		-1	// , RunEventLine, -1 - SAL : 1591
	0x00000F54 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1592
	0x00000F5A : rsp	// , RunEventLine, -1 - SAL : 1593
	0x00000F5C : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1594
	0x00000F60 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1595
	0x00000F66 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1596
	0x00000F6A : add	// , RunEventLine, -1 - SAL : 1597
	0x00000F6C : ixa	// , RunEventLine, -1 - SAL : 1598
	0x00000F6E : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1599
	0x00000F72 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1600
	0x00000F78 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1601
	0x00000F7C : add	// , RunEventLine, -1 - SAL : 1602
	0x00000F7E : ixa	// , RunEventLine, -1 - SAL : 1603
	0x00000F80 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1604
	0x00000F84 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1605
	0x00000F8A : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1606
	0x00000F8E : add	// , RunEventLine, -1 - SAL : 1607
	0x00000F90 : ixa	// , RunEventLine, -1 - SAL : 1608
	0x00000F92 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1609
	0x00000F96 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1610
	0x00000F9C : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1611
	0x00000FA0 : add	// , RunEventLine, -1 - SAL : 1612
	0x00000FA2 : ixa	// , RunEventLine, -1 - SAL : 1613
	0x00000FA4 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1614
	0x00000FA8 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1615
	0x00000FAE : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1616
	0x00000FB2 : add	// , RunEventLine, -1 - SAL : 1617
	0x00000FB4 : ixa	// , RunEventLine, -1 - SAL : 1618
	0x00000FB6 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1619
	0x00000FBA : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1620
	0x00000FC0 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1621
	0x00000FC4 : add	// , RunEventLine, -1 - SAL : 1622
	0x00000FC6 : ixa	// , RunEventLine, -1 - SAL : 1623
	0x00000FC8 : call		0x000005B4	// , RunEventLine, -1 - SAL : 1624
	0x00000FCE : pushz		68 ( NextKey )	// , RunEventLine, -1 - SAL : 1625
	0x00000FD2 : eqjp		20		0x00000FE0	// , RunEventLine, -1 - SAL : 1626
	0x00000FDA : incz		57 ( EventPointer )		-7	// , RunEventLine, -1 - SAL : 1627
	0x00000FE0 : zsetc		68 ( NextKey )		-1	// , RunEventLine, -1 - SAL : 1628
	0x00000FE6 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1629
	0x00000FEC : rsp	// , RunEventLine, -1 - SAL : 1630
	0x00000FEE : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1631
	0x00000FF2 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1632
	0x00000FF8 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1633
	0x00000FFC : add	// , RunEventLine, -1 - SAL : 1634
	0x00000FFE : ixa	// , RunEventLine, -1 - SAL : 1635
	0x00001000 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1636
	0x00001004 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1637
	0x0000100A : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1638
	0x0000100E : add	// , RunEventLine, -1 - SAL : 1639
	0x00001010 : ixa	// , RunEventLine, -1 - SAL : 1640
	0x00001012 : call		0x00001BAE	// , RunEventLine, -1 - SAL : 1641
	0x00001018 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1642
	0x0000101E : rsp	// , RunEventLine, -1 - SAL : 1643
	0x00001020 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1644
	0x00001024 : pushc		3	// , RunEventLine, -1 - SAL : 1645
	0x00001028 : pushi		54 ( EventLine )		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1646
	0x0000102E : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1647
	0x00001032 : inc	// , RunEventLine, -1 - SAL : 1648
	0x00001034 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1649
	0x00001038 : add	// , RunEventLine, -1 - SAL : 1650
	0x0000103A : ixa	// , RunEventLine, -1 - SAL : 1651
	0x0000103C : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1652
	0x00001040 : pushc		2	// , RunEventLine, -1 - SAL : 1653
	0x00001044 : add	// , RunEventLine, -1 - SAL : 1654
	0x00001046 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1655
	0x0000104A : add	// , RunEventLine, -1 - SAL : 1656
	0x0000104C : ixa	// , RunEventLine, -1 - SAL : 1657
	0x0000104E : call		0x00000BE4	// , RunEventLine, -1 - SAL : 1658
	0x00001054 : add	// , RunEventLine, -1 - SAL : 1659
	0x00001056 : add	// , RunEventLine, -1 - SAL : 1660
	0x00001058 : popz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1661
	0x0000105C : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1662
	0x00001062 : rsp	// , RunEventLine, -1 - SAL : 1663
	0x00001064 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1664
	0x00001068 : pushc		3	// , RunEventLine, -1 - SAL : 1665
	0x0000106C : pushi		54 ( EventLine )		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1666
	0x00001072 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1667
	0x00001076 : inc	// , RunEventLine, -1 - SAL : 1668
	0x00001078 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1669
	0x0000107C : add	// , RunEventLine, -1 - SAL : 1670
	0x0000107E : ixa	// , RunEventLine, -1 - SAL : 1671
	0x00001080 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1672
	0x00001084 : pushc		2	// , RunEventLine, -1 - SAL : 1673
	0x00001088 : add	// , RunEventLine, -1 - SAL : 1674
	0x0000108A : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1675
	0x0000108E : add	// , RunEventLine, -1 - SAL : 1676
	0x00001090 : ixa	// , RunEventLine, -1 - SAL : 1677
	0x00001092 : call		0x00000A52	// , RunEventLine, -1 - SAL : 1678
	0x00001098 : add	// , RunEventLine, -1 - SAL : 1679
	0x0000109A : add	// , RunEventLine, -1 - SAL : 1680
	0x0000109C : popz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1681
	0x000010A0 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1682
	0x000010A6 : rsp	// , RunEventLine, -1 - SAL : 1683
	0x000010A8 : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1684
	0x000010AC : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1685
	0x000010B2 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1686
	0x000010B6 : add	// , RunEventLine, -1 - SAL : 1687
	0x000010B8 : ixa	// , RunEventLine, -1 - SAL : 1688
	0x000010BA : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1689
	0x000010BE : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1690
	0x000010C4 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1691
	0x000010C8 : add	// , RunEventLine, -1 - SAL : 1692
	0x000010CA : ixa	// , RunEventLine, -1 - SAL : 1693
	0x000010CC : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1694
	0x000010D0 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1695
	0x000010D6 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1696
	0x000010DA : add	// , RunEventLine, -1 - SAL : 1697
	0x000010DC : ixa	// , RunEventLine, -1 - SAL : 1698
	0x000010DE : call		0x00001B46	// , RunEventLine, -1 - SAL : 1699
	0x000010E4 : pushz		60 ( EffectFrame )	// , RunEventLine, -1 - SAL : 1700
	0x000010E8 : gejp		10		0x000010FC	// , RunEventLine, -1 - SAL : 1701
	0x000010F0 : incz		57 ( EventPointer )		-4	// , RunEventLine, -1 - SAL : 1702
	0x000010F6 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1703
	0x000010FC : zsetc		60 ( EffectFrame )		0	// , RunEventLine, -1 - SAL : 1704
	0x00001102 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1705
	0x00001108 : rsp	// , RunEventLine, -1 - SAL : 1706
	0x0000110A : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1707
	0x0000110E : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1708
	0x00001114 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1709
	0x00001118 : add	// , RunEventLine, -1 - SAL : 1710
	0x0000111A : ixa	// , RunEventLine, -1 - SAL : 1711
	0x0000111C : pushz		57 ( EventPointer )	// , RunEventLine, -1 - SAL : 1712
	0x00001120 : incz		57 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1713
	0x00001126 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1714
	0x0000112A : add	// , RunEventLine, -1 - SAL : 1715
	0x0000112C : ixa	// , RunEventLine, -1 - SAL : 1716
	0x0000112E : call		0x00001B96	// , RunEventLine, -1 - SAL : 1717
	0x00001134 : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1718
	0x0000113A : rsp	// , RunEventLine, -1 - SAL : 1719
	0x0000113C : ujp		0x0000114A	// , RunEventLine, -1 - SAL : 1720
	0x00001142 : rsp	// , RunEventLine, -1 - SAL : 1721
	0x00001144 : zsetc		57 ( EventPointer )		0	// , RunEventLine, -1 - SAL : 1722
	0x0000114A : ret	// , RunEventLine, -1 - SAL : 1723
}


FUNCTION : RunMainPlay()
{
	0x0000114C : nop	// , RunMainPlay, -1 - SAL : 1541
	0x0000114E : call		0x0000010A	// , RunMainPlay, -1 - SAL : 1542
	0x00001154 : call		0x00000E86	// , RunMainPlay, -1 - SAL : 1543
	0x0000115A : call		0x000001C6	// , RunMainPlay, -1 - SAL : 1544
	0x00001160 : ret	// , RunMainPlay, -1 - SAL : 1545
}


FUNCTION : RunPrologue()
{
	0x00001162 : nop	// , RunPrologue, -1 - SAL : 2674
	0x00001164 : call		0x0000010A	// , RunPrologue, -1 - SAL : 2675
	0x0000116A : call		0x00001172	// , RunPrologue, -1 - SAL : 2676
	0x00001170 : ret	// , RunPrologue, -1 - SAL : 2677
}


FUNCTION : RunPrologueEvent()
{
	0x00001172 : nop	// , RunPrologueEvent, -1 - SAL : 2678
	0x00001174 : ssp	// , RunPrologueEvent, -1 - SAL : 2679
	0x00001176 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2680
	0x0000117A : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2681
	0x00001180 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2682
	0x00001184 : add	// , RunPrologueEvent, -1 - SAL : 2683
	0x00001186 : ixa	// , RunPrologueEvent, -1 - SAL : 2684
	0x00001188 : dup	// , RunPrologueEvent, -1 - SAL : 2685
	0x0000118A : eqjp		-1		0x000011DE	// , RunPrologueEvent, -1 - SAL : 2686
	0x00001192 : dup	// , RunPrologueEvent, -1 - SAL : 2687
	0x00001194 : eqjp		0		0x000011F6	// , RunPrologueEvent, -1 - SAL : 2688
	0x0000119C : dup	// , RunPrologueEvent, -1 - SAL : 2689
	0x0000119E : eqjp		1		0x00001246	// , RunPrologueEvent, -1 - SAL : 2690
	0x000011A6 : dup	// , RunPrologueEvent, -1 - SAL : 2691
	0x000011A8 : eqjp		2		0x000012D8	// , RunPrologueEvent, -1 - SAL : 2692
	0x000011B0 : dup	// , RunPrologueEvent, -1 - SAL : 2693
	0x000011B2 : eqjp		3		0x0000130A	// , RunPrologueEvent, -1 - SAL : 2694
	0x000011BA : dup	// , RunPrologueEvent, -1 - SAL : 2695
	0x000011BC : eqjp		4		0x0000134E	// , RunPrologueEvent, -1 - SAL : 2696
	0x000011C4 : dup	// , RunPrologueEvent, -1 - SAL : 2697
	0x000011C6 : eqjp		5		0x00001392	// , RunPrologueEvent, -1 - SAL : 2698
	0x000011CE : dup	// , RunPrologueEvent, -1 - SAL : 2699
	0x000011D0 : eqjp		6		0x000013F4	// , RunPrologueEvent, -1 - SAL : 2700
	0x000011D8 : ujp		0x00001426	// , RunPrologueEvent, -1 - SAL : 2701
	0x000011DE : rsp	// , RunPrologueEvent, -1 - SAL : 2702
	0x000011E0 : zsetc		65 ( PrologueEventPointer )		0	// , RunPrologueEvent, -1 - SAL : 2703
	0x000011E6 : pushc		2	// , RunPrologueEvent, -1 - SAL : 2704
	0x000011EA : call		0x0000008E	// , RunPrologueEvent, -1 - SAL : 2705
	0x000011F0 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2706
	0x000011F6 : rsp	// , RunPrologueEvent, -1 - SAL : 2707
	0x000011F8 : pushz		68 ( NextKey )	// , RunPrologueEvent, -1 - SAL : 2708
	0x000011FC : nejp		20		0x00001222	// , RunPrologueEvent, -1 - SAL : 2709
	0x00001204 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2710
	0x00001208 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2711
	0x0000120E : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2712
	0x00001212 : add	// , RunPrologueEvent, -1 - SAL : 2713
	0x00001214 : ixa	// , RunPrologueEvent, -1 - SAL : 2714
	0x00001216 : call		0x0000039E	// , RunPrologueEvent, -1 - SAL : 2715
	0x0000121C : ujp		0x0000123A	// , RunPrologueEvent, -1 - SAL : 2716
	0x00001222 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2717
	0x00001226 : incz		65 ( PrologueEventPointer )		-1	// , RunPrologueEvent, -1 - SAL : 2718
	0x0000122C : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2719
	0x00001230 : add	// , RunPrologueEvent, -1 - SAL : 2720
	0x00001232 : ixa	// , RunPrologueEvent, -1 - SAL : 2721
	0x00001234 : call		0x0000039E	// , RunPrologueEvent, -1 - SAL : 2722
	0x0000123A : zsetc		68 ( NextKey )		-1	// , RunPrologueEvent, -1 - SAL : 2723
	0x00001240 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2724
	0x00001246 : rsp	// , RunPrologueEvent, -1 - SAL : 2725
	0x00001248 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2726
	0x0000124C : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2727
	0x00001252 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2728
	0x00001256 : add	// , RunPrologueEvent, -1 - SAL : 2729
	0x00001258 : ixa	// , RunPrologueEvent, -1 - SAL : 2730
	0x0000125A : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2731
	0x0000125E : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2732
	0x00001264 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2733
	0x00001268 : add	// , RunPrologueEvent, -1 - SAL : 2734
	0x0000126A : ixa	// , RunPrologueEvent, -1 - SAL : 2735
	0x0000126C : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2736
	0x00001270 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2737
	0x00001276 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2738
	0x0000127A : add	// , RunPrologueEvent, -1 - SAL : 2739
	0x0000127C : ixa	// , RunPrologueEvent, -1 - SAL : 2740
	0x0000127E : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2741
	0x00001282 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2742
	0x00001288 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2743
	0x0000128C : add	// , RunPrologueEvent, -1 - SAL : 2744
	0x0000128E : ixa	// , RunPrologueEvent, -1 - SAL : 2745
	0x00001290 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2746
	0x00001294 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2747
	0x0000129A : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2748
	0x0000129E : add	// , RunPrologueEvent, -1 - SAL : 2749
	0x000012A0 : ixa	// , RunPrologueEvent, -1 - SAL : 2750
	0x000012A2 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2751
	0x000012A6 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2752
	0x000012AC : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2753
	0x000012B0 : add	// , RunPrologueEvent, -1 - SAL : 2754
	0x000012B2 : ixa	// , RunPrologueEvent, -1 - SAL : 2755
	0x000012B4 : call		0x000005B4	// , RunPrologueEvent, -1 - SAL : 2756
	0x000012BA : pushz		68 ( NextKey )	// , RunPrologueEvent, -1 - SAL : 2757
	0x000012BE : eqjp		20		0x000012CC	// , RunPrologueEvent, -1 - SAL : 2758
	0x000012C6 : incz		65 ( PrologueEventPointer )		-7	// , RunPrologueEvent, -1 - SAL : 2759
	0x000012CC : zsetc		68 ( NextKey )		-1	// , RunPrologueEvent, -1 - SAL : 2760
	0x000012D2 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2761
	0x000012D8 : rsp	// , RunPrologueEvent, -1 - SAL : 2762
	0x000012DA : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2763
	0x000012DE : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2764
	0x000012E4 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2765
	0x000012E8 : add	// , RunPrologueEvent, -1 - SAL : 2766
	0x000012EA : ixa	// , RunPrologueEvent, -1 - SAL : 2767
	0x000012EC : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2768
	0x000012F0 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2769
	0x000012F6 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2770
	0x000012FA : add	// , RunPrologueEvent, -1 - SAL : 2771
	0x000012FC : ixa	// , RunPrologueEvent, -1 - SAL : 2772
	0x000012FE : call		0x00001BAE	// , RunPrologueEvent, -1 - SAL : 2773
	0x00001304 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2774
	0x0000130A : rsp	// , RunPrologueEvent, -1 - SAL : 2775
	0x0000130C : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2776
	0x00001310 : pushc		3	// , RunPrologueEvent, -1 - SAL : 2777
	0x00001314 : pushi		66 ( PrologueEventList )		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2778
	0x0000131A : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2779
	0x0000131E : inc	// , RunPrologueEvent, -1 - SAL : 2780
	0x00001320 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2781
	0x00001324 : add	// , RunPrologueEvent, -1 - SAL : 2782
	0x00001326 : ixa	// , RunPrologueEvent, -1 - SAL : 2783
	0x00001328 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2784
	0x0000132C : pushc		2	// , RunPrologueEvent, -1 - SAL : 2785
	0x00001330 : add	// , RunPrologueEvent, -1 - SAL : 2786
	0x00001332 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2787
	0x00001336 : add	// , RunPrologueEvent, -1 - SAL : 2788
	0x00001338 : ixa	// , RunPrologueEvent, -1 - SAL : 2789
	0x0000133A : call		0x00000BE4	// , RunPrologueEvent, -1 - SAL : 2790
	0x00001340 : add	// , RunPrologueEvent, -1 - SAL : 2791
	0x00001342 : add	// , RunPrologueEvent, -1 - SAL : 2792
	0x00001344 : popz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2793
	0x00001348 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2794
	0x0000134E : rsp	// , RunPrologueEvent, -1 - SAL : 2795
	0x00001350 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2796
	0x00001354 : pushc		3	// , RunPrologueEvent, -1 - SAL : 2797
	0x00001358 : pushi		66 ( PrologueEventList )		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2798
	0x0000135E : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2799
	0x00001362 : inc	// , RunPrologueEvent, -1 - SAL : 2800
	0x00001364 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2801
	0x00001368 : add	// , RunPrologueEvent, -1 - SAL : 2802
	0x0000136A : ixa	// , RunPrologueEvent, -1 - SAL : 2803
	0x0000136C : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2804
	0x00001370 : pushc		2	// , RunPrologueEvent, -1 - SAL : 2805
	0x00001374 : add	// , RunPrologueEvent, -1 - SAL : 2806
	0x00001376 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2807
	0x0000137A : add	// , RunPrologueEvent, -1 - SAL : 2808
	0x0000137C : ixa	// , RunPrologueEvent, -1 - SAL : 2809
	0x0000137E : call		0x00000A52	// , RunPrologueEvent, -1 - SAL : 2810
	0x00001384 : add	// , RunPrologueEvent, -1 - SAL : 2811
	0x00001386 : add	// , RunPrologueEvent, -1 - SAL : 2812
	0x00001388 : popz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2813
	0x0000138C : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2814
	0x00001392 : rsp	// , RunPrologueEvent, -1 - SAL : 2815
	0x00001394 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2816
	0x00001398 : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2817
	0x0000139E : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2818
	0x000013A2 : add	// , RunPrologueEvent, -1 - SAL : 2819
	0x000013A4 : ixa	// , RunPrologueEvent, -1 - SAL : 2820
	0x000013A6 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2821
	0x000013AA : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2822
	0x000013B0 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2823
	0x000013B4 : add	// , RunPrologueEvent, -1 - SAL : 2824
	0x000013B6 : ixa	// , RunPrologueEvent, -1 - SAL : 2825
	0x000013B8 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2826
	0x000013BC : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2827
	0x000013C2 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2828
	0x000013C6 : add	// , RunPrologueEvent, -1 - SAL : 2829
	0x000013C8 : ixa	// , RunPrologueEvent, -1 - SAL : 2830
	0x000013CA : call		0x00001B46	// , RunPrologueEvent, -1 - SAL : 2831
	0x000013D0 : pushz		60 ( EffectFrame )	// , RunPrologueEvent, -1 - SAL : 2832
	0x000013D4 : gejp		10		0x000013E8	// , RunPrologueEvent, -1 - SAL : 2833
	0x000013DC : incz		65 ( PrologueEventPointer )		-4	// , RunPrologueEvent, -1 - SAL : 2834
	0x000013E2 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2835
	0x000013E8 : zsetc		60 ( EffectFrame )		0	// , RunPrologueEvent, -1 - SAL : 2836
	0x000013EE : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2837
	0x000013F4 : rsp	// , RunPrologueEvent, -1 - SAL : 2838
	0x000013F6 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2839
	0x000013FA : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2840
	0x00001400 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2841
	0x00001404 : add	// , RunPrologueEvent, -1 - SAL : 2842
	0x00001406 : ixa	// , RunPrologueEvent, -1 - SAL : 2843
	0x00001408 : pushz		65 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2844
	0x0000140C : incz		65 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2845
	0x00001412 : ldrz		66 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2846
	0x00001416 : add	// , RunPrologueEvent, -1 - SAL : 2847
	0x00001418 : ixa	// , RunPrologueEvent, -1 - SAL : 2848
	0x0000141A : call		0x00001B96	// , RunPrologueEvent, -1 - SAL : 2849
	0x00001420 : ujp		0x0000142E	// , RunPrologueEvent, -1 - SAL : 2850
	0x00001426 : rsp	// , RunPrologueEvent, -1 - SAL : 2851
	0x00001428 : zsetc		65 ( PrologueEventPointer )		0	// , RunPrologueEvent, -1 - SAL : 2852
	0x0000142E : ret	// , RunPrologueEvent, -1 - SAL : 2853
}


FUNCTION : RunTitle()
{
	0x00001430 : nop	// , RunTitle, -1 - SAL : 2297
	0x00001432 : call		0x00001884	// , RunTitle, -1 - SAL : 2298
	0x00001438 : call		0x000007DE	// , RunTitle, -1 - SAL : 2299
	0x0000143E : zsetc		68 ( NextKey )		0	// , RunTitle, -1 - SAL : 2300
	0x00001444 : ret	// , RunTitle, -1 - SAL : 2301
}


FUNCTION : ScreenEffect()
{
	0x00001446 : nop	// , ScreenEffect, -1 - SAL : 938
	0x00001448 : popz		80 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 939
	0x0000144C : popz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 940
	0x00001450 : popz		78 ( Type of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 941
	0x00001454 : ssp	// , ScreenEffect, -1 - SAL : 942
	0x00001456 : pushz		78 ( Type of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 943
	0x0000145A : dup	// , ScreenEffect, -1 - SAL : 944
	0x0000145C : eqjp		0		0x00001480	// , ScreenEffect, -1 - SAL : 945
	0x00001464 : dup	// , ScreenEffect, -1 - SAL : 946
	0x00001466 : eqjp		1		0x000015DA	// , ScreenEffect, -1 - SAL : 947
	0x0000146E : dup	// , ScreenEffect, -1 - SAL : 948
	0x00001470 : eqjp		2		0x00001784	// , ScreenEffect, -1 - SAL : 949
	0x00001478 : rsp	// , ScreenEffect, -1 - SAL : 950
	0x0000147A : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 951
	0x00001480 : rsp	// , ScreenEffect, -1 - SAL : 952
	0x00001482 : ssp	// , ScreenEffect, -1 - SAL : 953
	0x00001484 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 954
	0x00001488 : dup	// , ScreenEffect, -1 - SAL : 955
	0x0000148A : eqjp		0		0x000014F4	// , ScreenEffect, -1 - SAL : 956
	0x00001492 : dup	// , ScreenEffect, -1 - SAL : 957
	0x00001494 : eqjp		1		0x00001514	// , ScreenEffect, -1 - SAL : 958
	0x0000149C : dup	// , ScreenEffect, -1 - SAL : 959
	0x0000149E : eqjp		2		0x00001534	// , ScreenEffect, -1 - SAL : 960
	0x000014A6 : dup	// , ScreenEffect, -1 - SAL : 961
	0x000014A8 : eqjp		3		0x00001554	// , ScreenEffect, -1 - SAL : 962
	0x000014B0 : dup	// , ScreenEffect, -1 - SAL : 963
	0x000014B2 : eqjp		4		0x00001554	// , ScreenEffect, -1 - SAL : 964
	0x000014BA : dup	// , ScreenEffect, -1 - SAL : 965
	0x000014BC : eqjp		5		0x00001554	// , ScreenEffect, -1 - SAL : 966
	0x000014C4 : dup	// , ScreenEffect, -1 - SAL : 967
	0x000014C6 : eqjp		6		0x00001554	// , ScreenEffect, -1 - SAL : 968
	0x000014CE : dup	// , ScreenEffect, -1 - SAL : 969
	0x000014D0 : eqjp		7		0x00001574	// , ScreenEffect, -1 - SAL : 970
	0x000014D8 : dup	// , ScreenEffect, -1 - SAL : 971
	0x000014DA : eqjp		8		0x00001594	// , ScreenEffect, -1 - SAL : 972
	0x000014E2 : dup	// , ScreenEffect, -1 - SAL : 973
	0x000014E4 : eqjp		9		0x000015B4	// , ScreenEffect, -1 - SAL : 974
	0x000014EC : rsp	// , ScreenEffect, -1 - SAL : 975
	0x000014EE : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 976
	0x000014F4 : rsp	// , ScreenEffect, -1 - SAL : 977
	0x000014F6 : pushc		0	// , ScreenEffect, -1 - SAL : 978
	0x000014FA : pushc		20	// , ScreenEffect, -1 - SAL : 979
	0x000014FE : pushc		239	// , ScreenEffect, -1 - SAL : 980
	0x00001502 : pushc		280	// , ScreenEffect, -1 - SAL : 981
	0x00001506 : pushc		3	// , ScreenEffect, -1 - SAL : 982
	0x0000150A : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 983
	0x0000150E : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 984
	0x00001514 : rsp	// , ScreenEffect, -1 - SAL : 985
	0x00001516 : pushc		0	// , ScreenEffect, -1 - SAL : 986
	0x0000151A : pushc		20	// , ScreenEffect, -1 - SAL : 987
	0x0000151E : pushc		239	// , ScreenEffect, -1 - SAL : 988
	0x00001522 : pushc		280	// , ScreenEffect, -1 - SAL : 989
	0x00001526 : pushc		2	// , ScreenEffect, -1 - SAL : 990
	0x0000152A : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 991
	0x0000152E : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 992
	0x00001534 : rsp	// , ScreenEffect, -1 - SAL : 993
	0x00001536 : pushc		0	// , ScreenEffect, -1 - SAL : 994
	0x0000153A : pushc		20	// , ScreenEffect, -1 - SAL : 995
	0x0000153E : pushc		239	// , ScreenEffect, -1 - SAL : 996
	0x00001542 : pushc		280	// , ScreenEffect, -1 - SAL : 997
	0x00001546 : pushc		1	// , ScreenEffect, -1 - SAL : 998
	0x0000154A : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 999
	0x0000154E : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1000
	0x00001554 : rsp	// , ScreenEffect, -1 - SAL : 1001
	0x00001556 : pushc		0	// , ScreenEffect, -1 - SAL : 1002
	0x0000155A : pushc		20	// , ScreenEffect, -1 - SAL : 1003
	0x0000155E : pushc		239	// , ScreenEffect, -1 - SAL : 1004
	0x00001562 : pushc		280	// , ScreenEffect, -1 - SAL : 1005
	0x00001566 : pushc		0	// , ScreenEffect, -1 - SAL : 1006
	0x0000156A : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 1007
	0x0000156E : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1008
	0x00001574 : rsp	// , ScreenEffect, -1 - SAL : 1009
	0x00001576 : pushc		0	// , ScreenEffect, -1 - SAL : 1010
	0x0000157A : pushc		20	// , ScreenEffect, -1 - SAL : 1011
	0x0000157E : pushc		239	// , ScreenEffect, -1 - SAL : 1012
	0x00001582 : pushc		280	// , ScreenEffect, -1 - SAL : 1013
	0x00001586 : pushc		1	// , ScreenEffect, -1 - SAL : 1014
	0x0000158A : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 1015
	0x0000158E : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1016
	0x00001594 : rsp	// , ScreenEffect, -1 - SAL : 1017
	0x00001596 : pushc		0	// , ScreenEffect, -1 - SAL : 1018
	0x0000159A : pushc		20	// , ScreenEffect, -1 - SAL : 1019
	0x0000159E : pushc		239	// , ScreenEffect, -1 - SAL : 1020
	0x000015A2 : pushc		280	// , ScreenEffect, -1 - SAL : 1021
	0x000015A6 : pushc		2	// , ScreenEffect, -1 - SAL : 1022
	0x000015AA : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 1023
	0x000015AE : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1024
	0x000015B4 : rsp	// , ScreenEffect, -1 - SAL : 1025
	0x000015B6 : pushc		0	// , ScreenEffect, -1 - SAL : 1026
	0x000015BA : pushc		20	// , ScreenEffect, -1 - SAL : 1027
	0x000015BE : pushc		239	// , ScreenEffect, -1 - SAL : 1028
	0x000015C2 : pushc		280	// , ScreenEffect, -1 - SAL : 1029
	0x000015C6 : pushc		3	// , ScreenEffect, -1 - SAL : 1030
	0x000015CA : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 1031
	0x000015CE : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1032
	0x000015D4 : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1033
	0x000015DA : rsp	// , ScreenEffect, -1 - SAL : 1034
	0x000015DC : ssp	// , ScreenEffect, -1 - SAL : 1035
	0x000015DE : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1036
	0x000015E2 : dup	// , ScreenEffect, -1 - SAL : 1037
	0x000015E4 : eqjp		0		0x0000164E	// , ScreenEffect, -1 - SAL : 1038
	0x000015EC : dup	// , ScreenEffect, -1 - SAL : 1039
	0x000015EE : eqjp		1		0x0000164E	// , ScreenEffect, -1 - SAL : 1040
	0x000015F6 : dup	// , ScreenEffect, -1 - SAL : 1041
	0x000015F8 : eqjp		2		0x0000164E	// , ScreenEffect, -1 - SAL : 1042
	0x00001600 : dup	// , ScreenEffect, -1 - SAL : 1043
	0x00001602 : eqjp		3		0x0000164E	// , ScreenEffect, -1 - SAL : 1044
	0x0000160A : dup	// , ScreenEffect, -1 - SAL : 1045
	0x0000160C : eqjp		4		0x0000164E	// , ScreenEffect, -1 - SAL : 1046
	0x00001614 : dup	// , ScreenEffect, -1 - SAL : 1047
	0x00001616 : eqjp		5		0x000016DE	// , ScreenEffect, -1 - SAL : 1048
	0x0000161E : dup	// , ScreenEffect, -1 - SAL : 1049
	0x00001620 : eqjp		6		0x000016DE	// , ScreenEffect, -1 - SAL : 1050
	0x00001628 : dup	// , ScreenEffect, -1 - SAL : 1051
	0x0000162A : eqjp		7		0x000016DE	// , ScreenEffect, -1 - SAL : 1052
	0x00001632 : dup	// , ScreenEffect, -1 - SAL : 1053
	0x00001634 : eqjp		8		0x000016DE	// , ScreenEffect, -1 - SAL : 1054
	0x0000163C : dup	// , ScreenEffect, -1 - SAL : 1055
	0x0000163E : eqjp		9		0x000016DE	// , ScreenEffect, -1 - SAL : 1056
	0x00001646 : rsp	// , ScreenEffect, -1 - SAL : 1057
	0x00001648 : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1058
	0x0000164E : rsp	// , ScreenEffect, -1 - SAL : 1059
	0x00001650 : pushc		0	// , ScreenEffect, -1 - SAL : 1060
	0x00001654 : pushc		280	// , ScreenEffect, -1 - SAL : 1061
	0x00001658 : pushc		239	// , ScreenEffect, -1 - SAL : 1062
	0x0000165C : pushc		280	// , ScreenEffect, -1 - SAL : 1063
	0x00001660 : pushc		28	// , ScreenEffect, -1 - SAL : 1064
	0x00001664 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1065
	0x00001668 : inc	// , ScreenEffect, -1 - SAL : 1066
	0x0000166A : mult	// , ScreenEffect, -1 - SAL : 1067
	0x0000166C : sub	// , ScreenEffect, -1 - SAL : 1068
	0x0000166E : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1069
	0x00001672 : pushc		0	// , ScreenEffect, -1 - SAL : 1070
	0x00001676 : pushc		20	// , ScreenEffect, -1 - SAL : 1071
	0x0000167A : pushc		239	// , ScreenEffect, -1 - SAL : 1072
	0x0000167E : pushc		20	// , ScreenEffect, -1 - SAL : 1073
	0x00001682 : pushc		28	// , ScreenEffect, -1 - SAL : 1074
	0x00001686 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1075
	0x0000168A : inc	// , ScreenEffect, -1 - SAL : 1076
	0x0000168C : mult	// , ScreenEffect, -1 - SAL : 1077
	0x0000168E : add	// , ScreenEffect, -1 - SAL : 1078
	0x00001690 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1079
	0x00001694 : pushc		239	// , ScreenEffect, -1 - SAL : 1080
	0x00001698 : pushc		20	// , ScreenEffect, -1 - SAL : 1081
	0x0000169C : pushc		239	// , ScreenEffect, -1 - SAL : 1082
	0x000016A0 : pushc		23	// , ScreenEffect, -1 - SAL : 1083
	0x000016A4 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1084
	0x000016A8 : inc	// , ScreenEffect, -1 - SAL : 1085
	0x000016AA : mult	// , ScreenEffect, -1 - SAL : 1086
	0x000016AC : sub	// , ScreenEffect, -1 - SAL : 1087
	0x000016AE : pushc		280	// , ScreenEffect, -1 - SAL : 1088
	0x000016B2 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1089
	0x000016B6 : pushc		0	// , ScreenEffect, -1 - SAL : 1090
	0x000016BA : pushc		20	// , ScreenEffect, -1 - SAL : 1091
	0x000016BE : pushc		0	// , ScreenEffect, -1 - SAL : 1092
	0x000016C2 : pushc		23	// , ScreenEffect, -1 - SAL : 1093
	0x000016C6 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1094
	0x000016CA : inc	// , ScreenEffect, -1 - SAL : 1095
	0x000016CC : mult	// , ScreenEffect, -1 - SAL : 1096
	0x000016CE : add	// , ScreenEffect, -1 - SAL : 1097
	0x000016D0 : pushc		280	// , ScreenEffect, -1 - SAL : 1098
	0x000016D4 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1099
	0x000016D8 : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1100
	0x000016DE : rsp	// , ScreenEffect, -1 - SAL : 1101
	0x000016E0 : pushc		0	// , ScreenEffect, -1 - SAL : 1102
	0x000016E4 : pushc		280	// , ScreenEffect, -1 - SAL : 1103
	0x000016E8 : pushc		239	// , ScreenEffect, -1 - SAL : 1104
	0x000016EC : pushc		280	// , ScreenEffect, -1 - SAL : 1105
	0x000016F0 : pushc		28	// , ScreenEffect, -1 - SAL : 1106
	0x000016F4 : pushc		10	// , ScreenEffect, -1 - SAL : 1107
	0x000016F8 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1108
	0x000016FC : sub	// , ScreenEffect, -1 - SAL : 1109
	0x000016FE : mult	// , ScreenEffect, -1 - SAL : 1110
	0x00001700 : sub	// , ScreenEffect, -1 - SAL : 1111
	0x00001702 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1112
	0x00001706 : pushc		0	// , ScreenEffect, -1 - SAL : 1113
	0x0000170A : pushc		20	// , ScreenEffect, -1 - SAL : 1114
	0x0000170E : pushc		239	// , ScreenEffect, -1 - SAL : 1115
	0x00001712 : pushc		20	// , ScreenEffect, -1 - SAL : 1116
	0x00001716 : pushc		28	// , ScreenEffect, -1 - SAL : 1117
	0x0000171A : pushc		10	// , ScreenEffect, -1 - SAL : 1118
	0x0000171E : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1119
	0x00001722 : sub	// , ScreenEffect, -1 - SAL : 1120
	0x00001724 : mult	// , ScreenEffect, -1 - SAL : 1121
	0x00001726 : add	// , ScreenEffect, -1 - SAL : 1122
	0x00001728 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1123
	0x0000172C : pushc		239	// , ScreenEffect, -1 - SAL : 1124
	0x00001730 : pushc		20	// , ScreenEffect, -1 - SAL : 1125
	0x00001734 : pushc		239	// , ScreenEffect, -1 - SAL : 1126
	0x00001738 : pushc		23	// , ScreenEffect, -1 - SAL : 1127
	0x0000173C : pushc		10	// , ScreenEffect, -1 - SAL : 1128
	0x00001740 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1129
	0x00001744 : sub	// , ScreenEffect, -1 - SAL : 1130
	0x00001746 : mult	// , ScreenEffect, -1 - SAL : 1131
	0x00001748 : sub	// , ScreenEffect, -1 - SAL : 1132
	0x0000174A : pushc		280	// , ScreenEffect, -1 - SAL : 1133
	0x0000174E : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1134
	0x00001752 : pushc		0	// , ScreenEffect, -1 - SAL : 1135
	0x00001756 : pushc		20	// , ScreenEffect, -1 - SAL : 1136
	0x0000175A : pushc		0	// , ScreenEffect, -1 - SAL : 1137
	0x0000175E : pushc		23	// , ScreenEffect, -1 - SAL : 1138
	0x00001762 : pushc		10	// , ScreenEffect, -1 - SAL : 1139
	0x00001766 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1140
	0x0000176A : sub	// , ScreenEffect, -1 - SAL : 1141
	0x0000176C : mult	// , ScreenEffect, -1 - SAL : 1142
	0x0000176E : add	// , ScreenEffect, -1 - SAL : 1143
	0x00001770 : pushc		280	// , ScreenEffect, -1 - SAL : 1144
	0x00001774 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 1145
	0x00001778 : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1146
	0x0000177E : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1147
	0x00001784 : rsp	// , ScreenEffect, -1 - SAL : 1148
	0x00001786 : ssp	// , ScreenEffect, -1 - SAL : 1149
	0x00001788 : pushz		79 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1150
	0x0000178C : dup	// , ScreenEffect, -1 - SAL : 1151
	0x0000178E : eqjp		0		0x000017F8	// , ScreenEffect, -1 - SAL : 1152
	0x00001796 : dup	// , ScreenEffect, -1 - SAL : 1153
	0x00001798 : eqjp		1		0x000017F8	// , ScreenEffect, -1 - SAL : 1154
	0x000017A0 : dup	// , ScreenEffect, -1 - SAL : 1155
	0x000017A2 : eqjp		2		0x00001820	// , ScreenEffect, -1 - SAL : 1156
	0x000017AA : dup	// , ScreenEffect, -1 - SAL : 1157
	0x000017AC : eqjp		3		0x00001820	// , ScreenEffect, -1 - SAL : 1158
	0x000017B4 : dup	// , ScreenEffect, -1 - SAL : 1159
	0x000017B6 : eqjp		4		0x00001848	// , ScreenEffect, -1 - SAL : 1160
	0x000017BE : dup	// , ScreenEffect, -1 - SAL : 1161
	0x000017C0 : eqjp		5		0x00001848	// , ScreenEffect, -1 - SAL : 1162
	0x000017C8 : dup	// , ScreenEffect, -1 - SAL : 1163
	0x000017CA : eqjp		6		0x00001848	// , ScreenEffect, -1 - SAL : 1164
	0x000017D2 : dup	// , ScreenEffect, -1 - SAL : 1165
	0x000017D4 : eqjp		7		0x00001870	// , ScreenEffect, -1 - SAL : 1166
	0x000017DC : dup	// , ScreenEffect, -1 - SAL : 1167
	0x000017DE : eqjp		8		0x00001870	// , ScreenEffect, -1 - SAL : 1168
	0x000017E6 : dup	// , ScreenEffect, -1 - SAL : 1169
	0x000017E8 : eqjp		9		0x00001870	// , ScreenEffect, -1 - SAL : 1170
	0x000017F0 : rsp	// , ScreenEffect, -1 - SAL : 1171
	0x000017F2 : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1172
	0x000017F8 : rsp	// , ScreenEffect, -1 - SAL : 1173
	0x000017FA : pushc		0	// , ScreenEffect, -1 - SAL : 1174
	0x000017FE : pushc		20	// , ScreenEffect, -1 - SAL : 1175
	0x00001802 : pushi		40 ( bg )		80 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1176
	0x00001808 : pushc		3	// , ScreenEffect, -1 - SAL : 1177
	0x0000180C : pushc		0	// , ScreenEffect, -1 - SAL : 1178
	0x00001810 : pushc		0	// , ScreenEffect, -1 - SAL : 1179
	0x00001814 : pushc		0	// , ScreenEffect, -1 - SAL : 1180
	0x00001818 : CopyImageEx	// , ScreenEffect, -1 - SAL : 1181
	0x0000181A : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1182
	0x00001820 : rsp	// , ScreenEffect, -1 - SAL : 1183
	0x00001822 : pushc		0	// , ScreenEffect, -1 - SAL : 1184
	0x00001826 : pushc		20	// , ScreenEffect, -1 - SAL : 1185
	0x0000182A : pushi		40 ( bg )		80 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1186
	0x00001830 : pushc		3	// , ScreenEffect, -1 - SAL : 1187
	0x00001834 : pushc		0	// , ScreenEffect, -1 - SAL : 1188
	0x00001838 : pushc		0	// , ScreenEffect, -1 - SAL : 1189
	0x0000183C : pushc		0	// , ScreenEffect, -1 - SAL : 1190
	0x00001840 : CopyImageEx	// , ScreenEffect, -1 - SAL : 1191
	0x00001842 : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1192
	0x00001848 : rsp	// , ScreenEffect, -1 - SAL : 1193
	0x0000184A : pushc		0	// , ScreenEffect, -1 - SAL : 1194
	0x0000184E : pushc		20	// , ScreenEffect, -1 - SAL : 1195
	0x00001852 : pushi		40 ( bg )		80 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1196
	0x00001858 : pushc		1	// , ScreenEffect, -1 - SAL : 1197
	0x0000185C : pushc		0	// , ScreenEffect, -1 - SAL : 1198
	0x00001860 : pushc		0	// , ScreenEffect, -1 - SAL : 1199
	0x00001864 : pushc		0	// , ScreenEffect, -1 - SAL : 1200
	0x00001868 : CopyImageEx	// , ScreenEffect, -1 - SAL : 1201
	0x0000186A : ujp		0x00001882	// , ScreenEffect, -1 - SAL : 1202
	0x00001870 : rsp	// , ScreenEffect, -1 - SAL : 1203
	0x00001872 : pushc		0	// , ScreenEffect, -1 - SAL : 1204
	0x00001876 : pushc		20	// , ScreenEffect, -1 - SAL : 1205
	0x0000187A : pushi		40 ( bg )		80 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 1206
	0x00001880 : CopyImage	// , ScreenEffect, -1 - SAL : 1207
	0x00001882 : ret	// , ScreenEffect, -1 - SAL : 1208
}


FUNCTION : SelectTitleMenu()
{
	0x00001884 : nop	// , SelectTitleMenu, -1 - SAL : 2384
	0x00001886 : pushz		63 ( SelectedMenu )	// , SelectTitleMenu, -1 - SAL : 2385
	0x0000188A : fjp		0x00001A6A	// , SelectTitleMenu, -1 - SAL : 2386
	0x00001890 : ssp	// , SelectTitleMenu, -1 - SAL : 2387
	0x00001892 : pushz		68 ( NextKey )	// , SelectTitleMenu, -1 - SAL : 2388
	0x00001896 : dup	// , SelectTitleMenu, -1 - SAL : 2389
	0x00001898 : eqjp		18		0x000018C4	// , SelectTitleMenu, -1 - SAL : 2390
	0x000018A0 : dup	// , SelectTitleMenu, -1 - SAL : 2391
	0x000018A2 : eqjp		19		0x00001934	// , SelectTitleMenu, -1 - SAL : 2392
	0x000018AA : dup	// , SelectTitleMenu, -1 - SAL : 2393
	0x000018AC : eqjp		20		0x000019A0	// , SelectTitleMenu, -1 - SAL : 2394
	0x000018B4 : dup	// , SelectTitleMenu, -1 - SAL : 2395
	0x000018B6 : eqjp		13		0x00001A48	// , SelectTitleMenu, -1 - SAL : 2396
	0x000018BE : ujp		0x00001A5C	// , SelectTitleMenu, -1 - SAL : 2397
	0x000018C4 : rsp	// , SelectTitleMenu, -1 - SAL : 2398
	0x000018C6 : ssp	// , SelectTitleMenu, -1 - SAL : 2399
	0x000018C8 : pushz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2400
	0x000018CC : dup	// , SelectTitleMenu, -1 - SAL : 2401
	0x000018CE : eqjp		1		0x000018F2	// , SelectTitleMenu, -1 - SAL : 2402
	0x000018D6 : dup	// , SelectTitleMenu, -1 - SAL : 2403
	0x000018D8 : eqjp		2		0x0000190E	// , SelectTitleMenu, -1 - SAL : 2404
	0x000018E0 : dup	// , SelectTitleMenu, -1 - SAL : 2405
	0x000018E2 : eqjp		3		0x00001926	// , SelectTitleMenu, -1 - SAL : 2406
	0x000018EA : rsp	// , SelectTitleMenu, -1 - SAL : 2407
	0x000018EC : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2408
	0x000018F2 : rsp	// , SelectTitleMenu, -1 - SAL : 2409
	0x000018F4 : pushz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2410
	0x000018F8 : pushc		5	// , SelectTitleMenu, -1 - SAL : 2411
	0x000018FC : add	// , SelectTitleMenu, -1 - SAL : 2412
	0x000018FE : pushc		6	// , SelectTitleMenu, -1 - SAL : 2413
	0x00001902 : mod	// , SelectTitleMenu, -1 - SAL : 2414
	0x00001904 : popz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2415
	0x00001908 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2416
	0x0000190E : rsp	// , SelectTitleMenu, -1 - SAL : 2417
	0x00001910 : pushz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2418
	0x00001914 : inc	// , SelectTitleMenu, -1 - SAL : 2419
	0x00001916 : pushc		2	// , SelectTitleMenu, -1 - SAL : 2420
	0x0000191A : mod	// , SelectTitleMenu, -1 - SAL : 2421
	0x0000191C : popz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2422
	0x00001920 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2423
	0x00001926 : rsp	// , SelectTitleMenu, -1 - SAL : 2424
	0x00001928 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2425
	0x0000192E : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2426
	0x00001934 : rsp	// , SelectTitleMenu, -1 - SAL : 2427
	0x00001936 : ssp	// , SelectTitleMenu, -1 - SAL : 2428
	0x00001938 : pushz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2429
	0x0000193C : dup	// , SelectTitleMenu, -1 - SAL : 2430
	0x0000193E : eqjp		1		0x00001962	// , SelectTitleMenu, -1 - SAL : 2431
	0x00001946 : dup	// , SelectTitleMenu, -1 - SAL : 2432
	0x00001948 : eqjp		2		0x0000197A	// , SelectTitleMenu, -1 - SAL : 2433
	0x00001950 : dup	// , SelectTitleMenu, -1 - SAL : 2434
	0x00001952 : eqjp		3		0x00001992	// , SelectTitleMenu, -1 - SAL : 2435
	0x0000195A : rsp	// , SelectTitleMenu, -1 - SAL : 2436
	0x0000195C : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2437
	0x00001962 : rsp	// , SelectTitleMenu, -1 - SAL : 2438
	0x00001964 : pushz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2439
	0x00001968 : inc	// , SelectTitleMenu, -1 - SAL : 2440
	0x0000196A : pushc		6	// , SelectTitleMenu, -1 - SAL : 2441
	0x0000196E : mod	// , SelectTitleMenu, -1 - SAL : 2442
	0x00001970 : popz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2443
	0x00001974 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2444
	0x0000197A : rsp	// , SelectTitleMenu, -1 - SAL : 2445
	0x0000197C : pushz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2446
	0x00001980 : inc	// , SelectTitleMenu, -1 - SAL : 2447
	0x00001982 : pushc		2	// , SelectTitleMenu, -1 - SAL : 2448
	0x00001986 : mod	// , SelectTitleMenu, -1 - SAL : 2449
	0x00001988 : popz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2450
	0x0000198C : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2451
	0x00001992 : rsp	// , SelectTitleMenu, -1 - SAL : 2452
	0x00001994 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2453
	0x0000199A : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2454
	0x000019A0 : rsp	// , SelectTitleMenu, -1 - SAL : 2455
	0x000019A2 : ssp	// , SelectTitleMenu, -1 - SAL : 2456
	0x000019A4 : pushz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2457
	0x000019A8 : dup	// , SelectTitleMenu, -1 - SAL : 2458
	0x000019AA : eqjp		1		0x000019CE	// , SelectTitleMenu, -1 - SAL : 2459
	0x000019B2 : dup	// , SelectTitleMenu, -1 - SAL : 2460
	0x000019B4 : eqjp		2		0x000019EC	// , SelectTitleMenu, -1 - SAL : 2461
	0x000019BC : dup	// , SelectTitleMenu, -1 - SAL : 2462
	0x000019BE : eqjp		3		0x00001A3A	// , SelectTitleMenu, -1 - SAL : 2463
	0x000019C6 : rsp	// , SelectTitleMenu, -1 - SAL : 2464
	0x000019C8 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2465
	0x000019CE : rsp	// , SelectTitleMenu, -1 - SAL : 2466
	0x000019D0 : pushz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2467
	0x000019D4 : nejp		0		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2468
	0x000019DC : pushc		2	// , SelectTitleMenu, -1 - SAL : 2469
	0x000019E0 : call		0x0000008E	// , SelectTitleMenu, -1 - SAL : 2470
	0x000019E6 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2471
	0x000019EC : rsp	// , SelectTitleMenu, -1 - SAL : 2472
	0x000019EE : ssp	// , SelectTitleMenu, -1 - SAL : 2473
	0x000019F0 : pushz		64 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2474
	0x000019F4 : dup	// , SelectTitleMenu, -1 - SAL : 2475
	0x000019F6 : eqjp		0		0x00001A10	// , SelectTitleMenu, -1 - SAL : 2476
	0x000019FE : dup	// , SelectTitleMenu, -1 - SAL : 2477
	0x00001A00 : eqjp		1		0x00001A22	// , SelectTitleMenu, -1 - SAL : 2478
	0x00001A08 : rsp	// , SelectTitleMenu, -1 - SAL : 2479
	0x00001A0A : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2480
	0x00001A10 : rsp	// , SelectTitleMenu, -1 - SAL : 2481
	0x00001A12 : pushz		43 ( OptionAutoSkip )	// , SelectTitleMenu, -1 - SAL : 2482
	0x00001A16 : not	// , SelectTitleMenu, -1 - SAL : 2483
	0x00001A18 : popz		43 ( OptionAutoSkip )	// , SelectTitleMenu, -1 - SAL : 2484
	0x00001A1C : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2485
	0x00001A22 : rsp	// , SelectTitleMenu, -1 - SAL : 2486
	0x00001A24 : pushz		44 ( OptionSpokeSkip )	// , SelectTitleMenu, -1 - SAL : 2487
	0x00001A28 : not	// , SelectTitleMenu, -1 - SAL : 2488
	0x00001A2A : popz		44 ( OptionSpokeSkip )	// , SelectTitleMenu, -1 - SAL : 2489
	0x00001A2E : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2490
	0x00001A34 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2491
	0x00001A3A : rsp	// , SelectTitleMenu, -1 - SAL : 2492
	0x00001A3C : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2493
	0x00001A42 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2494
	0x00001A48 : rsp	// , SelectTitleMenu, -1 - SAL : 2495
	0x00001A4A : zsetc		64 ( SelectedObject )		0	// , SelectTitleMenu, -1 - SAL : 2496
	0x00001A50 : zsetc		63 ( SelectedMenu )		0	// , SelectTitleMenu, -1 - SAL : 2497
	0x00001A56 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2498
	0x00001A5C : rsp	// , SelectTitleMenu, -1 - SAL : 2499
	0x00001A5E : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2500
	0x00001A64 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2501
	0x00001A6A : ssp	// , SelectTitleMenu, -1 - SAL : 2502
	0x00001A6C : pushz		68 ( NextKey )	// , SelectTitleMenu, -1 - SAL : 2503
	0x00001A70 : dup	// , SelectTitleMenu, -1 - SAL : 2504
	0x00001A72 : eqjp		18		0x00001A94	// , SelectTitleMenu, -1 - SAL : 2505
	0x00001A7A : dup	// , SelectTitleMenu, -1 - SAL : 2506
	0x00001A7C : eqjp		19		0x00001AB0	// , SelectTitleMenu, -1 - SAL : 2507
	0x00001A84 : dup	// , SelectTitleMenu, -1 - SAL : 2508
	0x00001A86 : eqjp		20		0x00001AC8	// , SelectTitleMenu, -1 - SAL : 2509
	0x00001A8E : ujp		0x00001B42	// , SelectTitleMenu, -1 - SAL : 2510
	0x00001A94 : rsp	// , SelectTitleMenu, -1 - SAL : 2511
	0x00001A96 : pushz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2512
	0x00001A9A : pushc		4	// , SelectTitleMenu, -1 - SAL : 2513
	0x00001A9E : add	// , SelectTitleMenu, -1 - SAL : 2514
	0x00001AA0 : pushc		5	// , SelectTitleMenu, -1 - SAL : 2515
	0x00001AA4 : mod	// , SelectTitleMenu, -1 - SAL : 2516
	0x00001AA6 : popz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2517
	0x00001AAA : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2518
	0x00001AB0 : rsp	// , SelectTitleMenu, -1 - SAL : 2519
	0x00001AB2 : pushz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2520
	0x00001AB6 : inc	// , SelectTitleMenu, -1 - SAL : 2521
	0x00001AB8 : pushc		5	// , SelectTitleMenu, -1 - SAL : 2522
	0x00001ABC : mod	// , SelectTitleMenu, -1 - SAL : 2523
	0x00001ABE : popz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2524
	0x00001AC2 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2525
	0x00001AC8 : rsp	// , SelectTitleMenu, -1 - SAL : 2526
	0x00001ACA : ssp	// , SelectTitleMenu, -1 - SAL : 2527
	0x00001ACC : pushz		62 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2528
	0x00001AD0 : dup	// , SelectTitleMenu, -1 - SAL : 2529
	0x00001AD2 : eqjp		0		0x00001B08	// , SelectTitleMenu, -1 - SAL : 2530
	0x00001ADA : dup	// , SelectTitleMenu, -1 - SAL : 2531
	0x00001ADC : eqjp		1		0x00001B1A	// , SelectTitleMenu, -1 - SAL : 2532
	0x00001AE4 : dup	// , SelectTitleMenu, -1 - SAL : 2533
	0x00001AE6 : eqjp		2		0x00001B1A	// , SelectTitleMenu, -1 - SAL : 2534
	0x00001AEE : dup	// , SelectTitleMenu, -1 - SAL : 2535
	0x00001AF0 : eqjp		3		0x00001B1A	// , SelectTitleMenu, -1 - SAL : 2536
	0x00001AF8 : dup	// , SelectTitleMenu, -1 - SAL : 2537
	0x00001AFA : eqjp		4		0x00001B28	// , SelectTitleMenu, -1 - SAL : 2538
	0x00001B02 : ujp		0x00001B34	// , SelectTitleMenu, -1 - SAL : 2539
	0x00001B08 : rsp	// , SelectTitleMenu, -1 - SAL : 2540
	0x00001B0A : pushc		1	// , SelectTitleMenu, -1 - SAL : 2541
	0x00001B0E : call		0x0000008E	// , SelectTitleMenu, -1 - SAL : 2542
	0x00001B14 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2543
	0x00001B1A : rsp	// , SelectTitleMenu, -1 - SAL : 2544
	0x00001B1C : zsetc		63 ( SelectedMenu )		1	// , SelectTitleMenu, -1 - SAL : 2545
	0x00001B22 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2546
	0x00001B28 : rsp	// , SelectTitleMenu, -1 - SAL : 2547
	0x00001B2A : calls		Exit(225)	// , SelectTitleMenu, -1 - SAL : 2548
	0x00001B2E : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2549
	0x00001B34 : rsp	// , SelectTitleMenu, -1 - SAL : 2550
	0x00001B36 : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2551
	0x00001B3C : ujp		0x00001B44	// , SelectTitleMenu, -1 - SAL : 2552
	0x00001B42 : rsp	// , SelectTitleMenu, -1 - SAL : 2553
	0x00001B44 : ret	// , SelectTitleMenu, -1 - SAL : 2554
}


FUNCTION : SetBackground()
{
	0x00001B46 : nop	// , SetBackground, -1 - SAL : 2039
	0x00001B48 : popz		113 ( Effect of Function SetBackground )	// , SetBackground, -1 - SAL : 2040
	0x00001B4C : popz		112 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 2041
	0x00001B50 : popz		111 ( Layer of Function SetBackground )	// , SetBackground, -1 - SAL : 2042
	0x00001B54 : pushz		60 ( EffectFrame )	// , SetBackground, -1 - SAL : 2043
	0x00001B58 : nejp		5		0x00001B6E	// , SetBackground, -1 - SAL : 2044
	0x00001B60 : isetz		49 ( Background )		111 ( Layer of Function SetBackground )		112 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 2045
	0x00001B68 : ujp		0x00001B7C	// , SetBackground, -1 - SAL : 2046
	0x00001B6E : pushz		60 ( EffectFrame )	// , SetBackground, -1 - SAL : 2047
	0x00001B72 : lejp		10		0x00001B7C	// , SetBackground, -1 - SAL : 2048
	0x00001B7A : ret	// , SetBackground, -1 - SAL : 2049
	0x00001B7C : pushz		113 ( Effect of Function SetBackground )	// , SetBackground, -1 - SAL : 2050
	0x00001B80 : pushz		60 ( EffectFrame )	// , SetBackground, -1 - SAL : 2051
	0x00001B84 : incz		60 ( EffectFrame )		1	// , SetBackground, -1 - SAL : 2052
	0x00001B8A : pushz		112 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 2053
	0x00001B8E : call		0x00001446	// , SetBackground, -1 - SAL : 2054
	0x00001B94 : ret	// , SetBackground, -1 - SAL : 2055
}


FUNCTION : SetChara()
{
	0x00001B96 : nop	// , SetChara, -1 - SAL : 2056
	0x00001B98 : popz		115 ( ImageNumber of Function SetChara )	// , SetChara, -1 - SAL : 2057
	0x00001B9C : stnz		114 ( Layer of Function SetChara )	// , SetChara, -1 - SAL : 2058
	0x00001BA0 : ldrz		50 ( BackChara )	// , SetChara, -1 - SAL : 2059
	0x00001BA4 : add	// , SetChara, -1 - SAL : 2060
	0x00001BA6 : pushz		115 ( ImageNumber of Function SetChara )	// , SetChara, -1 - SAL : 2061
	0x00001BAA : sta	// , SetChara, -1 - SAL : 2062
	0x00001BAC : ret	// , SetChara, -1 - SAL : 2063
}


FUNCTION : SetCurrentName()
{
	0x00001BAE : nop	// , SetCurrentName, -1 - SAL : 2011
	0x00001BB0 : popz		104 ( Position of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 2012
	0x00001BB4 : stnz		103 ( NameNumber of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 2013
	0x00001BB8 : popz		58 ( CurrentName )	// , SetCurrentName, -1 - SAL : 2014
	0x00001BBC : zsetz		59 ( NamePosition )		104 ( Position of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 2015
	0x00001BC2 : ret	// , SetCurrentName, -1 - SAL : 2016
}


FUNCTION : SetDate()
{
	0x00001BC4 : nop	// , SetDate, -1 - SAL : 2064
	0x00001BC6 : popz		118 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 2065
	0x00001BCA : popz		117 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 2066
	0x00001BCE : popz		116 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 2067
	0x00001BD2 : ldrz		47 ( Now )	// , SetDate, -1 - SAL : 2068
	0x00001BD6 : pushz		116 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 2069
	0x00001BDA : sta	// , SetDate, -1 - SAL : 2070
	0x00001BDC : ldrz		47 ( Now )	// , SetDate, -1 - SAL : 2071
	0x00001BE0 : inc	// , SetDate, -1 - SAL : 2072
	0x00001BE2 : pushz		117 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 2073
	0x00001BE6 : sta	// , SetDate, -1 - SAL : 2074
	0x00001BE8 : addldrzc		47 ( Now )		2	// , SetDate, -1 - SAL : 2075
	0x00001BEE : pushz		118 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 2078
	0x00001BF2 : sta	// , SetDate, -1 - SAL : 2079
	0x00001BF4 : addldrzc		47 ( Now )		3	// , SetDate, -1 - SAL : 2080
	0x00001BFA : pushz		116 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 2083
	0x00001BFE : pushz		117 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 2084
	0x00001C02 : pushz		118 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 2085
	0x00001C06 : call		0x00000BC0	// , SetDate, -1 - SAL : 2086
	0x00001C0C : sta	// , SetDate, -1 - SAL : 2087
	0x00001C0E : ret	// , SetDate, -1 - SAL : 2088
}


FUNCTION : SetTime()
{
	0x00001C10 : nop	// , SetTime, -1 - SAL : 2089
	0x00001C12 : popz		120 ( Minute of Function SetTime )	// , SetTime, -1 - SAL : 2090
	0x00001C16 : popz		119 ( Hour of Function SetTime )	// , SetTime, -1 - SAL : 2091
	0x00001C1A : addldrzc		47 ( Now )		4	// , SetTime, -1 - SAL : 2092
	0x00001C20 : pushz		119 ( Hour of Function SetTime )	// , SetTime, -1 - SAL : 2095
	0x00001C24 : sta	// , SetTime, -1 - SAL : 2096
	0x00001C26 : addldrzc		47 ( Now )		5	// , SetTime, -1 - SAL : 2097
	0x00001C2C : pushz		120 ( Minute of Function SetTime )	// , SetTime, -1 - SAL : 2100
	0x00001C30 : sta	// , SetTime, -1 - SAL : 2101
	0x00001C32 : ret	// , SetTime, -1 - SAL : 2102
}


FUNCTION : SetWeather()
{
	0x00001C34 : nop	// , SetWeather, -1 - SAL : 2103
	0x00001C36 : popz		121 ( Weather of Function SetWeather )	// , SetWeather, -1 - SAL : 2104
	0x00001C3A : addldrzc		47 ( Now )		6	// , SetWeather, -1 - SAL : 2105
	0x00001C40 : pushz		121 ( Weather of Function SetWeather )	// , SetWeather, -1 - SAL : 2108
	0x00001C44 : sta	// , SetWeather, -1 - SAL : 2109
	0x00001C46 : ret	// , SetWeather, -1 - SAL : 2110
}


FUNCTION : ShadowText()
{
	0x00001C48 : nop	// , ShadowText, -1 - SAL : 1209
	0x00001C4A : popz		85 ( tc of Function ShadowText )	// , ShadowText, -1 - SAL : 1210
	0x00001C4E : popz		84 ( sc of Function ShadowText )	// , ShadowText, -1 - SAL : 1211
	0x00001C52 : popz		83 ( z of Function ShadowText )	// , ShadowText, -1 - SAL : 1212
	0x00001C56 : popz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1213
	0x00001C5A : popz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1214
	0x00001C5E : zseti		86 ( TempString of Function ShadowText )		52 ( Messages )		83 ( z of Function ShadowText )	// , ShadowText, -1 - SAL : 1215
	0x00001C66 : pushz		67 ( TestCount )	// , ShadowText, -1 - SAL : 1216
	0x00001C6A : pushc		700	// , ShadowText, -1 - SAL : 1217
	0x00001C6E : mod	// , ShadowText, -1 - SAL : 1218
	0x00001C70 : pushc		100	// , ShadowText, -1 - SAL : 1219
	0x00001C74 : div	// , ShadowText, -1 - SAL : 1220
	0x00001C76 : pushz		84 ( sc of Function ShadowText )	// , ShadowText, -1 - SAL : 1221
	0x00001C7A : pushc		3	// , ShadowText, -1 - SAL : 1222
	0x00001C7E : pushc		0	// , ShadowText, -1 - SAL : 1223
	0x00001C82 : calls		SetFontType(40)	// , ShadowText, -1 - SAL : 1224
	0x00001C86 : pushc		-1	// , ShadowText, -1 - SAL : 1225
	0x00001C8A : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1226
	0x00001C8E : pushc		1	// , ShadowText, -1 - SAL : 1228
	0x00001C92 : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1229
	0x00001C96 : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1231
	0x00001C9A : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1232
	0x00001C9E : pushc		-1	// , ShadowText, -1 - SAL : 1233
	0x00001CA2 : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1234
	0x00001CA6 : pushz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1236
	0x00001CAA : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1237
	0x00001CAE : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1238
	0x00001CB2 : pushz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1239
	0x00001CB6 : pushc		1	// , ShadowText, -1 - SAL : 1240
	0x00001CBA : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1241
	0x00001CBE : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1243
	0x00001CC2 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1244
	0x00001CC6 : pushz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1245
	0x00001CCA : pushz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1246
	0x00001CCE : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1247
	0x00001CD2 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1248
	0x00001CD6 : pushc		1	// , ShadowText, -1 - SAL : 1249
	0x00001CDA : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1250
	0x00001CDE : pushc		1	// , ShadowText, -1 - SAL : 1252
	0x00001CE2 : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1253
	0x00001CE6 : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1255
	0x00001CEA : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1256
	0x00001CEE : pushc		1	// , ShadowText, -1 - SAL : 1257
	0x00001CF2 : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1258
	0x00001CF6 : pushz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1260
	0x00001CFA : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1261
	0x00001CFE : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1262
	0x00001D02 : pushz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1263
	0x00001D06 : pushc		1	// , ShadowText, -1 - SAL : 1264
	0x00001D0A : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1265
	0x00001D0E : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1267
	0x00001D12 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1268
	0x00001D16 : pushc		-1	// , ShadowText, -1 - SAL : 1269
	0x00001D1A : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1270
	0x00001D1E : pushc		1	// , ShadowText, -1 - SAL : 1272
	0x00001D22 : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1273
	0x00001D26 : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1275
	0x00001D2A : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1276
	0x00001D2E : pushc		1	// , ShadowText, -1 - SAL : 1277
	0x00001D32 : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1278
	0x00001D36 : pushc		1	// , ShadowText, -1 - SAL : 1280
	0x00001D3A : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1281
	0x00001D3E : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1283
	0x00001D42 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1284
	0x00001D46 : pushc		-1	// , ShadowText, -1 - SAL : 1285
	0x00001D4A : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1286
	0x00001D4E : pushc		-1	// , ShadowText, -1 - SAL : 1288
	0x00001D52 : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1289
	0x00001D56 : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1291
	0x00001D5A : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1292
	0x00001D5E : pushz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1293
	0x00001D62 : pushc		-1	// , ShadowText, -1 - SAL : 1294
	0x00001D66 : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1295
	0x00001D6A : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1297
	0x00001D6E : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1298
	0x00001D72 : pushc		1	// , ShadowText, -1 - SAL : 1299
	0x00001D76 : addz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1300
	0x00001D7A : pushc		-1	// , ShadowText, -1 - SAL : 1302
	0x00001D7E : addz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1303
	0x00001D82 : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1305
	0x00001D86 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1306
	0x00001D8A : pushz		67 ( TestCount )	// , ShadowText, -1 - SAL : 1307
	0x00001D8E : pushc		700	// , ShadowText, -1 - SAL : 1308
	0x00001D92 : mod	// , ShadowText, -1 - SAL : 1309
	0x00001D94 : pushc		100	// , ShadowText, -1 - SAL : 1310
	0x00001D98 : div	// , ShadowText, -1 - SAL : 1311
	0x00001D9A : pushz		85 ( tc of Function ShadowText )	// , ShadowText, -1 - SAL : 1312
	0x00001D9E : pushc		3	// , ShadowText, -1 - SAL : 1313
	0x00001DA2 : pushc		0	// , ShadowText, -1 - SAL : 1314
	0x00001DA6 : calls		SetFontType(40)	// , ShadowText, -1 - SAL : 1315
	0x00001DAA : pushz		81 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 1316
	0x00001DAE : pushz		82 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 1317
	0x00001DB2 : pushz		86 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 1318
	0x00001DB6 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 1319
	0x00001DBA : ret	// , ShadowText, -1 - SAL : 1320
}


FUNCTION : ShowTitleContinue()
{
	0x00001DBC : nop	// , ShowTitleContinue, -1 - SAL : 2555
	0x00001DBE : pushc		71	// , ShowTitleContinue, -1 - SAL : 2556
	0x00001DC2 : pushc		61	// , ShowTitleContinue, -1 - SAL : 2557
	0x00001DC6 : pushic		31 ( function_name )		0	// , ShowTitleContinue, -1 - SAL : 2558
	0x00001DCC : CopyImage	// , ShowTitleContinue, -1 - SAL : 2559
	0x00001DCE : pushc		15	// , ShowTitleContinue, -1 - SAL : 2560
	0x00001DD2 : pushc		100	// , ShowTitleContinue, -1 - SAL : 2561
	0x00001DD6 : pushc		139	// , ShowTitleContinue, -1 - SAL : 2562
	0x00001DDA : pushc		1	// , ShowTitleContinue, -1 - SAL : 2563
	0x00001DDE : pushc		0	// , ShowTitleContinue, -1 - SAL : 2564
	0x00001DE2 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2565
	0x00001DE6 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2566
	0x00001DEA : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2567
	0x00001DEC : pushc		166	// , ShowTitleContinue, -1 - SAL : 2568
	0x00001DF0 : pushc		100	// , ShowTitleContinue, -1 - SAL : 2569
	0x00001DF4 : pushc		140	// , ShowTitleContinue, -1 - SAL : 2570
	0x00001DF8 : pushc		1	// , ShowTitleContinue, -1 - SAL : 2571
	0x00001DFC : pushc		0	// , ShowTitleContinue, -1 - SAL : 2572
	0x00001E00 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2573
	0x00001E04 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2574
	0x00001E08 : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2575
	0x00001E0A : pushc		0	// , ShowTitleContinue, -1 - SAL : 2576
	0x00001E0E : calls		SetColor(38)	// , ShowTitleContinue, -1 - SAL : 2577
	0x00001E12 : pushc		167	// , ShowTitleContinue, -1 - SAL : 2578
	0x00001E16 : pushc		111	// , ShowTitleContinue, -1 - SAL : 2579
	0x00001E1A : pushc		15	// , ShowTitleContinue, -1 - SAL : 2580
	0x00001E1E : pushz		64 ( SelectedObject )	// , ShowTitleContinue, -1 - SAL : 2581
	0x00001E22 : mult	// , ShowTitleContinue, -1 - SAL : 2582
	0x00001E24 : add	// , ShowTitleContinue, -1 - SAL : 2583
	0x00001E26 : pushc		223	// , ShowTitleContinue, -1 - SAL : 2584
	0x00001E2A : pushc		122	// , ShowTitleContinue, -1 - SAL : 2585
	0x00001E2E : pushc		15	// , ShowTitleContinue, -1 - SAL : 2586
	0x00001E32 : pushz		64 ( SelectedObject )	// , ShowTitleContinue, -1 - SAL : 2587
	0x00001E36 : mult	// , ShowTitleContinue, -1 - SAL : 2588
	0x00001E38 : add	// , ShowTitleContinue, -1 - SAL : 2589
	0x00001E3A : pushc		1	// , ShowTitleContinue, -1 - SAL : 2590
	0x00001E3E : calls		FillRectEx(71)	// , ShowTitleContinue, -1 - SAL : 2591
	0x00001E42 : pushc		167	// , ShowTitleContinue, -1 - SAL : 2592
	0x00001E46 : pushc		112	// , ShowTitleContinue, -1 - SAL : 2593
	0x00001E4A : pushc		135	// , ShowTitleContinue, -1 - SAL : 2594
	0x00001E4E : pushc		1	// , ShowTitleContinue, -1 - SAL : 2595
	0x00001E52 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2596
	0x00001E56 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2597
	0x00001E5A : pushc		0	// , ShowTitleContinue, -1 - SAL : 2598
	0x00001E5E : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2599
	0x00001E60 : zsetc		125 ( i of Function ShowTitleContinue )		1	// , ShowTitleContinue, -1 - SAL : 2600
	0x00001E66 : pushz		125 ( i of Function ShowTitleContinue )	// , ShowTitleContinue, -1 - SAL : 2601
	0x00001E6A : gejp		6		0x00001EA8	// , ShowTitleContinue, -1 - SAL : 2602
	0x00001E72 : pushc		167	// , ShowTitleContinue, -1 - SAL : 2603
	0x00001E76 : pushc		112	// , ShowTitleContinue, -1 - SAL : 2604
	0x00001E7A : pushc		15	// , ShowTitleContinue, -1 - SAL : 2605
	0x00001E7E : pushz		125 ( i of Function ShowTitleContinue )	// , ShowTitleContinue, -1 - SAL : 2606
	0x00001E82 : mult	// , ShowTitleContinue, -1 - SAL : 2607
	0x00001E84 : add	// , ShowTitleContinue, -1 - SAL : 2608
	0x00001E86 : pushc		136	// , ShowTitleContinue, -1 - SAL : 2609
	0x00001E8A : pushc		1	// , ShowTitleContinue, -1 - SAL : 2610
	0x00001E8E : pushc		0	// , ShowTitleContinue, -1 - SAL : 2611
	0x00001E92 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2612
	0x00001E96 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2613
	0x00001E9A : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2614
	0x00001E9C : incz		125 ( i of Function ShowTitleContinue )		1	// , ShowTitleContinue, -1 - SAL : 2615
	0x00001EA2 : ujp		0x00001E66	// , ShowTitleContinue, -1 - SAL : 2616
	0x00001EA8 : ret	// , ShowTitleContinue, -1 - SAL : 2617
}


FUNCTION : ShowTitleGameInfo()
{
	0x00001EAA : nop	// , ShowTitleGameInfo, -1 - SAL : 2668
	0x00001EAC : pushc		71	// , ShowTitleGameInfo, -1 - SAL : 2669
	0x00001EB0 : pushc		61	// , ShowTitleGameInfo, -1 - SAL : 2670
	0x00001EB4 : pushic		31 ( function_name )		2	// , ShowTitleGameInfo, -1 - SAL : 2671
	0x00001EBA : CopyImage	// , ShowTitleGameInfo, -1 - SAL : 2672
	0x00001EBC : ret	// , ShowTitleGameInfo, -1 - SAL : 2673
}


FUNCTION : ShowTitleOption()
{
	0x00001EBE : nop	// , ShowTitleOption, -1 - SAL : 2618
	0x00001EC0 : pushc		71	// , ShowTitleOption, -1 - SAL : 2619
	0x00001EC4 : pushc		61	// , ShowTitleOption, -1 - SAL : 2620
	0x00001EC8 : pushic		31 ( function_name )		1	// , ShowTitleOption, -1 - SAL : 2621
	0x00001ECE : CopyImage	// , ShowTitleOption, -1 - SAL : 2622
	0x00001ED0 : pushc		15	// , ShowTitleOption, -1 - SAL : 2623
	0x00001ED4 : pushc		100	// , ShowTitleOption, -1 - SAL : 2624
	0x00001ED8 : pushc		138	// , ShowTitleOption, -1 - SAL : 2625
	0x00001EDC : pushc		1	// , ShowTitleOption, -1 - SAL : 2626
	0x00001EE0 : pushc		0	// , ShowTitleOption, -1 - SAL : 2627
	0x00001EE4 : pushc		0	// , ShowTitleOption, -1 - SAL : 2628
	0x00001EE8 : pushc		0	// , ShowTitleOption, -1 - SAL : 2629
	0x00001EEC : CopyImageEx	// , ShowTitleOption, -1 - SAL : 2630
	0x00001EEE : pushz		43 ( OptionAutoSkip )	// , ShowTitleOption, -1 - SAL : 2631
	0x00001EF2 : fjp		0x00001F16	// , ShowTitleOption, -1 - SAL : 2632
	0x00001EF8 : pushc		186	// , ShowTitleOption, -1 - SAL : 2633
	0x00001EFC : pushc		108	// , ShowTitleOption, -1 - SAL : 2634
	0x00001F00 : pushc		137	// , ShowTitleOption, -1 - SAL : 2635
	0x00001F04 : pushc		1	// , ShowTitleOption, -1 - SAL : 2636
	0x00001F08 : pushc		0	// , ShowTitleOption, -1 - SAL : 2637
	0x00001F0C : pushc		0	// , ShowTitleOption, -1 - SAL : 2638
	0x00001F10 : pushc		0	// , ShowTitleOption, -1 - SAL : 2639
	0x00001F14 : CopyImageEx	// , ShowTitleOption, -1 - SAL : 2640
	0x00001F16 : pushz		44 ( OptionSpokeSkip )	// , ShowTitleOption, -1 - SAL : 2641
	0x00001F1A : fjp		0x00001F3E	// , ShowTitleOption, -1 - SAL : 2642
	0x00001F20 : pushc		186	// , ShowTitleOption, -1 - SAL : 2643
	0x00001F24 : pushc		136	// , ShowTitleOption, -1 - SAL : 2644
	0x00001F28 : pushc		137	// , ShowTitleOption, -1 - SAL : 2645
	0x00001F2C : pushc		1	// , ShowTitleOption, -1 - SAL : 2646
	0x00001F30 : pushc		0	// , ShowTitleOption, -1 - SAL : 2647
	0x00001F34 : pushc		0	// , ShowTitleOption, -1 - SAL : 2648
	0x00001F38 : pushc		0	// , ShowTitleOption, -1 - SAL : 2649
	0x00001F3C : CopyImageEx	// , ShowTitleOption, -1 - SAL : 2650
	0x00001F3E : pushc		0	// , ShowTitleOption, -1 - SAL : 2651
	0x00001F42 : calls		SetColor(38)	// , ShowTitleOption, -1 - SAL : 2652
	0x00001F46 : pushc		16	// , ShowTitleOption, -1 - SAL : 2653
	0x00001F4A : pushc		110	// , ShowTitleOption, -1 - SAL : 2654
	0x00001F4E : pushc		28	// , ShowTitleOption, -1 - SAL : 2655
	0x00001F52 : pushz		64 ( SelectedObject )	// , ShowTitleOption, -1 - SAL : 2656
	0x00001F56 : mult	// , ShowTitleOption, -1 - SAL : 2657
	0x00001F58 : add	// , ShowTitleOption, -1 - SAL : 2658
	0x00001F5A : pushc		223	// , ShowTitleOption, -1 - SAL : 2659
	0x00001F5E : pushc		129	// , ShowTitleOption, -1 - SAL : 2660
	0x00001F62 : pushc		28	// , ShowTitleOption, -1 - SAL : 2661
	0x00001F66 : pushz		64 ( SelectedObject )	// , ShowTitleOption, -1 - SAL : 2662
	0x00001F6A : mult	// , ShowTitleOption, -1 - SAL : 2663
	0x00001F6C : add	// , ShowTitleOption, -1 - SAL : 2664
	0x00001F6E : pushc		3	// , ShowTitleOption, -1 - SAL : 2665
	0x00001F72 : calls		FillRectEx(71)	// , ShowTitleOption, -1 - SAL : 2666
	0x00001F76 : ret	// , ShowTitleOption, -1 - SAL : 2667
}


FUNCTION : TEST()
{
	0x00001F78 : nop	// , TEST, -1 - SAL : 2862
	0x00001F7A : zsetc		127 ( i of Function TEST )		150	// , TEST, -1 - SAL : 2863
	0x00001F80 : zsetmi		128 ( TempString of Function TEST )		%%113	// , TEST, -1 - SAL : 2864
	0x00001F86 : pushz		67 ( TestCount )	// , TEST, -1 - SAL : 2865
	0x00001F8A : lejp		1800		0x00001F98	// , TEST, -1 - SAL : 2866
	0x00001F92 : zsetc		67 ( TestCount )		0	// , TEST, -1 - SAL : 2867
	0x00001F98 : pushc		2	// , TEST, -1 - SAL : 2868
	0x00001F9C : pushc		79	// , TEST, -1 - SAL : 2869
	0x00001FA0 : pushc		3	// , TEST, -1 - SAL : 2870
	0x00001FA4 : pushc		0	// , TEST, -1 - SAL : 2871
	0x00001FA8 : calls		SetFontType(40)	// , TEST, -1 - SAL : 2872
	0x00001FAC : pushz		126 ( temp of Function TEST )	// , TEST, -1 - SAL : 2873
	0x00001FB0 : pushmi		%%114	// , TEST, -1 - SAL : 2874
	0x00001FB4 : pushz		67 ( TestCount )	// , TEST, -1 - SAL : 2875
	0x00001FB8 : incz		67 ( TestCount )		1	// , TEST, -1 - SAL : 2876
	0x00001FBE : pushz		68 ( NextKey )	// , TEST, -1 - SAL : 2877
	0x00001FC2 : pushz		57 ( EventPointer )	// , TEST, -1 - SAL : 2878
	0x00001FC6 : calls		MakeStr3(176)	// , TEST, -1 - SAL : 2879
	0x00001FCA : pushc		2	// , TEST, -1 - SAL : 2880
	0x00001FCE : pushc		-30	// , TEST, -1 - SAL : 2881
	0x00001FD2 : pushz		67 ( TestCount )	// , TEST, -1 - SAL : 2882
	0x00001FD6 : pushc		360	// , TEST, -1 - SAL : 2883
	0x00001FDA : mod	// , TEST, -1 - SAL : 2884
	0x00001FDC : add	// , TEST, -1 - SAL : 2885
	0x00001FDE : pushz		126 ( temp of Function TEST )	// , TEST, -1 - SAL : 2886
	0x00001FE2 : calls		DrawStr(85)	// , TEST, -1 - SAL : 2887
	0x00001FE6 : pushz		126 ( temp of Function TEST )	// , TEST, -1 - SAL : 2888
	0x00001FEA : pushmi		%%115	// , TEST, -1 - SAL : 2889
	0x00001FEE : pushz		67 ( TestCount )	// , TEST, -1 - SAL : 2890
	0x00001FF2 : pushc		700	// , TEST, -1 - SAL : 2891
	0x00001FF6 : mod	// , TEST, -1 - SAL : 2892
	0x00001FF8 : pushc		100	// , TEST, -1 - SAL : 2893
	0x00001FFC : div	// , TEST, -1 - SAL : 2894
	0x00001FFE : pushz		56 ( SelectedAnswer )	// , TEST, -1 - SAL : 2895
	0x00002002 : pushic		61 ( Variable )		0	// , TEST, -1 - SAL : 2896
	0x00002008 : calls		MakeStr3(176)	// , TEST, -1 - SAL : 2897
	0x0000200C : pushc		2	// , TEST, -1 - SAL : 2898
	0x00002010 : pushc		109	// , TEST, -1 - SAL : 2899
	0x00002014 : pushc		3	// , TEST, -1 - SAL : 2900
	0x00002018 : pushc		0	// , TEST, -1 - SAL : 2901
	0x0000201C : calls		SetFontType(40)	// , TEST, -1 - SAL : 2902
	0x00002020 : pushc		3	// , TEST, -1 - SAL : 2903
	0x00002024 : pushc		-10	// , TEST, -1 - SAL : 2904
	0x00002028 : pushz		67 ( TestCount )	// , TEST, -1 - SAL : 2905
	0x0000202C : pushc		360	// , TEST, -1 - SAL : 2906
	0x00002030 : mod	// , TEST, -1 - SAL : 2907
	0x00002032 : add	// , TEST, -1 - SAL : 2908
	0x00002034 : pushz		126 ( temp of Function TEST )	// , TEST, -1 - SAL : 2909
	0x00002038 : calls		DrawStr(85)	// , TEST, -1 - SAL : 2910
	0x0000203C : pushz		126 ( temp of Function TEST )	// , TEST, -1 - SAL : 2911
	0x00002040 : pushmi		%%116	// , TEST, -1 - SAL : 2912
	0x00002044 : pushc		1984	// , TEST, -1 - SAL : 2913
	0x00002048 : pushc		12	// , TEST, -1 - SAL : 2914
	0x0000204C : pushc		12	// , TEST, -1 - SAL : 2915
	0x00002050 : call		0x00000A7A	// , TEST, -1 - SAL : 2916
	0x00002056 : pushc		2008	// , TEST, -1 - SAL : 2917
	0x0000205A : pushc		10	// , TEST, -1 - SAL : 2918
	0x0000205E : pushc		11	// , TEST, -1 - SAL : 2919
	0x00002062 : call		0x00000A7A	// , TEST, -1 - SAL : 2920
	0x00002068 : pushc		0	// , TEST, -1 - SAL : 2921
	0x0000206C : calls		MakeStr3(176)	// , TEST, -1 - SAL : 2922
	0x00002070 : pushc		2	// , TEST, -1 - SAL : 2923
	0x00002074 : pushc		100	// , TEST, -1 - SAL : 2924
	0x00002078 : pushz		126 ( temp of Function TEST )	// , TEST, -1 - SAL : 2925
	0x0000207C : calls		DrawStr(85)	// , TEST, -1 - SAL : 2926
	0x00002080 : ret	// , TEST, -1 - SAL : 2927
}


FUNCTION : main()
{
	0x00002082 : nop	// , main, -1 - SAL : 2854
	0x00002084 : call		0x00000080	// , main, -1 - SAL : 2855
	0x0000208A : pushc		20	// , main, -1 - SAL : 2856
	0x0000208E : pushc		1	// , main, -1 - SAL : 2857
	0x00002092 : calls		SetTimer1(150)	// , main, -1 - SAL : 2858
	0x00002096 : pushc		0	// , main, -1 - SAL : 2859
	0x0000209A : call		0x0000008E	// , main, -1 - SAL : 2860
	0x000020A0 : end	// , main, -1 - SAL : 2861
}

====================== SYMBOL TABLE =====================

========================================================
			SYMBOL TABLE

--------------------------------------------------------
	  VALID VAR(STATIC) : 0 - ().swData
	  VALID VAR(STATIC) : 1 - ().swData2
	  VALID VAR(STATIC) : 2 - ().swData3
	  VALID VAR(STATIC) : 3 - ().swData4
	  VALID VAR(STATIC) : 4 - ().swWidth
	  VALID VAR(STATIC) : 5 - ().swHeight
	  VALID VAR(STATIC) : 6 - ().swFrame
	  VALID VAR(STATIC) : 7 - ().swFrame2
	  VALID VAR(STATIC) : 8 - ().swFrame3
	  VALID VAR(STATIC) : 9 - ().swFrame6
	  VALID VAR(STATIC) : 10 - ().swVMver
	  VALID VAR(STATIC) : 11 - ().swModel
	  VALID VAR(STATIC) : 12 - ().swSmsRcvBuf
	  VALID VAR(STATIC) : 13 - ().swRsRcvBuf
	  VALID VAR(STATIC) : 14 - ().swRcvBuf
	  VALID VAR(STATIC) : 15 - ().swReserved1
	  VALID VAR(STATIC) : 16 - ().swReserved2
	  VALID VAR(STATIC) : 17 - ().swReserved3
	  VALID VAR(STATIC) : 18 - ().swReserved4
	  VALID VAR(STATIC) : 19 - ().swSbuf
	  VALID VAR(STATIC) : 20 - ().talk_sup
	  VALID VAR(STATIC) : 21 - ().talk_name
	  VALID VAR(STATIC) : 22 - ().talk_ok
	  VALID VAR(STATIC) : 23 - ().talk_main
	  VALID VAR(STATIC) : 24 - ().talk_sub
	  VALID VAR(STATIC) : 25 - ().talk_sel
	  VALID VAR(STATIC) : 26 - ().menu
	  VALID VAR(STATIC) : 27 - ().title_back_title
	  VALID VAR(STATIC) : 28 - ().title_back_menu
	  VALID VAR(STATIC) : 29 - ().title_menu
	  VALID VAR(STATIC) : 30 - ().function_window
	  VALID VAR(STATIC) : 31 - ().function_name
	  VALID VAR(STATIC) : 32 - ().load_saved
	  VALID VAR(STATIC) : 33 - ().load_empty
	  VALID VAR(STATIC) : 34 - ().function_check
	  VALID VAR(STATIC) : 35 - ().function_option
	  VALID VAR(STATIC) : 36 - ().function_load_left
	  VALID VAR(STATIC) : 37 - ().function_load_right
	  VALID VAR(STATIC) : 38 - ().function_ok
	  VALID VAR(STATIC) : 39 - ().function_crl
	  VALID VAR(STATIC) : 40 - ().bg
	  VALID VAR(STATIC) : 41 - ().chara
	  VALID VAR(STATIC) : 42 - ().MONTH
	  VALID VAR(STATIC) : 43 - ().OptionAutoSkip
	  VALID VAR(STATIC) : 44 - ().OptionSpokeSkip
	  VALID VAR(STATIC) : 45 - ().WEATHER
	  VALID VAR(STATIC) : 46 - ().Me
	  VALID VAR(STATIC) : 47 - ().Now
	  VALID VAR(STATIC) : 48 - ().They
	  VALID VAR(STATIC) : 49 - ().Background
	  VALID VAR(STATIC) : 50 - ().BackChara
	  VALID VAR(STATIC) : 51 - ().Names
	  VALID VAR(STATIC) : 52 - ().Messages
	  VALID VAR(STATIC) : 53 - ().SelectMessages
	  VALID VAR(STATIC) : 54 - ().EventLine
	  VALID VAR(STATIC) : 55 - ().TESTIMG
	  VALID VAR(STATIC) : 56 - ().SelectedAnswer
	  VALID VAR(STATIC) : 57 - ().EventPointer
	  VALID VAR(STATIC) : 58 - ().CurrentName
	  VALID VAR(STATIC) : 59 - ().NamePosition
	  VALID VAR(STATIC) : 60 - ().EffectFrame
	  VALID VAR(STATIC) : 61 - ().Variable
	  VALID VAR(STATIC) : 62 - ().SelectedTitleMenu
	  VALID VAR(STATIC) : 63 - ().SelectedMenu
	  VALID VAR(STATIC) : 64 - ().SelectedObject
	  VALID VAR(STATIC) : 65 - ().PrologueEventPointer
	  VALID VAR(STATIC) : 66 - ().PrologueEventList
	  VALID VAR(STATIC) : 67 - ().TestCount
	  VALID VAR(STATIC) : 68 - ().NextKey
	  VALID VAR(STATIC) : 69 - ().GameMode
	  VALID VAR(STATIC) : 70 - GetTotalDay().Year
	  VALID VAR(STATIC) : 71 - GetTotalDay().Month
	  VALID VAR(STATIC) : 72 - GetTotalDay().Day
	  VALID VAR(STATIC) : 73 - GetTotalDay().Total
	  VALID VAR(STATIC) : 74 - GetTotalDay().i
	  VALID VAR(STATIC) : 75 - GetWeek().Year
	  VALID VAR(STATIC) : 76 - GetWeek().Month
	  VALID VAR(STATIC) : 77 - GetWeek().Day
	  VALID VAR(STATIC) : 78 - ScreenEffect().Type
	  VALID VAR(STATIC) : 79 - ScreenEffect().Count
	  VALID VAR(STATIC) : 80 - ScreenEffect().Imgnum
	  VALID VAR(STATIC) : 81 - ShadowText().j
	  VALID VAR(STATIC) : 82 - ShadowText().i
	  VALID VAR(STATIC) : 83 - ShadowText().z
	  VALID VAR(STATIC) : 84 - ShadowText().sc
	  VALID VAR(STATIC) : 85 - ShadowText().tc
	  VALID VAR(STATIC) : 86 - ShadowText().TempString
	  VALID VAR(STATIC) : 87 - DrawBackground().i
	  VALID VAR(STATIC) : 88 - DrawBackground().temp
	  VALID VAR(STATIC) : 89 - DrawInterface().TempString
	  VALID VAR(STATIC) : 90 - DrawMessages().MessageNumber
	  VALID VAR(STATIC) : 91 - DrawMessages().TempString
	  VALID VAR(STATIC) : 92 - DrawMessages().Length
	  VALID VAR(STATIC) : 93 - DrawMessages().i
	  VALID VAR(STATIC) : 94 - DrawMessages().PosNameY
	  VALID VAR(STATIC) : 95 - DrawQuestion().Value
	  VALID VAR(STATIC) : 96 - DrawQuestion().MsgCount
	  VALID VAR(STATIC) : 97 - DrawQuestion().Select1
	  VALID VAR(STATIC) : 98 - DrawQuestion().Select2
	  VALID VAR(STATIC) : 99 - DrawQuestion().Select3
	  VALID VAR(STATIC) : 100 - DrawQuestion().Select4
	  VALID VAR(STATIC) : 101 - DrawQuestion().i
	  VALID VAR(STATIC) : 102 - DrawQuestion().Temp
	  VALID VAR(STATIC) : 103 - SetCurrentName().NameNumber
	  VALID VAR(STATIC) : 104 - SetCurrentName().Position
	  VALID VAR(STATIC) : 105 - IfEqual().Value1
	  VALID VAR(STATIC) : 106 - IfEqual().Value2
	  VALID VAR(STATIC) : 107 - IfEqual().ElseCount
	  VALID VAR(STATIC) : 108 - ElseEqual().Value1
	  VALID VAR(STATIC) : 109 - ElseEqual().Value2
	  VALID VAR(STATIC) : 110 - ElseEqual().IfCount
	  VALID VAR(STATIC) : 111 - SetBackground().Layer
	  VALID VAR(STATIC) : 112 - SetBackground().ImageNumber
	  VALID VAR(STATIC) : 113 - SetBackground().Effect
	  VALID VAR(STATIC) : 114 - SetChara().Layer
	  VALID VAR(STATIC) : 115 - SetChara().ImageNumber
	  VALID VAR(STATIC) : 116 - SetDate().Year
	  VALID VAR(STATIC) : 117 - SetDate().Month
	  VALID VAR(STATIC) : 118 - SetDate().Day
	  VALID VAR(STATIC) : 119 - SetTime().Hour
	  VALID VAR(STATIC) : 120 - SetTime().Minute
	  VALID VAR(STATIC) : 121 - SetWeather().Weather
	  VALID VAR(STATIC) : 122 - PassTime().Element
	  VALID VAR(STATIC) : 123 - PassTime().Count
	  VALID VAR(STATIC) : 124 - PassTime().TempCount
	  VALID VAR(STATIC) : 125 - ShowTitleContinue().i
	  VALID VAR(STATIC) : 126 - TEST().temp
	  VALID VAR(STATIC) : 127 - TEST().i
	  VALID VAR(STATIC) : 128 - TEST().TempString
	  VALID VAR(STATIC) : 129 - ChangeGameMode().Mode
========================================================

============================== SYMBOL POOL ==============================
0  th SYMBOL POOL[0x000024B4] : Real Offset 0x000024B4
1  th SYMBOL POOL[0x000024B8] : Real Offset 0x000024B8
2  th SYMBOL POOL[0x000024BC] : Real Offset 0x000024BC
3  th SYMBOL POOL[0x000024C0] : Real Offset 0x000024C0
4  th SYMBOL POOL[0x000024C4] : Real Offset 0x000024C4
5  th SYMBOL POOL[0x000024C8] : Real Offset 0x000024C8
6  th SYMBOL POOL[0x000024CC] : Real Offset 0x000024CC
7  th SYMBOL POOL[0x000024D0] : Real Offset 0x000024D0
8  th SYMBOL POOL[0x000024D4] : Real Offset 0x000024D4
9  th SYMBOL POOL[0x000024D8] : Real Offset 0x000024D8
10 th SYMBOL POOL[0x000024DC] : Real Offset 0x000024DC
11 th SYMBOL POOL[0x000024E8] : Real Offset 0x000024E8
12 th SYMBOL POOL[0x00002508] : Real Offset 0x00002508
13 th SYMBOL POOL[0x000025AC] : Real Offset 0x000025AC
14 th SYMBOL POOL[0x000027AC] : Real Offset 0x000027AC
15 th SYMBOL POOL[0x00002BAC] : Real Offset 0x00002BAC
16 th SYMBOL POOL[0x00002BB0] : Real Offset 0x00002BB0
17 th SYMBOL POOL[0x00002BB4] : Real Offset 0x00002BB4
18 th SYMBOL POOL[0x00002BB8] : Real Offset 0x00002BB8
19 th SYMBOL POOL[0x00002BBC] : Real Offset 0x00002BBC
20 th SYMBOL POOL[0x00002BC0] : Real Offset 0x00002BC0
21 th SYMBOL POOL[0x00002BC4] : Real Offset 0x00002BC4
22 th SYMBOL POOL[0x00002BC8] : Real Offset 0x00002BC8
23 th SYMBOL POOL[0x00002BCC] : Real Offset 0x00002BCC
24 th SYMBOL POOL[0x00002BD0] : Real Offset 0x00002BD0
25 th SYMBOL POOL[0x00002BD4] : Real Offset 0x00002BD4
26 th SYMBOL POOL[0x00002BD8] : Real Offset 0x00002BD8
27 th SYMBOL POOL[0x00002BDC] : Real Offset 0x00002BDC
28 th SYMBOL POOL[0x00002BE0] : Real Offset 0x00002BE0
29 th SYMBOL POOL[0x00002BE4] : Real Offset 0x00002BE4
30 th SYMBOL POOL[0x00002BF8] : Real Offset 0x00002BF8
31 th SYMBOL POOL[0x00002BFC] : Real Offset 0x00002BFC
32 th SYMBOL POOL[0x00002C08] : Real Offset 0x00002C08
33 th SYMBOL POOL[0x00002C0C] : Real Offset 0x00002C0C
34 th SYMBOL POOL[0x00002C10] : Real Offset 0x00002C10
35 th SYMBOL POOL[0x00002C14] : Real Offset 0x00002C14
36 th SYMBOL POOL[0x00002C18] : Real Offset 0x00002C18
37 th SYMBOL POOL[0x00002C1C] : Real Offset 0x00002C1C
38 th SYMBOL POOL[0x00002C20] : Real Offset 0x00002C20
39 th SYMBOL POOL[0x00002C24] : Real Offset 0x00002C24
40 th SYMBOL POOL[0x00002C28] : Real Offset 0x00002C28
41 th SYMBOL POOL[0x00002C3C] : Real Offset 0x00002C3C
42 th SYMBOL POOL[0x00002C44] : Real Offset 0x00002C44
43 th SYMBOL POOL[0x00002C74] : Real Offset 0x00002C74
44 th SYMBOL POOL[0x00002C78] : Real Offset 0x00002C78
45 th SYMBOL POOL[0x00002C7C] : Real Offset 0x00002C7C
46 th SYMBOL POOL[0x00002C90] : Real Offset 0x00002C90
47 th SYMBOL POOL[0x00002C98] : Real Offset 0x00002C98
48 th SYMBOL POOL[0x00002CB4] : Real Offset 0x00002CB4
49 th SYMBOL POOL[0x00002CCC] : Real Offset 0x00002CCC
50 th SYMBOL POOL[0x00002CD4] : Real Offset 0x00002CD4
51 th SYMBOL POOL[0x00002CE0] : Real Offset 0x00002CE0
52 th SYMBOL POOL[0x00002CFC] : Real Offset 0x00002CFC
53 th SYMBOL POOL[0x00002E60] : Real Offset 0x00002E60
54 th SYMBOL POOL[0x00002E70] : Real Offset 0x00002E70
55 th SYMBOL POOL[0x0000302C] : Real Offset 0x0000302C
56 th SYMBOL POOL[0x00003034] : Real Offset 0x00003034
57 th SYMBOL POOL[0x00003038] : Real Offset 0x00003038
58 th SYMBOL POOL[0x0000303C] : Real Offset 0x0000303C
59 th SYMBOL POOL[0x00003040] : Real Offset 0x00003040
60 th SYMBOL POOL[0x00003044] : Real Offset 0x00003044
61 th SYMBOL POOL[0x00003048] : Real Offset 0x00003048
62 th SYMBOL POOL[0x00003110] : Real Offset 0x00003110
63 th SYMBOL POOL[0x00003114] : Real Offset 0x00003114
64 th SYMBOL POOL[0x00003118] : Real Offset 0x00003118
65 th SYMBOL POOL[0x0000311C] : Real Offset 0x0000311C
66 th SYMBOL POOL[0x00003120] : Real Offset 0x00003120
67 th SYMBOL POOL[0x000037AC] : Real Offset 0x000037AC
68 th SYMBOL POOL[0x000037B0] : Real Offset 0x000037B0
69 th SYMBOL POOL[0x000037B4] : Real Offset 0x000037B4
70 th SYMBOL POOL[0x000037B8] : Real Offset 0x000037B8
71 th SYMBOL POOL[0x000037BC] : Real Offset 0x000037BC
72 th SYMBOL POOL[0x000037C0] : Real Offset 0x000037C0
73 th SYMBOL POOL[0x000037C4] : Real Offset 0x000037C4
74 th SYMBOL POOL[0x000037C8] : Real Offset 0x000037C8
75 th SYMBOL POOL[0x000037CC] : Real Offset 0x000037CC
76 th SYMBOL POOL[0x000037D0] : Real Offset 0x000037D0
77 th SYMBOL POOL[0x000037D4] : Real Offset 0x000037D4
78 th SYMBOL POOL[0x000037D8] : Real Offset 0x000037D8
79 th SYMBOL POOL[0x000037DC] : Real Offset 0x000037DC
80 th SYMBOL POOL[0x000037E0] : Real Offset 0x000037E0
81 th SYMBOL POOL[0x000037E4] : Real Offset 0x000037E4
82 th SYMBOL POOL[0x000037E8] : Real Offset 0x000037E8
83 th SYMBOL POOL[0x000037EC] : Real Offset 0x000037EC
84 th SYMBOL POOL[0x000037F0] : Real Offset 0x000037F0
85 th SYMBOL POOL[0x000037F4] : Real Offset 0x000037F4
86 th SYMBOL POOL[0x000037F8] : Real Offset 0x000037F8
87 th SYMBOL POOL[0x000037FC] : Real Offset 0x000037FC
88 th SYMBOL POOL[0x00003800] : Real Offset 0x00003800
89 th SYMBOL POOL[0x00003804] : Real Offset 0x00003804
90 th SYMBOL POOL[0x00003808] : Real Offset 0x00003808
91 th SYMBOL POOL[0x0000380C] : Real Offset 0x0000380C
92 th SYMBOL POOL[0x00003810] : Real Offset 0x00003810
93 th SYMBOL POOL[0x00003814] : Real Offset 0x00003814
94 th SYMBOL POOL[0x00003818] : Real Offset 0x00003818
95 th SYMBOL POOL[0x0000381C] : Real Offset 0x0000381C
96 th SYMBOL POOL[0x00003820] : Real Offset 0x00003820
97 th SYMBOL POOL[0x00003824] : Real Offset 0x00003824
98 th SYMBOL POOL[0x00003828] : Real Offset 0x00003828
99 th SYMBOL POOL[0x0000382C] : Real Offset 0x0000382C
100th SYMBOL POOL[0x00003830] : Real Offset 0x00003830
101th SYMBOL POOL[0x00003834] : Real Offset 0x00003834
102th SYMBOL POOL[0x00003838] : Real Offset 0x00003838
103th SYMBOL POOL[0x0000383C] : Real Offset 0x0000383C
104th SYMBOL POOL[0x00003840] : Real Offset 0x00003840
105th SYMBOL POOL[0x00003844] : Real Offset 0x00003844
106th SYMBOL POOL[0x00003848] : Real Offset 0x00003848
107th SYMBOL POOL[0x0000384C] : Real Offset 0x0000384C
108th SYMBOL POOL[0x00003850] : Real Offset 0x00003850
109th SYMBOL POOL[0x00003854] : Real Offset 0x00003854
110th SYMBOL POOL[0x00003858] : Real Offset 0x00003858
111th SYMBOL POOL[0x0000385C] : Real Offset 0x0000385C
112th SYMBOL POOL[0x00003860] : Real Offset 0x00003860
113th SYMBOL POOL[0x00003864] : Real Offset 0x00003864
114th SYMBOL POOL[0x00003868] : Real Offset 0x00003868
115th SYMBOL POOL[0x0000386C] : Real Offset 0x0000386C
116th SYMBOL POOL[0x00003870] : Real Offset 0x00003870
117th SYMBOL POOL[0x00003874] : Real Offset 0x00003874
118th SYMBOL POOL[0x00003878] : Real Offset 0x00003878
119th SYMBOL POOL[0x0000387C] : Real Offset 0x0000387C
120th SYMBOL POOL[0x00003880] : Real Offset 0x00003880
121th SYMBOL POOL[0x00003884] : Real Offset 0x00003884
122th SYMBOL POOL[0x00003888] : Real Offset 0x00003888
123th SYMBOL POOL[0x0000388C] : Real Offset 0x0000388C
124th SYMBOL POOL[0x00003890] : Real Offset 0x00003890
125th SYMBOL POOL[0x00003894] : Real Offset 0x00003894
126th SYMBOL POOL[0x00003898] : Real Offset 0x00003898
127th SYMBOL POOL[0x0000389C] : Real Offset 0x0000389C
128th SYMBOL POOL[0x000038A0] : Real Offset 0x000038A0
129th SYMBOL POOL[0x000038A4] : Real Offset 0x000038A4
