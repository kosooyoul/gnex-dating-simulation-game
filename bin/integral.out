STATIC VAR.	swData           of SYSTEM          0       1       
STATIC VAR.	swData2          of SYSTEM          1       1       
STATIC VAR.	swData3          of SYSTEM          2       1       
STATIC VAR.	swData4          of SYSTEM          3       1       
STATIC VAR.	swWidth          of SYSTEM          4       1       
STATIC VAR.	swHeight         of SYSTEM          5       1       
STATIC VAR.	swFrame          of SYSTEM          6       1       
STATIC VAR.	swFrame2         of SYSTEM          7       1       
STATIC VAR.	swFrame3         of SYSTEM          8       1       
STATIC VAR.	swFrame6         of SYSTEM          9       1       
STATIC VAR.	swVMver          of SYSTEM          10      3       0       
STATIC VAR.	swModel          of SYSTEM          11      8       0       
STATIC VAR.	swSmsRcvBuf      of SYSTEM          12      41      0       
STATIC VAR.	swRsRcvBuf       of SYSTEM          13      128     0       
STATIC VAR.	swRcvBuf         of SYSTEM          14      256     0       
STATIC VAR.	swReserved1      of SYSTEM          15      1       
STATIC VAR.	swReserved2      of SYSTEM          16      1       
STATIC VAR.	swReserved3      of SYSTEM          17      1       
STATIC VAR.	swReserved4      of SYSTEM          18      1       
STATIC VAR.	swSbuf           of SYSTEM          19      1       
STATIC VAR.	talk_sup         of SYSTEM          20      45      1       
STATIC VAR.	talk_name        of SYSTEM          21      46      1       
STATIC VAR.	talk_ok          of SYSTEM          22      47      1       
STATIC VAR.	talk_main        of SYSTEM          23      48      1       
STATIC VAR.	talk_sub         of SYSTEM          24      49      1       
STATIC VAR.	talk_sel         of SYSTEM          25      50      1       
STATIC VAR.	menu             of SYSTEM          26      51      1       
STATIC VAR.	title_back_title of SYSTEM          27      52      1       
STATIC VAR.	title_back_menu  of SYSTEM          28      53      1       
STATIC VAR.	title_menu       of SYSTEM          29      5       
 54          55          56          57          58         
STATIC VAR.	function_window  of SYSTEM          30      59      1       
STATIC VAR.	function_name    of SYSTEM          31      3       
 60          61          62         
STATIC VAR.	load_saved       of SYSTEM          32      63      1       
STATIC VAR.	load_empty       of SYSTEM          33      64      1       
STATIC VAR.	function_check   of SYSTEM          34      65      1       
STATIC VAR.	function_option  of SYSTEM          35      66      1       
STATIC VAR.	function_load_left of SYSTEM          36      67      1       
STATIC VAR.	function_load_right of SYSTEM          37      68      1       
STATIC VAR.	function_ok      of SYSTEM          38      69      1       
STATIC VAR.	function_crl     of SYSTEM          39      70      1       
STATIC VAR.	bg               of SYSTEM          40      5       
 71          72          73          74          75         
STATIC VAR.	chara            of SYSTEM          41      2       
 76          77         
STATIC VAR.	MONTH            of SYSTEM          42      12      
 31          28          31          30          31          30          31          31         
 30          31          30          31         
STATIC VAR.	OptionAutoSkip   of SYSTEM          43      0       0       
STATIC VAR.	OptionSpokeSkip  of SYSTEM          44      0       0       
STATIC VAR.	WEATHER          of SYSTEM          45      5       
0            1           2           3           4          
STATIC VAR.	Me               of SYSTEM          46      2       0       
STATIC VAR.	Now              of SYSTEM          47      7       0       
STATIC VAR.	They             of SYSTEM          48      6       0       
STATIC VAR.	Background       of SYSTEM          49      2       2       
-1          -1          
STATIC VAR.	BackChara        of SYSTEM          50      3       3       
-1          -1          -1          
STATIC VAR.	Names            of SYSTEM          51      5       
 13          14          15          16          17         
STATIC VAR.	Messages         of SYSTEM          52      19      
 18          19          20          21          22          23          24          25         
 26          27          28          29          30          31          32          33         
 34          35          36         
STATIC VAR.	SelectMessages   of SYSTEM          53      4       
 37          38          39          40         
STATIC VAR.	EventLine        of SYSTEM          54      111     
 2          -1          0           0            15          5          0           0           
0            2           1           1           6          0           0           0           
 4           1          0            4          0            1           2           3          
 2          -1          0           0            18          2           1           1          
 3          0           0            2          0            5           3           1          
0            2          0            6           3           2          0            2          
0            7           3           3          0            2          0            8          
 6          0           -1           2          -1          0           0            16         
 5          0            1           1           2          -1          0           0           
 9           2          0           0           0            10          2          -1          
0           0            17          5          0            2           2          0           
 11          2           3           1           6          0            1          0           
 12          2          0           0           0            13          2          -1          
0            6          0           -1          0            14         -1          
STATIC VAR.	SelectedAnswer   of SYSTEM          55      0       0       
STATIC VAR.	EventPointer     of SYSTEM          56      0       0       
STATIC VAR.	CurrentName      of SYSTEM          57      1       
STATIC VAR.	NamePosition     of SYSTEM          58      0       0       
STATIC VAR.	EffectFrame      of SYSTEM          59      0       0       
STATIC VAR.	Variable         of SYSTEM          60      50      0       
STATIC VAR.	SelectedTitleMenu of SYSTEM          61      0       0       
STATIC VAR.	SelectedMenu     of SYSTEM          62      0       0       
STATIC VAR.	SelectedObject   of SYSTEM          63      0       0       
STATIC VAR.	PrologueEventPointer of SYSTEM          64      0       0       
STATIC VAR.	PrologueEventList of SYSTEM          65      17      
 5          0            3          0           0           0           0            1          
 5          0            4           2          0            2          0            3          
-1          
STATIC VAR.	TestCount        of SYSTEM          66      0       0       
STATIC VAR.	NextKey          of SYSTEM          67      1       
STATIC VAR.	GameMode         of SYSTEM          68      0       0       
STATIC VAR.	Year             of GetTotalDay                     69      1       
STATIC VAR.	Month            of GetTotalDay                     70      1       
STATIC VAR.	Day              of GetTotalDay                     71      1       
STATIC VAR.	Total            of GetTotalDay                     72      1       
STATIC VAR.	i                of GetTotalDay                     73      1       
STATIC VAR.	Year             of GetWeek                         74      1       
STATIC VAR.	Month            of GetWeek                         75      1       
STATIC VAR.	Day              of GetWeek                         76      1       
STATIC VAR.	Type             of ScreenEffect                    77      1       
STATIC VAR.	Count            of ScreenEffect                    78      1       
STATIC VAR.	Imgnum           of ScreenEffect                    79      1       
STATIC VAR.	j                of ShadowText                      80      1       
STATIC VAR.	i                of ShadowText                      81      1       
STATIC VAR.	z                of ShadowText                      82      1       
STATIC VAR.	sc               of ShadowText                      83      1       
STATIC VAR.	tc               of ShadowText                      84      1       
STATIC VAR.	TempString       of ShadowText                      85      78      1       
STATIC VAR.	i                of DrawBackground                  86      1       
STATIC VAR.	temp             of DrawBackground                  87      79      1       
STATIC VAR.	TempString       of DrawInterface                   88      80      1       
STATIC VAR.	MessageNumber    of DrawMessages                    89      1       
STATIC VAR.	TempString       of DrawMessages                    90      81      1       
STATIC VAR.	Length           of DrawMessages                    91      1       
STATIC VAR.	i                of DrawMessages                    92      1       
STATIC VAR.	PosNameY         of DrawMessages                    93      1       
STATIC VAR.	Value            of DrawQuestion                    94      1       
STATIC VAR.	MsgCount         of DrawQuestion                    95      1       
STATIC VAR.	Select1          of DrawQuestion                    96      1       
STATIC VAR.	Select2          of DrawQuestion                    97      1       
STATIC VAR.	Select3          of DrawQuestion                    98      1       
STATIC VAR.	Select4          of DrawQuestion                    99      1       
STATIC VAR.	i                of DrawQuestion                    100     1       
STATIC VAR.	Temp             of DrawQuestion                    101     82      1       
STATIC VAR.	NameNumber       of SetCurrentName                  102     1       
STATIC VAR.	Position         of SetCurrentName                  103     1       
STATIC VAR.	Value1           of IfEqual                         104     1       
STATIC VAR.	Value2           of IfEqual                         105     1       
STATIC VAR.	ElseCount        of IfEqual                         106     1       
STATIC VAR.	Value1           of ElseEqual                       107     1       
STATIC VAR.	Value2           of ElseEqual                       108     1       
STATIC VAR.	IfCount          of ElseEqual                       109     1       
STATIC VAR.	Layer            of SetBackground                   110     1       
STATIC VAR.	ImageNumber      of SetBackground                   111     1       
STATIC VAR.	Effect           of SetBackground                   112     1       
STATIC VAR.	Layer            of SetChara                        113     1       
STATIC VAR.	ImageNumber      of SetChara                        114     1       
STATIC VAR.	Year             of SetDate                         115     1       
STATIC VAR.	Month            of SetDate                         116     1       
STATIC VAR.	Day              of SetDate                         117     1       
STATIC VAR.	Hour             of SetTime                         118     1       
STATIC VAR.	Minute           of SetTime                         119     1       
STATIC VAR.	Weather          of SetWeather                      120     1       
STATIC VAR.	Element          of PassTime                        121     1       
STATIC VAR.	Count            of PassTime                        122     1       
STATIC VAR.	TempCount        of PassTime                        123     1       
STATIC VAR.	i                of ShowTitleContinue               124     1       
STATIC VAR.	temp             of TEST                            125     83      1       
STATIC VAR.	i                of TEST                            126     1       
STATIC VAR.	TempString       of TEST                            127     41      1       
STATIC VAR.	Mode             of ChangeGameMode                  128     1       
FUNCTION	GetTotalDay      has 3     args.
FUNCTION	GetWeek          has 3     args.
FUNCTION	ScreenEffect     has 3     args.
FUNCTION	ShadowText       has 5     args.
FUNCTION	InitNature       has 0     args.
FUNCTION	InitEvent        has 0     args.
FUNCTION	DrawBackground   has 0     args.
FUNCTION	DrawInterface    has 0     args.
FUNCTION	RunMainPlay      has 0     args.
FUNCTION	RunEventLine     has 0     args.
FUNCTION	DrawMessages     has 1     args.
FUNCTION	DrawQuestion     has 6     args.
FUNCTION	SetCurrentName   has 2     args.
FUNCTION	IfEqual          has 3     args.
FUNCTION	ElseEqual        has 3     args.
FUNCTION	SetBackground    has 3     args.
FUNCTION	SetChara         has 2     args.
FUNCTION	SetDate          has 3     args.
FUNCTION	SetTime          has 2     args.
FUNCTION	SetWeather       has 1     args.
FUNCTION	PassTime         has 2     args.
FUNCTION	RunTitle         has 0     args.
FUNCTION	DrawTitle        has 0     args.
FUNCTION	SelectTitleMenu  has 0     args.
FUNCTION	ShowTitleContinue has 0     args.
FUNCTION	ShowTitleOption  has 0     args.
FUNCTION	ShowTitleGameInfo has 0     args.
FUNCTION	RunPrologue      has 0     args.
FUNCTION	RunPrologueEvent has 0     args.
FUNCTION	TEST             has 0     args.
FUNCTION	EVENT_TIMEOUT    has 0     args.
FUNCTION	EVENT_KEYPRESS   has 0     args.
FUNCTION	ChangeGameMode   has 1     args.
MEDIA		%%0     has [ 0 0 0 5 ].
MEDIA		%%1     has [ 1 1 0 5 ].
MEDIA		%%2     has [ 2 2 0 3 ].
MEDIA		%%3     has [ 3 3 0 3 ].
MEDIA		%%4     has [ 4 4 0 5 ].
MEDIA		%%5     has [ 5 5 0 7 ].
MEDIA		%%6     has [ 6 6 0 7 ].
MEDIA		%%7     has [ 7 7 0 7 ].
MEDIA		%%8     has [ 8 8 0 7 ].
MEDIA		%%9     has [ 9 9 0 7 ].
MEDIA		%%10    has [ 10 10 0 7 ].
MEDIA		%%11    has [ 11 11 0 3 ].
MEDIA		%%12    has [ 12 12 0 6 ].
MEDIA		%%13    has [ 13 13 0 5 ].
MEDIA		%%14    has [ 14 14 0 5 ].
MEDIA		%%15    has [ 15 15 0 7 ].
MEDIA		%%16    has [ 16 16 0 5 ].
MEDIA		%%17    has [ 17 17 0 5 ].
MEDIA		%%18    has [ 18 18 0 16 ].
MEDIA		%%19    has [ 19 19 0 25 ].
MEDIA		%%20    has [ 20 20 0 17 ].
MEDIA		%%21    has [ 21 21 0 39 ].
MEDIA		%%22    has [ 22 22 0 53 ].
MEDIA		%%23    has [ 23 23 0 24 ].
MEDIA		%%24    has [ 24 24 0 68 ].
MEDIA		%%25    has [ 25 25 0 44 ].
MEDIA		%%26    has [ 26 26 0 25 ].
MEDIA		%%27    has [ 27 27 0 35 ].
MEDIA		%%28    has [ 28 28 0 121 ].
MEDIA		%%29    has [ 29 29 0 28 ].
MEDIA		%%30    has [ 30 30 0 33 ].
MEDIA		%%31    has [ 31 31 0 19 ].
MEDIA		%%32    has [ 32 32 0 84 ].
MEDIA		%%33    has [ 33 33 0 18 ].
MEDIA		%%34    has [ 34 34 0 18 ].
MEDIA		%%35    has [ 35 35 0 18 ].
MEDIA		%%36    has [ 36 36 0 31 ].
MEDIA		%%37    has [ 37 37 0 30 ].
MEDIA		%%38    has [ 38 38 0 29 ].
MEDIA		%%39    has [ 39 39 0 19 ].
MEDIA		%%40    has [ 40 40 0 30 ].
MEDIA		%%41    has [ 41 41 0 27 ].
MEDIA		%%42    has [ 42 42 0 36 ].
MEDIA		%%43    has [ 43 43 0 43 ].
MEDIA		%%44    has [ 44 44 0 13 ].
MEDIA		%%45    has [ 45 45 1 5 ].
MEDIA		%%46    has [ 46 46 1 5 ].
MEDIA		%%47    has [ 47 47 1 5 ].
MEDIA		%%48    has [ 48 48 1 5 ].
MEDIA		%%49    has [ 49 49 1 5 ].
MEDIA		%%50    has [ 50 50 1 5 ].
MEDIA		%%51    has [ 51 51 1 5 ].
MEDIA		%%52    has [ 52 52 1 5 ].
MEDIA		%%53    has [ 53 53 1 5 ].
MEDIA		%%54    has [ 54 54 1 5 ].
MEDIA		%%55    has [ 55 55 1 5 ].
MEDIA		%%56    has [ 56 56 1 5 ].
MEDIA		%%57    has [ 57 57 1 5 ].
MEDIA		%%58    has [ 58 58 1 5 ].
MEDIA		%%59    has [ 59 59 1 5 ].
MEDIA		%%60    has [ 60 60 1 5 ].
MEDIA		%%61    has [ 61 61 1 5 ].
MEDIA		%%62    has [ 62 62 1 5 ].
MEDIA		%%63    has [ 63 63 1 5 ].
MEDIA		%%64    has [ 64 64 1 5 ].
MEDIA		%%65    has [ 65 65 1 5 ].
MEDIA		%%66    has [ 66 66 1 5 ].
MEDIA		%%67    has [ 67 67 1 5 ].
MEDIA		%%68    has [ 68 68 1 5 ].
MEDIA		%%69    has [ 69 69 1 5 ].
MEDIA		%%70    has [ 70 70 1 5 ].
MEDIA		%%71    has [ 71 71 1 5 ].
MEDIA		%%72    has [ 72 72 1 5 ].
MEDIA		%%73    has [ 73 73 1 5 ].
MEDIA		%%74    has [ 74 74 1 5 ].
MEDIA		%%75    has [ 75 75 1 5 ].
MEDIA		%%76    has [ 76 76 1 5 ].
MEDIA		%%77    has [ 77 77 1 5 ].
MEDIA		%%78    has [ 78 78 0 0 ].
MEDIA		%%79    has [ 79 79 0 0 ].
MEDIA		%%80    has [ 80 80 0 0 ].
MEDIA		%%81    has [ 81 81 0 0 ].
MEDIA		%%82    has [ 82 82 0 0 ].
MEDIA		%%83    has [ 83 83 0 0 ].
MEDIA		%%84    has [ 84 84 0 0 ].
CODESIZE	14       Bytes in $init           
LABEL		$$0              of GetTotalDay     
LABEL		$$5              of GetTotalDay     
LABEL		$$4              of GetTotalDay     
LABEL		$$2              of GetTotalDay     
LABEL		$$1              of GetTotalDay     
LABEL		$$9              of GetTotalDay     
LABEL		$$8              of GetTotalDay     
LABEL		$$7              of GetTotalDay     
LABEL		$$6              of GetTotalDay     
LABEL		$$10             of GetTotalDay     
LABEL		$$11             of GetTotalDay     
CODESIZE	328      Bytes in GetTotalDay     
CODESIZE	36       Bytes in GetWeek         
LABEL		$$14             of ScreenEffect    
LABEL		$$18             of ScreenEffect    
LABEL		$$19             of ScreenEffect    
LABEL		$$20             of ScreenEffect    
LABEL		$$21             of ScreenEffect    
LABEL		$$22             of ScreenEffect    
LABEL		$$23             of ScreenEffect    
LABEL		$$24             of ScreenEffect    
LABEL		$$15             of ScreenEffect    
LABEL		$$26             of ScreenEffect    
LABEL		$$27             of ScreenEffect    
LABEL		$$16             of ScreenEffect    
LABEL		$$29             of ScreenEffect    
LABEL		$$30             of ScreenEffect    
LABEL		$$31             of ScreenEffect    
LABEL		$$32             of ScreenEffect    
LABEL		$$13             of ScreenEffect    
CODESIZE	1086     Bytes in ScreenEffect    
CODESIZE	406      Bytes in ShadowText      
CODESIZE	90       Bytes in InitNature      
CODESIZE	70       Bytes in InitEvent       
LABEL		$$33             of DrawBackground  
LABEL		$$35             of DrawBackground  
LABEL		$$34             of DrawBackground  
LABEL		$$37             of DrawBackground  
LABEL		$$39             of DrawBackground  
LABEL		$$38             of DrawBackground  
CODESIZE	188      Bytes in DrawBackground  
CODESIZE	488      Bytes in DrawInterface   
CODESIZE	22       Bytes in RunMainPlay     
LABEL		$$42             of RunEventLine    
LABEL		$$43             of RunEventLine    
LABEL		$$52             of RunEventLine    
LABEL		$$53             of RunEventLine    
LABEL		$$44             of RunEventLine    
LABEL		$$54             of RunEventLine    
LABEL		$$45             of RunEventLine    
LABEL		$$46             of RunEventLine    
LABEL		$$47             of RunEventLine    
LABEL		$$48             of RunEventLine    
LABEL		$$55             of RunEventLine    
LABEL		$$49             of RunEventLine    
LABEL		$$50             of RunEventLine    
LABEL		$$51             of RunEventLine    
LABEL		$$41             of RunEventLine    
CODESIZE	710      Bytes in RunEventLine    
LABEL		$$60             of DrawMessages    
LABEL		$$61             of DrawMessages    
LABEL		$$57             of DrawMessages    
LABEL		$$58             of DrawMessages    
LABEL		$$62             of DrawMessages    
LABEL		$$64             of DrawMessages    
LABEL		$$63             of DrawMessages    
CODESIZE	534      Bytes in DrawMessages    
LABEL		$$66             of DrawQuestion    
LABEL		$$70             of DrawQuestion    
LABEL		$$71             of DrawQuestion    
LABEL		$$72             of DrawQuestion    
LABEL		$$73             of DrawQuestion    
LABEL		$$69             of DrawQuestion    
LABEL		$$67             of DrawQuestion    
LABEL		$$74             of DrawQuestion    
LABEL		$$76             of DrawQuestion    
LABEL		$$75             of DrawQuestion    
CODESIZE	558      Bytes in DrawQuestion    
CODESIZE	22       Bytes in SetCurrentName  
LABEL		$$79             of IfEqual         
CODESIZE	40       Bytes in IfEqual         
LABEL		$$81             of ElseEqual       
CODESIZE	40       Bytes in ElseEqual       
LABEL		$$83             of SetBackground   
LABEL		$$84             of SetBackground   
CODESIZE	80       Bytes in SetBackground   
CODESIZE	24       Bytes in SetChara        
CODESIZE	84       Bytes in SetDate         
CODESIZE	44       Bytes in SetTime         
CODESIZE	24       Bytes in SetWeather      
LABEL		$$87             of PassTime        
LABEL		$$88             of PassTime        
LABEL		$$89             of PassTime        
LABEL		$$90             of PassTime        
LABEL		$$91             of PassTime        
LABEL		$$86             of PassTime        
CODESIZE	558      Bytes in PassTime        
CODESIZE	22       Bytes in RunTitle        
LABEL		$$93             of DrawTitle       
LABEL		$$94             of DrawTitle       
LABEL		$$95             of DrawTitle       
LABEL		$$96             of DrawTitle       
LABEL		$$97             of DrawTitle       
LABEL		$$98             of DrawTitle       
LABEL		$$92             of DrawTitle       
LABEL		$$101            of DrawTitle       
LABEL		$$102            of DrawTitle       
LABEL		$$103            of DrawTitle       
LABEL		$$99             of DrawTitle       
CODESIZE	336      Bytes in DrawTitle       
LABEL		$$107            of SelectTitleMenu 
LABEL		$$113            of SelectTitleMenu 
LABEL		$$114            of SelectTitleMenu 
LABEL		$$115            of SelectTitleMenu 
LABEL		$$108            of SelectTitleMenu 
LABEL		$$117            of SelectTitleMenu 
LABEL		$$118            of SelectTitleMenu 
LABEL		$$119            of SelectTitleMenu 
LABEL		$$109            of SelectTitleMenu 
LABEL		$$121            of SelectTitleMenu 
LABEL		$$122            of SelectTitleMenu 
LABEL		$$126            of SelectTitleMenu 
LABEL		$$127            of SelectTitleMenu 
LABEL		$$123            of SelectTitleMenu 
LABEL		$$110            of SelectTitleMenu 
LABEL		$$111            of SelectTitleMenu 
LABEL		$$104            of SelectTitleMenu 
LABEL		$$129            of SelectTitleMenu 
LABEL		$$130            of SelectTitleMenu 
LABEL		$$131            of SelectTitleMenu 
LABEL		$$134            of SelectTitleMenu 
LABEL		$$135            of SelectTitleMenu 
LABEL		$$136            of SelectTitleMenu 
LABEL		$$137            of SelectTitleMenu 
LABEL		$$132            of SelectTitleMenu 
LABEL		$$105            of SelectTitleMenu 
CODESIZE	706      Bytes in SelectTitleMenu 
LABEL		$$138            of ShowTitleContinue
LABEL		$$139            of ShowTitleContinue
CODESIZE	238      Bytes in ShowTitleContinue
LABEL		$$141            of ShowTitleOption 
LABEL		$$142            of ShowTitleOption 
CODESIZE	186      Bytes in ShowTitleOption 
CODESIZE	20       Bytes in ShowTitleGameInfo
CODESIZE	16       Bytes in RunPrologue     
LABEL		$$144            of RunPrologueEvent
LABEL		$$145            of RunPrologueEvent
LABEL		$$153            of RunPrologueEvent
LABEL		$$154            of RunPrologueEvent
LABEL		$$146            of RunPrologueEvent
LABEL		$$155            of RunPrologueEvent
LABEL		$$147            of RunPrologueEvent
LABEL		$$148            of RunPrologueEvent
LABEL		$$149            of RunPrologueEvent
LABEL		$$150            of RunPrologueEvent
LABEL		$$156            of RunPrologueEvent
LABEL		$$151            of RunPrologueEvent
LABEL		$$152            of RunPrologueEvent
LABEL		$$143            of RunPrologueEvent
CODESIZE	702      Bytes in RunPrologueEvent
CODESIZE	28       Bytes in main            
LABEL		$$158            of TEST            
CODESIZE	262      Bytes in TEST            
LABEL		$$160            of EVENT_TIMEOUT   
LABEL		$$161            of EVENT_TIMEOUT   
LABEL		$$162            of EVENT_TIMEOUT   
LABEL		$$163            of EVENT_TIMEOUT   
LABEL		$$164            of EVENT_TIMEOUT   
LABEL		$$159            of EVENT_TIMEOUT   
CODESIZE	120      Bytes in EVENT_TIMEOUT   
LABEL		$$166            of EVENT_KEYPRESS  
LABEL		$$167            of EVENT_KEYPRESS  
LABEL		$$168            of EVENT_KEYPRESS  
LABEL		$$165            of EVENT_KEYPRESS  
CODESIZE	80       Bytes in EVENT_KEYPRESS  
LABEL		$$170            of ChangeGameMode  
LABEL		$$171            of ChangeGameMode  
LABEL		$$172            of ChangeGameMode  
LABEL		$$173            of ChangeGameMode  
LABEL		$$174            of ChangeGameMode  
LABEL		$$169            of ChangeGameMode  
CODESIZE	118      Bytes in ChangeGameMode  
000th Func is '$init'
001th Func is 'ChangeGameMode'
002th Func is 'DrawBackground'
003th Func is 'DrawInterface'
004th Func is 'DrawMessages'
005th Func is 'DrawQuestion'
006th Func is 'DrawTitle'
007th Func is 'EVENT_KEYPRESS'
008th Func is 'EVENT_TIMEOUT'
009th Func is 'ElseEqual'
010th Func is 'GetTotalDay'
011th Func is 'GetWeek'
012th Func is 'IfEqual'
013th Func is 'InitEvent'
014th Func is 'InitNature'
015th Func is 'PassTime'
016th Func is 'RunEventLine'
017th Func is 'RunMainPlay'
018th Func is 'RunPrologue'
019th Func is 'RunPrologueEvent'
020th Func is 'RunTitle'
021th Func is 'ScreenEffect'
022th Func is 'SelectTitleMenu'
023th Func is 'SetBackground'
024th Func is 'SetChara'
025th Func is 'SetCurrentName'
026th Func is 'SetDate'
027th Func is 'SetTime'
028th Func is 'SetWeather'
029th Func is 'ShadowText'
030th Func is 'ShowTitleContinue'
031th Func is 'ShowTitleGameInfo'
032th Func is 'ShowTitleOption'
033th Func is 'TEST'
034th Func is 'main'
-------------------------------------------------
Optimize Function '$init()'
		Code Length : 14 Byte(s).
		Final Optimized Code Length : 14 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetTotalDay()'
		Code Length : 328 Byte(s).
	pushz		Day of Function GetTotalDay
	add
		Step.1 Reduced Original Code Length : 322 Byte(s).

		==> addz		71 ( Day of Function GetTotalDay )
		Step.2 Optimized Code Length : 326 Byte(s).

		Final Optimized Code Length : 326 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'GetWeek()'
		Code Length : 36 Byte(s).
		Final Optimized Code Length : 36 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ScreenEffect()'
		Code Length : 1086 Byte(s).
		Final Optimized Code Length : 1086 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShadowText()'
		Code Length : 406 Byte(s).
	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 400 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 404 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 398 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 402 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 396 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 400 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 394 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 398 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 392 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 396 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 390 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 394 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 388 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 392 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 386 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 390 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 384 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 388 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 382 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 386 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 380 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 384 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 378 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 382 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 376 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 380 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 374 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 378 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 372 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 376 Byte(s).

	pushz		j of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 370 Byte(s).

		==> addz		80 ( j of Function ShadowText )
		Step.2 Optimized Code Length : 374 Byte(s).

	pushz		i of Function ShadowText
	add
		Step.1 Reduced Original Code Length : 368 Byte(s).

		==> addz		81 ( i of Function ShadowText )
		Step.2 Optimized Code Length : 372 Byte(s).

		Final Optimized Code Length : 372 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitNature()'
		Code Length : 90 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 80 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 86 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 76 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 82 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 72 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 78 Byte(s).

	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 68 Byte(s).

		==> addldrzc		47 ( Now )		6
		Step.2 Optimized Code Length : 74 Byte(s).

		Final Optimized Code Length : 74 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'InitEvent()'
		Code Length : 70 Byte(s).
		Final Optimized Code Length : 70 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawBackground()'
		Code Length : 188 Byte(s).
		Final Optimized Code Length : 188 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawInterface()'
		Code Length : 488 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 478 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 484 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 474 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 480 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 470 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 476 Byte(s).

	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 466 Byte(s).

		==> addldrzc		47 ( Now )		6
		Step.2 Optimized Code Length : 472 Byte(s).

		Final Optimized Code Length : 472 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunMainPlay()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunEventLine()'
		Code Length : 710 Byte(s).
		Final Optimized Code Length : 710 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawMessages()'
		Code Length : 534 Byte(s).
		Final Optimized Code Length : 534 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawQuestion()'
		Code Length : 558 Byte(s).
	pushz		SelectedAnswer
	pushz		MsgCount of Function DrawQuestion
	add
		Step.1 Reduced Original Code Length : 548 Byte(s).

		==> addzz		55 ( SelectedAnswer )		95 ( MsgCount of Function DrawQuestion )
		Step.2 Optimized Code Length : 554 Byte(s).

		Final Optimized Code Length : 554 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetCurrentName()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'IfEqual()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ElseEqual()'
		Code Length : 40 Byte(s).
		Final Optimized Code Length : 40 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetBackground()'
		Code Length : 80 Byte(s).
		Final Optimized Code Length : 80 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetChara()'
		Code Length : 24 Byte(s).
		Final Optimized Code Length : 24 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetDate()'
		Code Length : 84 Byte(s).
	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 74 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 80 Byte(s).

	ldrz		Now
	pushc		3
	add
		Step.1 Reduced Original Code Length : 70 Byte(s).

		==> addldrzc		47 ( Now )		3
		Step.2 Optimized Code Length : 76 Byte(s).

		Final Optimized Code Length : 76 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetTime()'
		Code Length : 44 Byte(s).
	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 34 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 40 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 30 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 36 Byte(s).

		Final Optimized Code Length : 36 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SetWeather()'
		Code Length : 24 Byte(s).
	ldrz		Now
	pushc		6
	add
		Step.1 Reduced Original Code Length : 14 Byte(s).

		==> addldrzc		47 ( Now )		6
		Step.2 Optimized Code Length : 20 Byte(s).

		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'PassTime()'
		Code Length : 558 Byte(s).
	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 552 Byte(s).

		==> addz		122 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 556 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 550 Byte(s).

		==> addz		122 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 554 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 544 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 550 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 540 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 546 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 540 Byte(s).

		==> addz		122 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 544 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 534 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 540 Byte(s).

	ldrz		Now
	pushc		2
	add
		Step.1 Reduced Original Code Length : 530 Byte(s).

		==> addldrzc		47 ( Now )		2
		Step.2 Optimized Code Length : 536 Byte(s).

	pushz		TempCount of Function PassTime
	add
		Step.1 Reduced Original Code Length : 530 Byte(s).

		==> addz		123 ( TempCount of Function PassTime )
		Step.2 Optimized Code Length : 534 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 524 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 530 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 520 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 526 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 520 Byte(s).

		==> addz		122 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 524 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 514 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 520 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 510 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 516 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 506 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 512 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 502 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 508 Byte(s).

	pushz		Count of Function PassTime
	add
		Step.1 Reduced Original Code Length : 502 Byte(s).

		==> addz		122 ( Count of Function PassTime )
		Step.2 Optimized Code Length : 506 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 496 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 502 Byte(s).

	ldrz		Now
	pushc		4
	add
		Step.1 Reduced Original Code Length : 492 Byte(s).

		==> addldrzc		47 ( Now )		4
		Step.2 Optimized Code Length : 498 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 488 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 494 Byte(s).

	ldrz		Now
	pushc		5
	add
		Step.1 Reduced Original Code Length : 484 Byte(s).

		==> addldrzc		47 ( Now )		5
		Step.2 Optimized Code Length : 490 Byte(s).

		Final Optimized Code Length : 490 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunTitle()'
		Code Length : 22 Byte(s).
		Final Optimized Code Length : 22 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'DrawTitle()'
		Code Length : 336 Byte(s).
		Final Optimized Code Length : 336 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'SelectTitleMenu()'
		Code Length : 706 Byte(s).
		Final Optimized Code Length : 706 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShowTitleContinue()'
		Code Length : 238 Byte(s).
		Final Optimized Code Length : 238 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShowTitleOption()'
		Code Length : 186 Byte(s).
		Final Optimized Code Length : 186 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ShowTitleGameInfo()'
		Code Length : 20 Byte(s).
		Final Optimized Code Length : 20 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunPrologue()'
		Code Length : 16 Byte(s).
		Final Optimized Code Length : 16 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'RunPrologueEvent()'
		Code Length : 702 Byte(s).
		Final Optimized Code Length : 702 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'main()'
		Code Length : 28 Byte(s).
		Final Optimized Code Length : 28 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'TEST()'
		Code Length : 262 Byte(s).
		Final Optimized Code Length : 262 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_TIMEOUT()'
		Code Length : 120 Byte(s).
		Final Optimized Code Length : 120 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'EVENT_KEYPRESS()'
		Code Length : 80 Byte(s).
		Final Optimized Code Length : 80 Byte(s).
-------------------------------------------------
-------------------------------------------------
Optimize Function 'ChangeGameMode()'
		Code Length : 118 Byte(s).
		Final Optimized Code Length : 118 Byte(s).
-------------------------------------------------
FUNC COUNT: 35
Set FUNC ADDRESS : $init [0x00000080]
Set FUNC ADDRESS : ChangeGameMode [0x0000008E]
Set FUNC ADDRESS : DrawBackground [0x00000104]
Set FUNC ADDRESS : DrawInterface [0x000001C0]
Set FUNC ADDRESS : DrawMessages [0x00000398]
Set FUNC ADDRESS : DrawQuestion [0x000005AE]
Set FUNC ADDRESS : DrawTitle [0x000007D8]
Set FUNC ADDRESS : EVENT_KEYPRESS [0x00000928]
Set FUNC ADDRESS : EVENT_TIMEOUT [0x00000978]
Set FUNC ADDRESS : ElseEqual [0x000009F0]
Set FUNC ADDRESS : GetTotalDay [0x00000A18]
Set FUNC ADDRESS : GetWeek [0x00000B5E]
Set FUNC ADDRESS : IfEqual [0x00000B82]
Set FUNC ADDRESS : InitEvent [0x00000BAA]
Set FUNC ADDRESS : InitNature [0x00000BF0]
Set FUNC ADDRESS : PassTime [0x00000C3A]
Set FUNC ADDRESS : RunEventLine [0x00000E24]
Set FUNC ADDRESS : RunMainPlay [0x000010EA]
Set FUNC ADDRESS : RunPrologue [0x00001100]
Set FUNC ADDRESS : RunPrologueEvent [0x00001110]
Set FUNC ADDRESS : RunTitle [0x000013CE]
Set FUNC ADDRESS : ScreenEffect [0x000013E4]
Set FUNC ADDRESS : SelectTitleMenu [0x00001822]
Set FUNC ADDRESS : SetBackground [0x00001AE4]
Set FUNC ADDRESS : SetChara [0x00001B34]
Set FUNC ADDRESS : SetCurrentName [0x00001B4C]
Set FUNC ADDRESS : SetDate [0x00001B62]
Set FUNC ADDRESS : SetTime [0x00001BAE]
Set FUNC ADDRESS : SetWeather [0x00001BD2]
Set FUNC ADDRESS : ShadowText [0x00001BE6]
Set FUNC ADDRESS : ShowTitleContinue [0x00001D5A]
Set FUNC ADDRESS : ShowTitleGameInfo [0x00001E48]
Set FUNC ADDRESS : ShowTitleOption [0x00001E5C]
Set FUNC ADDRESS : TEST [0x00001F16]
Set FUNC ADDRESS : main [0x0000201C]

FUNCTION : $init()
{
	0x00000080 : zsetc		57 ( CurrentName )		-1	// , $init, -1 - SAL : 482
	0x00000086 : zsetc		67 ( NextKey )		-1	// , $init, -1 - SAL : 483
	0x0000008C : ret	// , $init, -1 - SAL : 484
}


FUNCTION : ChangeGameMode()
{
	0x0000008E : nop	// , ChangeGameMode, -1 - SAL : 2616
	0x00000090 : popz		128 ( Mode of Function ChangeGameMode )	// , ChangeGameMode, -1 - SAL : 2617
	0x00000094 : ssp	// , ChangeGameMode, -1 - SAL : 2618
	0x00000096 : pushz		128 ( Mode of Function ChangeGameMode )	// , ChangeGameMode, -1 - SAL : 2619
	0x0000009A : dup	// , ChangeGameMode, -1 - SAL : 2620
	0x0000009C : eqjp		0		0x000000C8	// , ChangeGameMode, -1 - SAL : 2621
	0x000000A4 : dup	// , ChangeGameMode, -1 - SAL : 2622
	0x000000A6 : eqjp		1		0x000000D6	// , ChangeGameMode, -1 - SAL : 2623
	0x000000AE : dup	// , ChangeGameMode, -1 - SAL : 2624
	0x000000B0 : eqjp		2		0x000000E4	// , ChangeGameMode, -1 - SAL : 2625
	0x000000B8 : dup	// , ChangeGameMode, -1 - SAL : 2626
	0x000000BA : eqjp		3		0x000000F2	// , ChangeGameMode, -1 - SAL : 2627
	0x000000C2 : ujp		0x00000100	// , ChangeGameMode, -1 - SAL : 2628
	0x000000C8 : rsp	// , ChangeGameMode, -1 - SAL : 2629
	0x000000CA : zsetc		68 ( GameMode )		0	// , ChangeGameMode, -1 - SAL : 2630
	0x000000D0 : ujp		0x00000102	// , ChangeGameMode, -1 - SAL : 2631
	0x000000D6 : rsp	// , ChangeGameMode, -1 - SAL : 2632
	0x000000D8 : zsetc		68 ( GameMode )		1	// , ChangeGameMode, -1 - SAL : 2633
	0x000000DE : ujp		0x00000102	// , ChangeGameMode, -1 - SAL : 2634
	0x000000E4 : rsp	// , ChangeGameMode, -1 - SAL : 2635
	0x000000E6 : zsetc		68 ( GameMode )		2	// , ChangeGameMode, -1 - SAL : 2636
	0x000000EC : ujp		0x00000102	// , ChangeGameMode, -1 - SAL : 2637
	0x000000F2 : rsp	// , ChangeGameMode, -1 - SAL : 2638
	0x000000F4 : zsetc		68 ( GameMode )		3	// , ChangeGameMode, -1 - SAL : 2639
	0x000000FA : ujp		0x00000102	// , ChangeGameMode, -1 - SAL : 2640
	0x00000100 : rsp	// , ChangeGameMode, -1 - SAL : 2641
	0x00000102 : ret	// , ChangeGameMode, -1 - SAL : 2642
}


FUNCTION : DrawBackground()
{
	0x00000104 : nop	// , DrawBackground, -1 - SAL : 1010
	0x00000106 : pushc		2	// , DrawBackground, -1 - SAL : 1011
	0x0000010A : pushc		25	// , DrawBackground, -1 - SAL : 1012
	0x0000010E : pushc		3	// , DrawBackground, -1 - SAL : 1013
	0x00000112 : pushc		0	// , DrawBackground, -1 - SAL : 1014
	0x00000116 : calls		SetFontType(40)	// , DrawBackground, -1 - SAL : 1015
	0x0000011A : zsetc		86 ( i of Function DrawBackground )		0	// , DrawBackground, -1 - SAL : 1016
	0x00000120 : pushz		86 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1017
	0x00000124 : gejp		2		0x0000015E	// , DrawBackground, -1 - SAL : 1018
	0x0000012C : pushi		49 ( Background )		86 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1019
	0x00000132 : ltjp		0		0x00000152	// , DrawBackground, -1 - SAL : 1020
	0x0000013A : pushc		0	// , DrawBackground, -1 - SAL : 1021
	0x0000013E : pushc		20	// , DrawBackground, -1 - SAL : 1022
	0x00000142 : pushi		49 ( Background )		86 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1023
	0x00000148 : ldrz		40 ( bg )	// , DrawBackground, -1 - SAL : 1024
	0x0000014C : add	// , DrawBackground, -1 - SAL : 1025
	0x0000014E : ixa	// , DrawBackground, -1 - SAL : 1026
	0x00000150 : CopyImage	// , DrawBackground, -1 - SAL : 1027
	0x00000152 : incz		86 ( i of Function DrawBackground )		1	// , DrawBackground, -1 - SAL : 1028
	0x00000158 : ujp		0x00000120	// , DrawBackground, -1 - SAL : 1029
	0x0000015E : zsetc		86 ( i of Function DrawBackground )		0	// , DrawBackground, -1 - SAL : 1030
	0x00000164 : pushz		86 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1031
	0x00000168 : gejp		1		0x000001A2	// , DrawBackground, -1 - SAL : 1032
	0x00000170 : pushi		50 ( BackChara )		86 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1033
	0x00000176 : ltjp		0		0x00000196	// , DrawBackground, -1 - SAL : 1034
	0x0000017E : pushc		30	// , DrawBackground, -1 - SAL : 1035
	0x00000182 : pushc		100	// , DrawBackground, -1 - SAL : 1036
	0x00000186 : pushi		50 ( BackChara )		86 ( i of Function DrawBackground )	// , DrawBackground, -1 - SAL : 1037
	0x0000018C : ldrz		41 ( chara )	// , DrawBackground, -1 - SAL : 1038
	0x00000190 : add	// , DrawBackground, -1 - SAL : 1039
	0x00000192 : ixa	// , DrawBackground, -1 - SAL : 1040
	0x00000194 : CopyImage	// , DrawBackground, -1 - SAL : 1041
	0x00000196 : incz		86 ( i of Function DrawBackground )		1	// , DrawBackground, -1 - SAL : 1042
	0x0000019C : ujp		0x00000164	// , DrawBackground, -1 - SAL : 1043
	0x000001A2 : pushc		3	// , DrawBackground, -1 - SAL : 1044
	0x000001A6 : calls		SetColor(38)	// , DrawBackground, -1 - SAL : 1045
	0x000001AA : pushc		0	// , DrawBackground, -1 - SAL : 1046
	0x000001AE : pushc		210	// , DrawBackground, -1 - SAL : 1047
	0x000001B2 : pushc		240	// , DrawBackground, -1 - SAL : 1048
	0x000001B6 : pushc		300	// , DrawBackground, -1 - SAL : 1049
	0x000001BA : calls		FillRect(70)	// , DrawBackground, -1 - SAL : 1050
	0x000001BE : ret	// , DrawBackground, -1 - SAL : 1051
}


FUNCTION : DrawInterface()
{
	0x000001C0 : nop	// , DrawInterface, -1 - SAL : 1052
	0x000001C2 : pushc		21	// , DrawInterface, -1 - SAL : 1053
	0x000001C6 : pushc		30	// , DrawInterface, -1 - SAL : 1054
	0x000001CA : calls		SetShadeColor(52)	// , DrawInterface, -1 - SAL : 1055
	0x000001CE : pushc		0	// , DrawInterface, -1 - SAL : 1056
	0x000001D2 : pushc		0	// , DrawInterface, -1 - SAL : 1057
	0x000001D6 : pushc		239	// , DrawInterface, -1 - SAL : 1058
	0x000001DA : pushc		19	// , DrawInterface, -1 - SAL : 1059
	0x000001DE : pushc		3	// , DrawInterface, -1 - SAL : 1060
	0x000001E2 : pushc		1	// , DrawInterface, -1 - SAL : 1061
	0x000001E6 : calls		ShadeRect(78)	// , DrawInterface, -1 - SAL : 1062
	0x000001EA : pushc		3	// , DrawInterface, -1 - SAL : 1063
	0x000001EE : calls		SetColor(38)	// , DrawInterface, -1 - SAL : 1064
	0x000001F2 : pushc		0	// , DrawInterface, -1 - SAL : 1065
	0x000001F6 : pushc		0	// , DrawInterface, -1 - SAL : 1066
	0x000001FA : pushc		239	// , DrawInterface, -1 - SAL : 1067
	0x000001FE : pushc		19	// , DrawInterface, -1 - SAL : 1068
	0x00000202 : calls		DrawRect(69)	// , DrawInterface, -1 - SAL : 1069
	0x00000206 : pushc		0	// , DrawInterface, -1 - SAL : 1070
	0x0000020A : pushc		277	// , DrawInterface, -1 - SAL : 1071
	0x0000020E : pushc		51	// , DrawInterface, -1 - SAL : 1072
	0x00000212 : CopyImage	// , DrawInterface, -1 - SAL : 1073
	0x00000214 : pushc		47	// , DrawInterface, -1 - SAL : 1074
	0x00000218 : pushc		277	// , DrawInterface, -1 - SAL : 1075
	0x0000021C : pushc		51	// , DrawInterface, -1 - SAL : 1076
	0x00000220 : CopyImage	// , DrawInterface, -1 - SAL : 1077
	0x00000222 : pushc		94	// , DrawInterface, -1 - SAL : 1078
	0x00000226 : pushc		277	// , DrawInterface, -1 - SAL : 1079
	0x0000022A : pushc		51	// , DrawInterface, -1 - SAL : 1080
	0x0000022E : CopyImage	// , DrawInterface, -1 - SAL : 1081
	0x00000230 : pushc		141	// , DrawInterface, -1 - SAL : 1082
	0x00000234 : pushc		277	// , DrawInterface, -1 - SAL : 1083
	0x00000238 : pushc		51	// , DrawInterface, -1 - SAL : 1084
	0x0000023C : CopyImage	// , DrawInterface, -1 - SAL : 1085
	0x0000023E : pushc		188	// , DrawInterface, -1 - SAL : 1086
	0x00000242 : pushc		277	// , DrawInterface, -1 - SAL : 1087
	0x00000246 : pushc		51	// , DrawInterface, -1 - SAL : 1088
	0x0000024A : CopyImage	// , DrawInterface, -1 - SAL : 1089
	0x0000024C : pushc		2	// , DrawInterface, -1 - SAL : 1090
	0x00000250 : pushc		0	// , DrawInterface, -1 - SAL : 1091
	0x00000254 : pushc		3	// , DrawInterface, -1 - SAL : 1092
	0x00000258 : pushc		0	// , DrawInterface, -1 - SAL : 1093
	0x0000025C : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1094
	0x00000260 : pushc		5	// , DrawInterface, -1 - SAL : 1095
	0x00000264 : pushc		282	// , DrawInterface, -1 - SAL : 1096
	0x00000268 : pushmi		%%5	// , DrawInterface, -1 - SAL : 1097
	0x0000026C : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1098
	0x00000270 : pushc		52	// , DrawInterface, -1 - SAL : 1099
	0x00000274 : pushc		282	// , DrawInterface, -1 - SAL : 1100
	0x00000278 : pushmi		%%6	// , DrawInterface, -1 - SAL : 1101
	0x0000027C : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1102
	0x00000280 : pushc		99	// , DrawInterface, -1 - SAL : 1103
	0x00000284 : pushc		282	// , DrawInterface, -1 - SAL : 1104
	0x00000288 : pushmi		%%7	// , DrawInterface, -1 - SAL : 1105
	0x0000028C : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1106
	0x00000290 : pushc		146	// , DrawInterface, -1 - SAL : 1107
	0x00000294 : pushc		282	// , DrawInterface, -1 - SAL : 1108
	0x00000298 : pushmi		%%8	// , DrawInterface, -1 - SAL : 1109
	0x0000029C : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1110
	0x000002A0 : pushc		193	// , DrawInterface, -1 - SAL : 1111
	0x000002A4 : pushc		282	// , DrawInterface, -1 - SAL : 1112
	0x000002A8 : pushmi		%%9	// , DrawInterface, -1 - SAL : 1113
	0x000002AC : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1114
	0x000002B0 : pushc		1	// , DrawInterface, -1 - SAL : 1115
	0x000002B4 : pushc		0	// , DrawInterface, -1 - SAL : 1116
	0x000002B8 : pushc		3	// , DrawInterface, -1 - SAL : 1117
	0x000002BC : pushc		0	// , DrawInterface, -1 - SAL : 1118
	0x000002C0 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1119
	0x000002C4 : pushz		88 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1120
	0x000002C8 : pushmi		%%10	// , DrawInterface, -1 - SAL : 1121
	0x000002CC : ldrz		47 ( Now )	// , DrawInterface, -1 - SAL : 1122
	0x000002D0 : ixa	// , DrawInterface, -1 - SAL : 1123
	0x000002D2 : ldrz		47 ( Now )	// , DrawInterface, -1 - SAL : 1124
	0x000002D6 : inc	// , DrawInterface, -1 - SAL : 1125
	0x000002D8 : ixa	// , DrawInterface, -1 - SAL : 1126
	0x000002DA : calls		MakeStr2(175)	// , DrawInterface, -1 - SAL : 1127
	0x000002DE : pushc		7	// , DrawInterface, -1 - SAL : 1128
	0x000002E2 : pushc		8	// , DrawInterface, -1 - SAL : 1129
	0x000002E6 : pushz		88 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1130
	0x000002EA : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1131
	0x000002EE : pushc		2	// , DrawInterface, -1 - SAL : 1132
	0x000002F2 : pushc		0	// , DrawInterface, -1 - SAL : 1133
	0x000002F6 : pushc		3	// , DrawInterface, -1 - SAL : 1134
	0x000002FA : pushc		0	// , DrawInterface, -1 - SAL : 1135
	0x000002FE : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1136
	0x00000302 : pushz		88 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1137
	0x00000306 : pushmi		%%11	// , DrawInterface, -1 - SAL : 1138
	0x0000030A : addldrzc		47 ( Now )		2	// , DrawInterface, -1 - SAL : 1139
	0x00000310 : ixa	// , DrawInterface, -1 - SAL : 1142
	0x00000312 : calls		MakeStr1(174)	// , DrawInterface, -1 - SAL : 1143
	0x00000316 : pushc		70	// , DrawInterface, -1 - SAL : 1144
	0x0000031A : pushc		6	// , DrawInterface, -1 - SAL : 1145
	0x0000031E : pushz		88 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1146
	0x00000322 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1147
	0x00000326 : pushc		1	// , DrawInterface, -1 - SAL : 1148
	0x0000032A : pushc		0	// , DrawInterface, -1 - SAL : 1149
	0x0000032E : pushc		3	// , DrawInterface, -1 - SAL : 1150
	0x00000332 : pushc		0	// , DrawInterface, -1 - SAL : 1151
	0x00000336 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1152
	0x0000033A : pushz		88 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1153
	0x0000033E : pushmi		%%12	// , DrawInterface, -1 - SAL : 1154
	0x00000342 : addldrzc		47 ( Now )		4	// , DrawInterface, -1 - SAL : 1155
	0x00000348 : ixa	// , DrawInterface, -1 - SAL : 1158
	0x0000034A : addldrzc		47 ( Now )		5	// , DrawInterface, -1 - SAL : 1159
	0x00000350 : ixa	// , DrawInterface, -1 - SAL : 1162
	0x00000352 : calls		MakeStr2(175)	// , DrawInterface, -1 - SAL : 1163
	0x00000356 : pushc		100	// , DrawInterface, -1 - SAL : 1164
	0x0000035A : pushc		8	// , DrawInterface, -1 - SAL : 1165
	0x0000035E : pushz		88 ( TempString of Function DrawInterface )	// , DrawInterface, -1 - SAL : 1166
	0x00000362 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1167
	0x00000366 : pushc		2	// , DrawInterface, -1 - SAL : 1168
	0x0000036A : pushc		0	// , DrawInterface, -1 - SAL : 1169
	0x0000036E : pushc		3	// , DrawInterface, -1 - SAL : 1170
	0x00000372 : pushc		0	// , DrawInterface, -1 - SAL : 1171
	0x00000376 : calls		SetFontType(40)	// , DrawInterface, -1 - SAL : 1172
	0x0000037A : pushc		180	// , DrawInterface, -1 - SAL : 1173
	0x0000037E : pushc		6	// , DrawInterface, -1 - SAL : 1174
	0x00000382 : addldrzc		47 ( Now )		6	// , DrawInterface, -1 - SAL : 1175
	0x00000388 : ixa	// , DrawInterface, -1 - SAL : 1178
	0x0000038A : ldrz		45 ( WEATHER )	// , DrawInterface, -1 - SAL : 1179
	0x0000038E : add	// , DrawInterface, -1 - SAL : 1180
	0x00000390 : ixa	// , DrawInterface, -1 - SAL : 1181
	0x00000392 : calls		DrawStr(85)	// , DrawInterface, -1 - SAL : 1182
	0x00000396 : ret	// , DrawInterface, -1 - SAL : 1183
}


FUNCTION : DrawMessages()
{
	0x00000398 : nop	// , DrawMessages, -1 - SAL : 1367
	0x0000039A : stnz		89 ( MessageNumber of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1368
	0x0000039E : ldrz		52 ( Messages )	// , DrawMessages, -1 - SAL : 1369
	0x000003A2 : add	// , DrawMessages, -1 - SAL : 1370
	0x000003A4 : ixa	// , DrawMessages, -1 - SAL : 1371
	0x000003A6 : calls		StrLen(160)	// , DrawMessages, -1 - SAL : 1372
	0x000003AA : pushc		36	// , DrawMessages, -1 - SAL : 1373
	0x000003AE : div	// , DrawMessages, -1 - SAL : 1374
	0x000003B0 : inc	// , DrawMessages, -1 - SAL : 1375
	0x000003B2 : popz		91 ( Length of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1376
	0x000003B6 : pushc		252	// , DrawMessages, -1 - SAL : 1377
	0x000003BA : pushc		60	// , DrawMessages, -1 - SAL : 1378
	0x000003BE : sub	// , DrawMessages, -1 - SAL : 1379
	0x000003C0 : popz		93 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1380
	0x000003C4 : pushz		57 ( CurrentName )	// , DrawMessages, -1 - SAL : 1381
	0x000003C8 : lejp		-1		0x000004AA	// , DrawMessages, -1 - SAL : 1382
	0x000003D0 : ssp	// , DrawMessages, -1 - SAL : 1383
	0x000003D2 : pushz		58 ( NamePosition )	// , DrawMessages, -1 - SAL : 1384
	0x000003D6 : dup	// , DrawMessages, -1 - SAL : 1385
	0x000003D8 : eqjp		0		0x000003F2	// , DrawMessages, -1 - SAL : 1386
	0x000003E0 : dup	// , DrawMessages, -1 - SAL : 1387
	0x000003E2 : eqjp		1		0x0000044E	// , DrawMessages, -1 - SAL : 1388
	0x000003EA : rsp	// , DrawMessages, -1 - SAL : 1389
	0x000003EC : ujp		0x000004BE	// , DrawMessages, -1 - SAL : 1390
	0x000003F2 : rsp	// , DrawMessages, -1 - SAL : 1391
	0x000003F4 : pushc		4	// , DrawMessages, -1 - SAL : 1392
	0x000003F8 : pushc		252	// , DrawMessages, -1 - SAL : 1393
	0x000003FC : pushc		60	// , DrawMessages, -1 - SAL : 1394
	0x00000400 : sub	// , DrawMessages, -1 - SAL : 1395
	0x00000402 : pushc		46	// , DrawMessages, -1 - SAL : 1396
	0x00000406 : CopyImage	// , DrawMessages, -1 - SAL : 1397
	0x00000408 : pushc		215	// , DrawMessages, -1 - SAL : 1398
	0x0000040C : pushc		260	// , DrawMessages, -1 - SAL : 1399
	0x00000410 : pushc		60	// , DrawMessages, -1 - SAL : 1400
	0x00000414 : sub	// , DrawMessages, -1 - SAL : 1401
	0x00000416 : pushc		47	// , DrawMessages, -1 - SAL : 1402
	0x0000041A : CopyImage	// , DrawMessages, -1 - SAL : 1403
	0x0000041C : pushc		2	// , DrawMessages, -1 - SAL : 1404
	0x00000420 : pushc		0	// , DrawMessages, -1 - SAL : 1405
	0x00000424 : pushc		3	// , DrawMessages, -1 - SAL : 1406
	0x00000428 : pushc		1	// , DrawMessages, -1 - SAL : 1407
	0x0000042C : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1408
	0x00000430 : pushc		40	// , DrawMessages, -1 - SAL : 1409
	0x00000434 : pushz		93 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1410
	0x00000438 : pushc		5	// , DrawMessages, -1 - SAL : 1411
	0x0000043C : add	// , DrawMessages, -1 - SAL : 1412
	0x0000043E : pushi		51 ( Names )		57 ( CurrentName )	// , DrawMessages, -1 - SAL : 1413
	0x00000444 : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1414
	0x00000448 : ujp		0x000004BE	// , DrawMessages, -1 - SAL : 1415
	0x0000044E : rsp	// , DrawMessages, -1 - SAL : 1416
	0x00000450 : pushc		166	// , DrawMessages, -1 - SAL : 1417
	0x00000454 : pushc		252	// , DrawMessages, -1 - SAL : 1418
	0x00000458 : pushc		60	// , DrawMessages, -1 - SAL : 1419
	0x0000045C : sub	// , DrawMessages, -1 - SAL : 1420
	0x0000045E : pushc		46	// , DrawMessages, -1 - SAL : 1421
	0x00000462 : CopyImage	// , DrawMessages, -1 - SAL : 1422
	0x00000464 : pushc		2	// , DrawMessages, -1 - SAL : 1423
	0x00000468 : pushc		260	// , DrawMessages, -1 - SAL : 1424
	0x0000046C : pushc		60	// , DrawMessages, -1 - SAL : 1425
	0x00000470 : sub	// , DrawMessages, -1 - SAL : 1426
	0x00000472 : pushc		47	// , DrawMessages, -1 - SAL : 1427
	0x00000476 : CopyImage	// , DrawMessages, -1 - SAL : 1428
	0x00000478 : pushc		2	// , DrawMessages, -1 - SAL : 1429
	0x0000047C : pushc		0	// , DrawMessages, -1 - SAL : 1430
	0x00000480 : pushc		3	// , DrawMessages, -1 - SAL : 1431
	0x00000484 : pushc		1	// , DrawMessages, -1 - SAL : 1432
	0x00000488 : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1433
	0x0000048C : pushc		202	// , DrawMessages, -1 - SAL : 1434
	0x00000490 : pushz		93 ( PosNameY of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1435
	0x00000494 : pushc		5	// , DrawMessages, -1 - SAL : 1436
	0x00000498 : add	// , DrawMessages, -1 - SAL : 1437
	0x0000049A : pushi		51 ( Names )		57 ( CurrentName )	// , DrawMessages, -1 - SAL : 1438
	0x000004A0 : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1439
	0x000004A4 : ujp		0x000004BE	// , DrawMessages, -1 - SAL : 1440
	0x000004AA : pushc		215	// , DrawMessages, -1 - SAL : 1441
	0x000004AE : pushc		260	// , DrawMessages, -1 - SAL : 1442
	0x000004B2 : pushc		60	// , DrawMessages, -1 - SAL : 1443
	0x000004B6 : sub	// , DrawMessages, -1 - SAL : 1444
	0x000004B8 : pushc		47	// , DrawMessages, -1 - SAL : 1445
	0x000004BC : CopyImage	// , DrawMessages, -1 - SAL : 1446
	0x000004BE : pushc		3	// , DrawMessages, -1 - SAL : 1447
	0x000004C2 : calls		SetColor(38)	// , DrawMessages, -1 - SAL : 1448
	0x000004C6 : pushc		4	// , DrawMessages, -1 - SAL : 1449
	0x000004CA : pushc		274	// , DrawMessages, -1 - SAL : 1450
	0x000004CE : pushc		60	// , DrawMessages, -1 - SAL : 1451
	0x000004D2 : sub	// , DrawMessages, -1 - SAL : 1452
	0x000004D4 : pushc		285	// , DrawMessages, -1 - SAL : 1453
	0x000004D8 : pushc		272	// , DrawMessages, -1 - SAL : 1454
	0x000004DC : pushc		2	// , DrawMessages, -1 - SAL : 1455
	0x000004E0 : calls		FillRectEx(71)	// , DrawMessages, -1 - SAL : 1456
	0x000004E4 : pushc		0	// , DrawMessages, -1 - SAL : 1457
	0x000004E8 : pushc		270	// , DrawMessages, -1 - SAL : 1458
	0x000004EC : pushc		60	// , DrawMessages, -1 - SAL : 1459
	0x000004F0 : sub	// , DrawMessages, -1 - SAL : 1460
	0x000004F2 : pushc		45	// , DrawMessages, -1 - SAL : 1461
	0x000004F6 : CopyImage	// , DrawMessages, -1 - SAL : 1462
	0x000004F8 : pushc		2	// , DrawMessages, -1 - SAL : 1463
	0x000004FC : pushc		0	// , DrawMessages, -1 - SAL : 1464
	0x00000500 : pushc		3	// , DrawMessages, -1 - SAL : 1465
	0x00000504 : pushc		0	// , DrawMessages, -1 - SAL : 1466
	0x00000508 : calls		SetFontType(40)	// , DrawMessages, -1 - SAL : 1467
	0x0000050C : zsetc		92 ( i of Function DrawMessages )		0	// , DrawMessages, -1 - SAL : 1468
	0x00000512 : pushz		92 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1469
	0x00000516 : gejp		4		0x0000059E	// , DrawMessages, -1 - SAL : 1470
	0x0000051E : pushc		0	// , DrawMessages, -1 - SAL : 1471
	0x00000522 : pushc		275	// , DrawMessages, -1 - SAL : 1472
	0x00000526 : pushc		14	// , DrawMessages, -1 - SAL : 1473
	0x0000052A : pushz		92 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1474
	0x0000052E : mult	// , DrawMessages, -1 - SAL : 1475
	0x00000530 : sub	// , DrawMessages, -1 - SAL : 1476
	0x00000532 : pushc		18	// , DrawMessages, -1 - SAL : 1477
	0x00000536 : sub	// , DrawMessages, -1 - SAL : 1478
	0x00000538 : pushc		48	// , DrawMessages, -1 - SAL : 1479
	0x0000053C : CopyImage	// , DrawMessages, -1 - SAL : 1480
	0x0000053E : pushz		92 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1481
	0x00000542 : pushz		91 ( Length of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1482
	0x00000546 : lt	// , DrawMessages, -1 - SAL : 1483
	0x00000548 : fjp		0x00000592	// , DrawMessages, -1 - SAL : 1484
	0x0000054E : pushz		90 ( TempString of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1485
	0x00000552 : pushi		52 ( Messages )		89 ( MessageNumber of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1486
	0x00000558 : pushz		92 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1487
	0x0000055C : pushc		36	// , DrawMessages, -1 - SAL : 1488
	0x00000560 : mult	// , DrawMessages, -1 - SAL : 1489
	0x00000562 : pushc		36	// , DrawMessages, -1 - SAL : 1490
	0x00000566 : calls		StrSub(162)	// , DrawMessages, -1 - SAL : 1491
	0x0000056A : pushc		7	// , DrawMessages, -1 - SAL : 1492
	0x0000056E : pushc		277	// , DrawMessages, -1 - SAL : 1493
	0x00000572 : pushc		3	// , DrawMessages, -1 - SAL : 1494
	0x00000576 : pushz		92 ( i of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1495
	0x0000057A : sub	// , DrawMessages, -1 - SAL : 1496
	0x0000057C : pushc		14	// , DrawMessages, -1 - SAL : 1497
	0x00000580 : mult	// , DrawMessages, -1 - SAL : 1498
	0x00000582 : sub	// , DrawMessages, -1 - SAL : 1499
	0x00000584 : pushc		18	// , DrawMessages, -1 - SAL : 1500
	0x00000588 : sub	// , DrawMessages, -1 - SAL : 1501
	0x0000058A : pushz		90 ( TempString of Function DrawMessages )	// , DrawMessages, -1 - SAL : 1502
	0x0000058E : calls		DrawStr(85)	// , DrawMessages, -1 - SAL : 1503
	0x00000592 : incz		92 ( i of Function DrawMessages )		1	// , DrawMessages, -1 - SAL : 1504
	0x00000598 : ujp		0x00000512	// , DrawMessages, -1 - SAL : 1505
	0x0000059E : pushc		0	// , DrawMessages, -1 - SAL : 1506
	0x000005A2 : pushc		270	// , DrawMessages, -1 - SAL : 1507
	0x000005A6 : pushc		49	// , DrawMessages, -1 - SAL : 1508
	0x000005AA : CopyImage	// , DrawMessages, -1 - SAL : 1509
	0x000005AC : ret	// , DrawMessages, -1 - SAL : 1510
}


FUNCTION : DrawQuestion()
{
	0x000005AE : nop	// , DrawQuestion, -1 - SAL : 1511
	0x000005B0 : popz		99 ( Select4 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1512
	0x000005B4 : popz		98 ( Select3 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1513
	0x000005B8 : popz		97 ( Select2 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1514
	0x000005BC : popz		96 ( Select1 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1515
	0x000005C0 : popz		95 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1516
	0x000005C4 : popz		94 ( Value of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1517
	0x000005C8 : pushc		3	// , DrawQuestion, -1 - SAL : 1518
	0x000005CC : calls		SetColor(38)	// , DrawQuestion, -1 - SAL : 1519
	0x000005D0 : pushc		4	// , DrawQuestion, -1 - SAL : 1520
	0x000005D4 : pushc		288	// , DrawQuestion, -1 - SAL : 1521
	0x000005D8 : pushc		74	// , DrawQuestion, -1 - SAL : 1522
	0x000005DC : sub	// , DrawQuestion, -1 - SAL : 1523
	0x000005DE : pushc		285	// , DrawQuestion, -1 - SAL : 1524
	0x000005E2 : pushc		272	// , DrawQuestion, -1 - SAL : 1525
	0x000005E6 : pushc		2	// , DrawQuestion, -1 - SAL : 1526
	0x000005EA : calls		FillRectEx(71)	// , DrawQuestion, -1 - SAL : 1527
	0x000005EE : pushc		0	// , DrawQuestion, -1 - SAL : 1528
	0x000005F2 : pushc		284	// , DrawQuestion, -1 - SAL : 1529
	0x000005F6 : pushc		74	// , DrawQuestion, -1 - SAL : 1530
	0x000005FA : sub	// , DrawQuestion, -1 - SAL : 1531
	0x000005FC : pushc		45	// , DrawQuestion, -1 - SAL : 1532
	0x00000600 : CopyImage	// , DrawQuestion, -1 - SAL : 1533
	0x00000602 : pushc		0	// , DrawQuestion, -1 - SAL : 1534
	0x00000606 : pushc		275	// , DrawQuestion, -1 - SAL : 1535
	0x0000060A : pushc		46	// , DrawQuestion, -1 - SAL : 1536
	0x0000060E : sub	// , DrawQuestion, -1 - SAL : 1537
	0x00000610 : pushc		48	// , DrawQuestion, -1 - SAL : 1538
	0x00000614 : CopyImage	// , DrawQuestion, -1 - SAL : 1539
	0x00000616 : pushc		0	// , DrawQuestion, -1 - SAL : 1540
	0x0000061A : pushc		275	// , DrawQuestion, -1 - SAL : 1541
	0x0000061E : pushc		32	// , DrawQuestion, -1 - SAL : 1542
	0x00000622 : sub	// , DrawQuestion, -1 - SAL : 1543
	0x00000624 : pushc		48	// , DrawQuestion, -1 - SAL : 1544
	0x00000628 : CopyImage	// , DrawQuestion, -1 - SAL : 1545
	0x0000062A : pushc		0	// , DrawQuestion, -1 - SAL : 1546
	0x0000062E : pushc		257	// , DrawQuestion, -1 - SAL : 1547
	0x00000632 : pushc		48	// , DrawQuestion, -1 - SAL : 1548
	0x00000636 : CopyImage	// , DrawQuestion, -1 - SAL : 1549
	0x00000638 : pushc		2	// , DrawQuestion, -1 - SAL : 1550
	0x0000063C : pushc		0	// , DrawQuestion, -1 - SAL : 1551
	0x00000640 : pushc		3	// , DrawQuestion, -1 - SAL : 1552
	0x00000644 : pushc		1	// , DrawQuestion, -1 - SAL : 1553
	0x00000648 : calls		SetFontType(40)	// , DrawQuestion, -1 - SAL : 1554
	0x0000064C : zsetc		100 ( i of Function DrawQuestion )		0	// , DrawQuestion, -1 - SAL : 1555
	0x00000652 : pushz		100 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1556
	0x00000656 : pushz		95 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1557
	0x0000065A : lt	// , DrawQuestion, -1 - SAL : 1558
	0x0000065C : fjp		0x00000702	// , DrawQuestion, -1 - SAL : 1559
	0x00000662 : ssp	// , DrawQuestion, -1 - SAL : 1560
	0x00000664 : pushz		100 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1561
	0x00000668 : inc	// , DrawQuestion, -1 - SAL : 1562
	0x0000066A : dup	// , DrawQuestion, -1 - SAL : 1563
	0x0000066C : eqjp		4		0x0000069A	// , DrawQuestion, -1 - SAL : 1564
	0x00000674 : dup	// , DrawQuestion, -1 - SAL : 1565
	0x00000676 : eqjp		3		0x000006AA	// , DrawQuestion, -1 - SAL : 1566
	0x0000067E : dup	// , DrawQuestion, -1 - SAL : 1567
	0x00000680 : eqjp		2		0x000006BA	// , DrawQuestion, -1 - SAL : 1568
	0x00000688 : dup	// , DrawQuestion, -1 - SAL : 1569
	0x0000068A : eqjp		1		0x000006CA	// , DrawQuestion, -1 - SAL : 1570
	0x00000692 : rsp	// , DrawQuestion, -1 - SAL : 1571
	0x00000694 : ujp		0x000006D4	// , DrawQuestion, -1 - SAL : 1572
	0x0000069A : rsp	// , DrawQuestion, -1 - SAL : 1573
	0x0000069C : zseti		101 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		99 ( Select4 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1574
	0x000006A4 : ujp		0x000006D4	// , DrawQuestion, -1 - SAL : 1575
	0x000006AA : rsp	// , DrawQuestion, -1 - SAL : 1576
	0x000006AC : zseti		101 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		98 ( Select3 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1577
	0x000006B4 : ujp		0x000006D4	// , DrawQuestion, -1 - SAL : 1578
	0x000006BA : rsp	// , DrawQuestion, -1 - SAL : 1579
	0x000006BC : zseti		101 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		97 ( Select2 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1580
	0x000006C4 : ujp		0x000006D4	// , DrawQuestion, -1 - SAL : 1581
	0x000006CA : rsp	// , DrawQuestion, -1 - SAL : 1582
	0x000006CC : zseti		101 ( Temp of Function DrawQuestion )		53 ( SelectMessages )		96 ( Select1 of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1583
	0x000006D4 : pushc		120	// , DrawQuestion, -1 - SAL : 1584
	0x000006D8 : pushc		235	// , DrawQuestion, -1 - SAL : 1585
	0x000006DC : pushz		100 ( i of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1586
	0x000006E0 : pushc		14	// , DrawQuestion, -1 - SAL : 1587
	0x000006E4 : mult	// , DrawQuestion, -1 - SAL : 1588
	0x000006E6 : add	// , DrawQuestion, -1 - SAL : 1589
	0x000006E8 : pushc		18	// , DrawQuestion, -1 - SAL : 1590
	0x000006EC : sub	// , DrawQuestion, -1 - SAL : 1591
	0x000006EE : pushz		101 ( Temp of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1592
	0x000006F2 : calls		DrawStr(85)	// , DrawQuestion, -1 - SAL : 1593
	0x000006F6 : incz		100 ( i of Function DrawQuestion )		1	// , DrawQuestion, -1 - SAL : 1594
	0x000006FC : ujp		0x00000652	// , DrawQuestion, -1 - SAL : 1595
	0x00000702 : pushc		0	// , DrawQuestion, -1 - SAL : 1596
	0x00000706 : pushc		270	// , DrawQuestion, -1 - SAL : 1597
	0x0000070A : pushc		49	// , DrawQuestion, -1 - SAL : 1598
	0x0000070E : CopyImage	// , DrawQuestion, -1 - SAL : 1599
	0x00000710 : pushz		67 ( NextKey )	// , DrawQuestion, -1 - SAL : 1600
	0x00000714 : nejp		19		0x00000732	// , DrawQuestion, -1 - SAL : 1601
	0x0000071C : pushz		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1602
	0x00000720 : inc	// , DrawQuestion, -1 - SAL : 1603
	0x00000722 : pushz		95 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1604
	0x00000726 : mod	// , DrawQuestion, -1 - SAL : 1605
	0x00000728 : popz		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1606
	0x0000072C : ujp		0x00000772	// , DrawQuestion, -1 - SAL : 1607
	0x00000732 : pushz		67 ( NextKey )	// , DrawQuestion, -1 - SAL : 1608
	0x00000736 : nejp		18		0x00000756	// , DrawQuestion, -1 - SAL : 1609
	0x0000073E : addzz		55 ( SelectedAnswer )		95 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1610
	0x00000744 : dec	// , DrawQuestion, -1 - SAL : 1613
	0x00000746 : pushz		95 ( MsgCount of Function DrawQuestion )	// , DrawQuestion, -1 - SAL : 1614
	0x0000074A : mod	// , DrawQuestion, -1 - SAL : 1615
	0x0000074C : popz		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1616
	0x00000750 : ujp		0x00000772	// , DrawQuestion, -1 - SAL : 1617
	0x00000756 : pushz		67 ( NextKey )	// , DrawQuestion, -1 - SAL : 1618
	0x0000075A : nejp		20		0x00000772	// , DrawQuestion, -1 - SAL : 1619
	0x00000762 : isetz		60 ( Variable )		94 ( Value of Function DrawQuestion )		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1620
	0x0000076A : zsetc		55 ( SelectedAnswer )		0	// , DrawQuestion, -1 - SAL : 1621
	0x00000770 : ret	// , DrawQuestion, -1 - SAL : 1622
	0x00000772 : pushc		0	// , DrawQuestion, -1 - SAL : 1623
	0x00000776 : calls		SetColor(38)	// , DrawQuestion, -1 - SAL : 1624
	0x0000077A : pushc		6	// , DrawQuestion, -1 - SAL : 1625
	0x0000077E : pushc		233	// , DrawQuestion, -1 - SAL : 1626
	0x00000782 : pushz		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1627
	0x00000786 : pushc		14	// , DrawQuestion, -1 - SAL : 1628
	0x0000078A : mult	// , DrawQuestion, -1 - SAL : 1629
	0x0000078C : add	// , DrawQuestion, -1 - SAL : 1630
	0x0000078E : pushc		18	// , DrawQuestion, -1 - SAL : 1631
	0x00000792 : sub	// , DrawQuestion, -1 - SAL : 1632
	0x00000794 : pushc		233	// , DrawQuestion, -1 - SAL : 1633
	0x00000798 : pushc		247	// , DrawQuestion, -1 - SAL : 1634
	0x0000079C : pushz		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1635
	0x000007A0 : pushc		14	// , DrawQuestion, -1 - SAL : 1636
	0x000007A4 : mult	// , DrawQuestion, -1 - SAL : 1637
	0x000007A6 : add	// , DrawQuestion, -1 - SAL : 1638
	0x000007A8 : pushc		18	// , DrawQuestion, -1 - SAL : 1639
	0x000007AC : sub	// , DrawQuestion, -1 - SAL : 1640
	0x000007AE : pushc		3	// , DrawQuestion, -1 - SAL : 1641
	0x000007B2 : calls		FillRectEx(71)	// , DrawQuestion, -1 - SAL : 1642
	0x000007B6 : pushc		4	// , DrawQuestion, -1 - SAL : 1643
	0x000007BA : pushc		232	// , DrawQuestion, -1 - SAL : 1644
	0x000007BE : pushz		55 ( SelectedAnswer )	// , DrawQuestion, -1 - SAL : 1645
	0x000007C2 : pushc		14	// , DrawQuestion, -1 - SAL : 1646
	0x000007C6 : mult	// , DrawQuestion, -1 - SAL : 1647
	0x000007C8 : add	// , DrawQuestion, -1 - SAL : 1648
	0x000007CA : pushc		18	// , DrawQuestion, -1 - SAL : 1649
	0x000007CE : sub	// , DrawQuestion, -1 - SAL : 1650
	0x000007D0 : pushc		50	// , DrawQuestion, -1 - SAL : 1651
	0x000007D4 : CopyImage	// , DrawQuestion, -1 - SAL : 1652
	0x000007D6 : ret	// , DrawQuestion, -1 - SAL : 1653
}


FUNCTION : DrawTitle()
{
	0x000007D8 : nop	// , DrawTitle, -1 - SAL : 1945
	0x000007DA : pushc		0	// , DrawTitle, -1 - SAL : 1946
	0x000007DE : pushc		0	// , DrawTitle, -1 - SAL : 1947
	0x000007E2 : pushc		52	// , DrawTitle, -1 - SAL : 1948
	0x000007E6 : CopyImage	// , DrawTitle, -1 - SAL : 1949
	0x000007E8 : pushc		0	// , DrawTitle, -1 - SAL : 1950
	0x000007EC : pushc		89	// , DrawTitle, -1 - SAL : 1951
	0x000007F0 : pushc		53	// , DrawTitle, -1 - SAL : 1952
	0x000007F4 : CopyImage	// , DrawTitle, -1 - SAL : 1953
	0x000007F6 : ssp	// , DrawTitle, -1 - SAL : 1954
	0x000007F8 : pushz		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 1955
	0x000007FC : dup	// , DrawTitle, -1 - SAL : 1956
	0x000007FE : eqjp		0		0x00000834	// , DrawTitle, -1 - SAL : 1957
	0x00000806 : dup	// , DrawTitle, -1 - SAL : 1958
	0x00000808 : eqjp		1		0x0000084C	// , DrawTitle, -1 - SAL : 1959
	0x00000810 : dup	// , DrawTitle, -1 - SAL : 1960
	0x00000812 : eqjp		2		0x00000864	// , DrawTitle, -1 - SAL : 1961
	0x0000081A : dup	// , DrawTitle, -1 - SAL : 1962
	0x0000081C : eqjp		3		0x0000087C	// , DrawTitle, -1 - SAL : 1963
	0x00000824 : dup	// , DrawTitle, -1 - SAL : 1964
	0x00000826 : eqjp		4		0x00000894	// , DrawTitle, -1 - SAL : 1965
	0x0000082E : ujp		0x000008AC	// , DrawTitle, -1 - SAL : 1966
	0x00000834 : rsp	// , DrawTitle, -1 - SAL : 1967
	0x00000836 : pushc		100	// , DrawTitle, -1 - SAL : 1968
	0x0000083A : pushc		136	// , DrawTitle, -1 - SAL : 1969
	0x0000083E : pushi		29 ( title_menu )		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 1970
	0x00000844 : CopyImage	// , DrawTitle, -1 - SAL : 1971
	0x00000846 : ujp		0x000008AE	// , DrawTitle, -1 - SAL : 1972
	0x0000084C : rsp	// , DrawTitle, -1 - SAL : 1973
	0x0000084E : pushc		100	// , DrawTitle, -1 - SAL : 1974
	0x00000852 : pushc		166	// , DrawTitle, -1 - SAL : 1975
	0x00000856 : pushi		29 ( title_menu )		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 1976
	0x0000085C : CopyImage	// , DrawTitle, -1 - SAL : 1977
	0x0000085E : ujp		0x000008AE	// , DrawTitle, -1 - SAL : 1978
	0x00000864 : rsp	// , DrawTitle, -1 - SAL : 1979
	0x00000866 : pushc		100	// , DrawTitle, -1 - SAL : 1980
	0x0000086A : pushc		197	// , DrawTitle, -1 - SAL : 1981
	0x0000086E : pushi		29 ( title_menu )		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 1982
	0x00000874 : CopyImage	// , DrawTitle, -1 - SAL : 1983
	0x00000876 : ujp		0x000008AE	// , DrawTitle, -1 - SAL : 1984
	0x0000087C : rsp	// , DrawTitle, -1 - SAL : 1985
	0x0000087E : pushc		100	// , DrawTitle, -1 - SAL : 1986
	0x00000882 : pushc		226	// , DrawTitle, -1 - SAL : 1987
	0x00000886 : pushi		29 ( title_menu )		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 1988
	0x0000088C : CopyImage	// , DrawTitle, -1 - SAL : 1989
	0x0000088E : ujp		0x000008AE	// , DrawTitle, -1 - SAL : 1990
	0x00000894 : rsp	// , DrawTitle, -1 - SAL : 1991
	0x00000896 : pushc		100	// , DrawTitle, -1 - SAL : 1992
	0x0000089A : pushc		255	// , DrawTitle, -1 - SAL : 1993
	0x0000089E : pushi		29 ( title_menu )		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 1994
	0x000008A4 : CopyImage	// , DrawTitle, -1 - SAL : 1995
	0x000008A6 : ujp		0x000008AE	// , DrawTitle, -1 - SAL : 1996
	0x000008AC : rsp	// , DrawTitle, -1 - SAL : 1997
	0x000008AE : pushz		62 ( SelectedMenu )	// , DrawTitle, -1 - SAL : 1998
	0x000008B2 : fjp		0x00000926	// , DrawTitle, -1 - SAL : 1999
	0x000008B8 : pushc		0	// , DrawTitle, -1 - SAL : 2000
	0x000008BC : pushc		85	// , DrawTitle, -1 - SAL : 2001
	0x000008C0 : pushc		59	// , DrawTitle, -1 - SAL : 2002
	0x000008C4 : pushc		1	// , DrawTitle, -1 - SAL : 2003
	0x000008C8 : pushc		0	// , DrawTitle, -1 - SAL : 2004
	0x000008CC : pushc		0	// , DrawTitle, -1 - SAL : 2005
	0x000008D0 : pushc		0	// , DrawTitle, -1 - SAL : 2006
	0x000008D4 : CopyImageEx	// , DrawTitle, -1 - SAL : 2007
	0x000008D6 : ssp	// , DrawTitle, -1 - SAL : 2008
	0x000008D8 : pushz		61 ( SelectedTitleMenu )	// , DrawTitle, -1 - SAL : 2009
	0x000008DC : dup	// , DrawTitle, -1 - SAL : 2010
	0x000008DE : eqjp		1		0x00000902	// , DrawTitle, -1 - SAL : 2011
	0x000008E6 : dup	// , DrawTitle, -1 - SAL : 2012
	0x000008E8 : eqjp		2		0x00000910	// , DrawTitle, -1 - SAL : 2013
	0x000008F0 : dup	// , DrawTitle, -1 - SAL : 2014
	0x000008F2 : eqjp		3		0x0000091E	// , DrawTitle, -1 - SAL : 2015
	0x000008FA : rsp	// , DrawTitle, -1 - SAL : 2016
	0x000008FC : ujp		0x00000926	// , DrawTitle, -1 - SAL : 2017
	0x00000902 : rsp	// , DrawTitle, -1 - SAL : 2018
	0x00000904 : call		0x00001D5A	// , DrawTitle, -1 - SAL : 2019
	0x0000090A : ujp		0x00000926	// , DrawTitle, -1 - SAL : 2020
	0x00000910 : rsp	// , DrawTitle, -1 - SAL : 2021
	0x00000912 : call		0x00001E5C	// , DrawTitle, -1 - SAL : 2022
	0x00000918 : ujp		0x00000926	// , DrawTitle, -1 - SAL : 2023
	0x0000091E : rsp	// , DrawTitle, -1 - SAL : 2024
	0x00000920 : call		0x00001E48	// , DrawTitle, -1 - SAL : 2025
	0x00000926 : ret	// , DrawTitle, -1 - SAL : 2026
}


FUNCTION : EVENT_KEYPRESS()
{
	0x00000928 : nop	// , EVENT_KEYPRESS, -1 - SAL : 2597
	0x0000092A : ssp	// , EVENT_KEYPRESS, -1 - SAL : 2598
	0x0000092C : pushz		68 ( GameMode )	// , EVENT_KEYPRESS, -1 - SAL : 2599
	0x00000930 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2600
	0x00000932 : eqjp		0		0x0000095E	// , EVENT_KEYPRESS, -1 - SAL : 2601
	0x0000093A : dup	// , EVENT_KEYPRESS, -1 - SAL : 2602
	0x0000093C : eqjp		1		0x0000095E	// , EVENT_KEYPRESS, -1 - SAL : 2603
	0x00000944 : dup	// , EVENT_KEYPRESS, -1 - SAL : 2604
	0x00000946 : eqjp		2		0x0000095E	// , EVENT_KEYPRESS, -1 - SAL : 2605
	0x0000094E : dup	// , EVENT_KEYPRESS, -1 - SAL : 2606
	0x00000950 : eqjp		3		0x0000096C	// , EVENT_KEYPRESS, -1 - SAL : 2607
	0x00000958 : ujp		0x00000974	// , EVENT_KEYPRESS, -1 - SAL : 2608
	0x0000095E : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2609
	0x00000960 : zsetz		67 ( NextKey )		0 ( swData )	// , EVENT_KEYPRESS, -1 - SAL : 2610
	0x00000966 : ujp		0x00000976	// , EVENT_KEYPRESS, -1 - SAL : 2611
	0x0000096C : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2612
	0x0000096E : ujp		0x00000976	// , EVENT_KEYPRESS, -1 - SAL : 2613
	0x00000974 : rsp	// , EVENT_KEYPRESS, -1 - SAL : 2614
	0x00000976 : end	// , EVENT_KEYPRESS, -1 - SAL : 2615
}


FUNCTION : EVENT_TIMEOUT()
{
	0x00000978 : nop	// , EVENT_TIMEOUT, -1 - SAL : 2569
	0x0000097A : pushc		3	// , EVENT_TIMEOUT, -1 - SAL : 2570
	0x0000097E : calls		Clear(54)	// , EVENT_TIMEOUT, -1 - SAL : 2571
	0x00000982 : ssp	// , EVENT_TIMEOUT, -1 - SAL : 2572
	0x00000984 : pushz		68 ( GameMode )	// , EVENT_TIMEOUT, -1 - SAL : 2573
	0x00000988 : dup	// , EVENT_TIMEOUT, -1 - SAL : 2574
	0x0000098A : eqjp		0		0x000009B6	// , EVENT_TIMEOUT, -1 - SAL : 2575
	0x00000992 : dup	// , EVENT_TIMEOUT, -1 - SAL : 2576
	0x00000994 : eqjp		1		0x000009C4	// , EVENT_TIMEOUT, -1 - SAL : 2577
	0x0000099C : dup	// , EVENT_TIMEOUT, -1 - SAL : 2578
	0x0000099E : eqjp		2		0x000009D2	// , EVENT_TIMEOUT, -1 - SAL : 2579
	0x000009A6 : dup	// , EVENT_TIMEOUT, -1 - SAL : 2580
	0x000009A8 : eqjp		3		0x000009E0	// , EVENT_TIMEOUT, -1 - SAL : 2581
	0x000009B0 : ujp		0x000009E8	// , EVENT_TIMEOUT, -1 - SAL : 2582
	0x000009B6 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2583
	0x000009B8 : call		0x000013CE	// , EVENT_TIMEOUT, -1 - SAL : 2584
	0x000009BE : ujp		0x000009EA	// , EVENT_TIMEOUT, -1 - SAL : 2585
	0x000009C4 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2586
	0x000009C6 : call		0x00001100	// , EVENT_TIMEOUT, -1 - SAL : 2587
	0x000009CC : ujp		0x000009EA	// , EVENT_TIMEOUT, -1 - SAL : 2588
	0x000009D2 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2589
	0x000009D4 : call		0x000010EA	// , EVENT_TIMEOUT, -1 - SAL : 2590
	0x000009DA : ujp		0x000009EA	// , EVENT_TIMEOUT, -1 - SAL : 2591
	0x000009E0 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2592
	0x000009E2 : ujp		0x000009EA	// , EVENT_TIMEOUT, -1 - SAL : 2593
	0x000009E8 : rsp	// , EVENT_TIMEOUT, -1 - SAL : 2594
	0x000009EA : calls		Flush(95)	// , EVENT_TIMEOUT, -1 - SAL : 2595
	0x000009EE : end	// , EVENT_TIMEOUT, -1 - SAL : 2596
}


FUNCTION : ElseEqual()
{
	0x000009F0 : nop	// , ElseEqual, -1 - SAL : 1671
	0x000009F2 : popz		109 ( IfCount of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1672
	0x000009F6 : popz		108 ( Value2 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1673
	0x000009FA : stnz		107 ( Value1 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1674
	0x000009FE : pushi		60 ( Variable )		108 ( Value2 of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1675
	0x00000A04 : ne	// , ElseEqual, -1 - SAL : 1676
	0x00000A06 : fjp		0x00000A12	// , ElseEqual, -1 - SAL : 1677
	0x00000A0C : pushc		0	// , ElseEqual, -1 - SAL : 1678
	0x00000A10 : ret	// , ElseEqual, -1 - SAL : 1679
	0x00000A12 : pushz		109 ( IfCount of Function ElseEqual )	// , ElseEqual, -1 - SAL : 1680
	0x00000A16 : ret	// , ElseEqual, -1 - SAL : 1681
}


FUNCTION : GetTotalDay()
{
	0x00000A18 : nop	// , GetTotalDay, -1 - SAL : 485
	0x00000A1A : popz		71 ( Day of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 486
	0x00000A1E : popz		70 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 487
	0x00000A22 : popz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 488
	0x00000A26 : zsetc		72 ( Total of Function GetTotalDay )		0	// , GetTotalDay, -1 - SAL : 489
	0x00000A2C : zsetc		73 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 490
	0x00000A32 : pushz		73 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 491
	0x00000A36 : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 492
	0x00000A3A : lt	// , GetTotalDay, -1 - SAL : 493
	0x00000A3C : fjp		0x00000AA2	// , GetTotalDay, -1 - SAL : 494
	0x00000A42 : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 495
	0x00000A46 : pushc		4	// , GetTotalDay, -1 - SAL : 496
	0x00000A4A : mod	// , GetTotalDay, -1 - SAL : 497
	0x00000A4C : pushc		0	// , GetTotalDay, -1 - SAL : 498
	0x00000A50 : eq	// , GetTotalDay, -1 - SAL : 499
	0x00000A52 : dup	// , GetTotalDay, -1 - SAL : 500
	0x00000A54 : fjp		0x00000A6E	// , GetTotalDay, -1 - SAL : 501
	0x00000A5A : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 502
	0x00000A5E : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 503
	0x00000A62 : pushc		100	// , GetTotalDay, -1 - SAL : 504
	0x00000A66 : mod	// , GetTotalDay, -1 - SAL : 505
	0x00000A68 : pushc		0	// , GetTotalDay, -1 - SAL : 506
	0x00000A6C : ne	// , GetTotalDay, -1 - SAL : 507
	0x00000A6E : dup	// , GetTotalDay, -1 - SAL : 508
	0x00000A70 : tjp		0x00000A8A	// , GetTotalDay, -1 - SAL : 509
	0x00000A76 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 510
	0x00000A7A : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 511
	0x00000A7E : pushc		400	// , GetTotalDay, -1 - SAL : 512
	0x00000A82 : mod	// , GetTotalDay, -1 - SAL : 513
	0x00000A84 : pushc		0	// , GetTotalDay, -1 - SAL : 514
	0x00000A88 : eq	// , GetTotalDay, -1 - SAL : 515
	0x00000A8A : fjp		0x00000A96	// , GetTotalDay, -1 - SAL : 516
	0x00000A90 : incz		72 ( Total of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 517
	0x00000A96 : incz		73 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 518
	0x00000A9C : ujp		0x00000A32	// , GetTotalDay, -1 - SAL : 519
	0x00000AA2 : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 520
	0x00000AA6 : pushc		4	// , GetTotalDay, -1 - SAL : 521
	0x00000AAA : mod	// , GetTotalDay, -1 - SAL : 522
	0x00000AAC : pushc		0	// , GetTotalDay, -1 - SAL : 523
	0x00000AB0 : eq	// , GetTotalDay, -1 - SAL : 524
	0x00000AB2 : dup	// , GetTotalDay, -1 - SAL : 525
	0x00000AB4 : fjp		0x00000ACE	// , GetTotalDay, -1 - SAL : 526
	0x00000ABA : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 527
	0x00000ABE : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 528
	0x00000AC2 : pushc		100	// , GetTotalDay, -1 - SAL : 529
	0x00000AC6 : mod	// , GetTotalDay, -1 - SAL : 530
	0x00000AC8 : pushc		0	// , GetTotalDay, -1 - SAL : 531
	0x00000ACC : ne	// , GetTotalDay, -1 - SAL : 532
	0x00000ACE : dup	// , GetTotalDay, -1 - SAL : 533
	0x00000AD0 : tjp		0x00000AEA	// , GetTotalDay, -1 - SAL : 534
	0x00000AD6 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 535
	0x00000ADA : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 536
	0x00000ADE : pushc		400	// , GetTotalDay, -1 - SAL : 537
	0x00000AE2 : mod	// , GetTotalDay, -1 - SAL : 538
	0x00000AE4 : pushc		0	// , GetTotalDay, -1 - SAL : 539
	0x00000AE8 : eq	// , GetTotalDay, -1 - SAL : 540
	0x00000AEA : dup	// , GetTotalDay, -1 - SAL : 541
	0x00000AEC : fjp		0x00000B00	// , GetTotalDay, -1 - SAL : 542
	0x00000AF2 : popz		17 ( swReserved3 )	// , GetTotalDay, -1 - SAL : 543
	0x00000AF6 : pushz		70 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 544
	0x00000AFA : pushc		2	// , GetTotalDay, -1 - SAL : 545
	0x00000AFE : gt	// , GetTotalDay, -1 - SAL : 546
	0x00000B00 : fjp		0x00000B0C	// , GetTotalDay, -1 - SAL : 547
	0x00000B06 : incz		72 ( Total of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 548
	0x00000B0C : zsetc		73 ( i of Function GetTotalDay )		0	// , GetTotalDay, -1 - SAL : 549
	0x00000B12 : pushz		73 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 550
	0x00000B16 : pushz		70 ( Month of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 551
	0x00000B1A : dec	// , GetTotalDay, -1 - SAL : 552
	0x00000B1C : lt	// , GetTotalDay, -1 - SAL : 553
	0x00000B1E : fjp		0x00000B40	// , GetTotalDay, -1 - SAL : 554
	0x00000B24 : pushz		72 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 555
	0x00000B28 : pushi		42 ( MONTH )		73 ( i of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 556
	0x00000B2E : add	// , GetTotalDay, -1 - SAL : 557
	0x00000B30 : popz		72 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 558
	0x00000B34 : incz		73 ( i of Function GetTotalDay )		1	// , GetTotalDay, -1 - SAL : 559
	0x00000B3A : ujp		0x00000B12	// , GetTotalDay, -1 - SAL : 560
	0x00000B40 : pushz		72 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 561
	0x00000B44 : pushz		69 ( Year of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 562
	0x00000B48 : pushc		365	// , GetTotalDay, -1 - SAL : 563
	0x00000B4C : mult	// , GetTotalDay, -1 - SAL : 564
	0x00000B4E : add	// , GetTotalDay, -1 - SAL : 565
	0x00000B50 : stnz		72 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 566
	0x00000B54 : addz		71 ( Day of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 567
	0x00000B58 : stnz		72 ( Total of Function GetTotalDay )	// , GetTotalDay, -1 - SAL : 569
	0x00000B5C : ret	// , GetTotalDay, -1 - SAL : 570
}


FUNCTION : GetWeek()
{
	0x00000B5E : nop	// , GetWeek, -1 - SAL : 571
	0x00000B60 : popz		76 ( Day of Function GetWeek )	// , GetWeek, -1 - SAL : 572
	0x00000B64 : popz		75 ( Month of Function GetWeek )	// , GetWeek, -1 - SAL : 573
	0x00000B68 : stnz		74 ( Year of Function GetWeek )	// , GetWeek, -1 - SAL : 574
	0x00000B6C : pushz		75 ( Month of Function GetWeek )	// , GetWeek, -1 - SAL : 575
	0x00000B70 : pushz		76 ( Day of Function GetWeek )	// , GetWeek, -1 - SAL : 576
	0x00000B74 : call		0x00000A18	// , GetWeek, -1 - SAL : 577
	0x00000B7A : pushc		7	// , GetWeek, -1 - SAL : 578
	0x00000B7E : mod	// , GetWeek, -1 - SAL : 579
	0x00000B80 : ret	// , GetWeek, -1 - SAL : 580
}


FUNCTION : IfEqual()
{
	0x00000B82 : nop	// , IfEqual, -1 - SAL : 1660
	0x00000B84 : popz		106 ( ElseCount of Function IfEqual )	// , IfEqual, -1 - SAL : 1661
	0x00000B88 : popz		105 ( Value2 of Function IfEqual )	// , IfEqual, -1 - SAL : 1662
	0x00000B8C : stnz		104 ( Value1 of Function IfEqual )	// , IfEqual, -1 - SAL : 1663
	0x00000B90 : pushi		60 ( Variable )		105 ( Value2 of Function IfEqual )	// , IfEqual, -1 - SAL : 1664
	0x00000B96 : eq	// , IfEqual, -1 - SAL : 1665
	0x00000B98 : fjp		0x00000BA4	// , IfEqual, -1 - SAL : 1666
	0x00000B9E : pushc		0	// , IfEqual, -1 - SAL : 1667
	0x00000BA2 : ret	// , IfEqual, -1 - SAL : 1668
	0x00000BA4 : pushz		106 ( ElseCount of Function IfEqual )	// , IfEqual, -1 - SAL : 1669
	0x00000BA8 : ret	// , IfEqual, -1 - SAL : 1670
}


FUNCTION : InitEvent()
{
	0x00000BAA : nop	// , InitEvent, -1 - SAL : 993
	0x00000BAC : nsetc		48 ( They )		0		0	// , InitEvent, -1 - SAL : 994
	0x00000BB4 : nsetc		48 ( They )		2		1	// , InitEvent, -1 - SAL : 995
	0x00000BBC : nsetc		48 ( They )		4		2	// , InitEvent, -1 - SAL : 996
	0x00000BC4 : ldric		48 ( They )		0	// , InitEvent, -1 - SAL : 997
	0x00000BCA : inc	// , InitEvent, -1 - SAL : 998
	0x00000BCC : pushc		50	// , InitEvent, -1 - SAL : 999
	0x00000BD0 : sta	// , InitEvent, -1 - SAL : 1000
	0x00000BD2 : ldric		48 ( They )		2	// , InitEvent, -1 - SAL : 1001
	0x00000BD8 : inc	// , InitEvent, -1 - SAL : 1002
	0x00000BDA : pushc		0	// , InitEvent, -1 - SAL : 1003
	0x00000BDE : sta	// , InitEvent, -1 - SAL : 1004
	0x00000BE0 : ldric		48 ( They )		4	// , InitEvent, -1 - SAL : 1005
	0x00000BE6 : inc	// , InitEvent, -1 - SAL : 1006
	0x00000BE8 : pushc		-50	// , InitEvent, -1 - SAL : 1007
	0x00000BEC : sta	// , InitEvent, -1 - SAL : 1008
	0x00000BEE : ret	// , InitEvent, -1 - SAL : 1009
}


FUNCTION : InitNature()
{
	0x00000BF0 : nop	// , InitNature, -1 - SAL : 964
	0x00000BF2 : ldrz		47 ( Now )	// , InitNature, -1 - SAL : 965
	0x00000BF6 : pushc		2008	// , InitNature, -1 - SAL : 966
	0x00000BFA : sta	// , InitNature, -1 - SAL : 967
	0x00000BFC : ldrz		47 ( Now )	// , InitNature, -1 - SAL : 968
	0x00000C00 : inc	// , InitNature, -1 - SAL : 969
	0x00000C02 : pushc		12	// , InitNature, -1 - SAL : 970
	0x00000C06 : sta	// , InitNature, -1 - SAL : 971
	0x00000C08 : addldrzc		47 ( Now )		2	// , InitNature, -1 - SAL : 972
	0x00000C0E : pushc		25	// , InitNature, -1 - SAL : 975
	0x00000C12 : sta	// , InitNature, -1 - SAL : 976
	0x00000C14 : addldrzc		47 ( Now )		4	// , InitNature, -1 - SAL : 977
	0x00000C1A : pushc		14	// , InitNature, -1 - SAL : 980
	0x00000C1E : sta	// , InitNature, -1 - SAL : 981
	0x00000C20 : addldrzc		47 ( Now )		5	// , InitNature, -1 - SAL : 982
	0x00000C26 : pushc		34	// , InitNature, -1 - SAL : 985
	0x00000C2A : sta	// , InitNature, -1 - SAL : 986
	0x00000C2C : addldrzc		47 ( Now )		6	// , InitNature, -1 - SAL : 987
	0x00000C32 : pushc		0	// , InitNature, -1 - SAL : 990
	0x00000C36 : sta	// , InitNature, -1 - SAL : 991
	0x00000C38 : ret	// , InitNature, -1 - SAL : 992
}


FUNCTION : PassTime()
{
	0x00000C3A : nop	// , PassTime, -1 - SAL : 1754
	0x00000C3C : popz		122 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1755
	0x00000C40 : popz		121 ( Element of Function PassTime )	// , PassTime, -1 - SAL : 1756
	0x00000C44 : ssp	// , PassTime, -1 - SAL : 1757
	0x00000C46 : pushz		121 ( Element of Function PassTime )	// , PassTime, -1 - SAL : 1758
	0x00000C4A : dup	// , PassTime, -1 - SAL : 1759
	0x00000C4C : eqjp		0		0x00000C84	// , PassTime, -1 - SAL : 1760
	0x00000C54 : dup	// , PassTime, -1 - SAL : 1761
	0x00000C56 : eqjp		1		0x00000C9C	// , PassTime, -1 - SAL : 1762
	0x00000C5E : dup	// , PassTime, -1 - SAL : 1763
	0x00000C60 : eqjp		2		0x00000CF0	// , PassTime, -1 - SAL : 1764
	0x00000C68 : dup	// , PassTime, -1 - SAL : 1765
	0x00000C6A : eqjp		3		0x00000DA4	// , PassTime, -1 - SAL : 1766
	0x00000C72 : dup	// , PassTime, -1 - SAL : 1767
	0x00000C74 : eqjp		4		0x00000DD6	// , PassTime, -1 - SAL : 1768
	0x00000C7C : rsp	// , PassTime, -1 - SAL : 1769
	0x00000C7E : ujp		0x00000E22	// , PassTime, -1 - SAL : 1770
	0x00000C84 : rsp	// , PassTime, -1 - SAL : 1771
	0x00000C86 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1772
	0x00000C8A : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1773
	0x00000C8E : ixa	// , PassTime, -1 - SAL : 1774
	0x00000C90 : addz		122 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1775
	0x00000C94 : sta	// , PassTime, -1 - SAL : 1777
	0x00000C96 : ujp		0x00000E22	// , PassTime, -1 - SAL : 1778
	0x00000C9C : rsp	// , PassTime, -1 - SAL : 1779
	0x00000C9E : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1780
	0x00000CA2 : inc	// , PassTime, -1 - SAL : 1781
	0x00000CA4 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1782
	0x00000CA8 : inc	// , PassTime, -1 - SAL : 1783
	0x00000CAA : ixa	// , PassTime, -1 - SAL : 1784
	0x00000CAC : addz		122 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1785
	0x00000CB0 : sta	// , PassTime, -1 - SAL : 1787
	0x00000CB2 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1788
	0x00000CB6 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1789
	0x00000CBA : ixa	// , PassTime, -1 - SAL : 1790
	0x00000CBC : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1791
	0x00000CC0 : inc	// , PassTime, -1 - SAL : 1792
	0x00000CC2 : ixa	// , PassTime, -1 - SAL : 1793
	0x00000CC4 : dec	// , PassTime, -1 - SAL : 1794
	0x00000CC6 : pushc		12	// , PassTime, -1 - SAL : 1795
	0x00000CCA : div	// , PassTime, -1 - SAL : 1796
	0x00000CCC : add	// , PassTime, -1 - SAL : 1797
	0x00000CCE : sta	// , PassTime, -1 - SAL : 1798
	0x00000CD0 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1799
	0x00000CD4 : inc	// , PassTime, -1 - SAL : 1800
	0x00000CD6 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1801
	0x00000CDA : inc	// , PassTime, -1 - SAL : 1802
	0x00000CDC : ixa	// , PassTime, -1 - SAL : 1803
	0x00000CDE : dec	// , PassTime, -1 - SAL : 1804
	0x00000CE0 : pushc		12	// , PassTime, -1 - SAL : 1805
	0x00000CE4 : mod	// , PassTime, -1 - SAL : 1806
	0x00000CE6 : inc	// , PassTime, -1 - SAL : 1807
	0x00000CE8 : sta	// , PassTime, -1 - SAL : 1808
	0x00000CEA : ujp		0x00000E22	// , PassTime, -1 - SAL : 1809
	0x00000CF0 : rsp	// , PassTime, -1 - SAL : 1810
	0x00000CF2 : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 1811
	0x00000CF8 : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 1814
	0x00000CFE : ixa	// , PassTime, -1 - SAL : 1817
	0x00000D00 : addz		122 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1818
	0x00000D04 : sta	// , PassTime, -1 - SAL : 1820
	0x00000D06 : pushz		123 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 1821
	0x00000D0A : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 1822
	0x00000D10 : ixa	// , PassTime, -1 - SAL : 1825
	0x00000D12 : dec	// , PassTime, -1 - SAL : 1826
	0x00000D14 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1827
	0x00000D18 : inc	// , PassTime, -1 - SAL : 1828
	0x00000D1A : ixa	// , PassTime, -1 - SAL : 1829
	0x00000D1C : ldrz		42 ( MONTH )	// , PassTime, -1 - SAL : 1830
	0x00000D20 : add	// , PassTime, -1 - SAL : 1831
	0x00000D22 : ixa	// , PassTime, -1 - SAL : 1832
	0x00000D24 : div	// , PassTime, -1 - SAL : 1833
	0x00000D26 : add	// , PassTime, -1 - SAL : 1834
	0x00000D28 : popz		123 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 1835
	0x00000D2C : addldrzc		47 ( Now )		2	// , PassTime, -1 - SAL : 1836
	0x00000D32 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1839
	0x00000D36 : inc	// , PassTime, -1 - SAL : 1840
	0x00000D38 : ixa	// , PassTime, -1 - SAL : 1841
	0x00000D3A : dec	// , PassTime, -1 - SAL : 1842
	0x00000D3C : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1843
	0x00000D40 : inc	// , PassTime, -1 - SAL : 1844
	0x00000D42 : ixa	// , PassTime, -1 - SAL : 1845
	0x00000D44 : ldrz		42 ( MONTH )	// , PassTime, -1 - SAL : 1846
	0x00000D48 : add	// , PassTime, -1 - SAL : 1847
	0x00000D4A : ixa	// , PassTime, -1 - SAL : 1848
	0x00000D4C : mod	// , PassTime, -1 - SAL : 1849
	0x00000D4E : inc	// , PassTime, -1 - SAL : 1850
	0x00000D50 : sta	// , PassTime, -1 - SAL : 1851
	0x00000D52 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1852
	0x00000D56 : inc	// , PassTime, -1 - SAL : 1853
	0x00000D58 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1854
	0x00000D5C : inc	// , PassTime, -1 - SAL : 1855
	0x00000D5E : ixa	// , PassTime, -1 - SAL : 1856
	0x00000D60 : addz		123 ( TempCount of Function PassTime )	// , PassTime, -1 - SAL : 1857
	0x00000D64 : sta	// , PassTime, -1 - SAL : 1859
	0x00000D66 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1860
	0x00000D6A : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1861
	0x00000D6E : ixa	// , PassTime, -1 - SAL : 1862
	0x00000D70 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1863
	0x00000D74 : inc	// , PassTime, -1 - SAL : 1864
	0x00000D76 : ixa	// , PassTime, -1 - SAL : 1865
	0x00000D78 : dec	// , PassTime, -1 - SAL : 1866
	0x00000D7A : pushc		12	// , PassTime, -1 - SAL : 1867
	0x00000D7E : div	// , PassTime, -1 - SAL : 1868
	0x00000D80 : add	// , PassTime, -1 - SAL : 1869
	0x00000D82 : sta	// , PassTime, -1 - SAL : 1870
	0x00000D84 : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1871
	0x00000D88 : inc	// , PassTime, -1 - SAL : 1872
	0x00000D8A : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1873
	0x00000D8E : inc	// , PassTime, -1 - SAL : 1874
	0x00000D90 : ixa	// , PassTime, -1 - SAL : 1875
	0x00000D92 : dec	// , PassTime, -1 - SAL : 1876
	0x00000D94 : pushc		12	// , PassTime, -1 - SAL : 1877
	0x00000D98 : mod	// , PassTime, -1 - SAL : 1878
	0x00000D9A : inc	// , PassTime, -1 - SAL : 1879
	0x00000D9C : sta	// , PassTime, -1 - SAL : 1880
	0x00000D9E : ujp		0x00000E22	// , PassTime, -1 - SAL : 1881
	0x00000DA4 : rsp	// , PassTime, -1 - SAL : 1882
	0x00000DA6 : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 1883
	0x00000DAC : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 1886
	0x00000DB2 : ixa	// , PassTime, -1 - SAL : 1889
	0x00000DB4 : addz		122 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1890
	0x00000DB8 : sta	// , PassTime, -1 - SAL : 1892
	0x00000DBA : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 1893
	0x00000DC0 : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 1896
	0x00000DC6 : ixa	// , PassTime, -1 - SAL : 1899
	0x00000DC8 : pushc		24	// , PassTime, -1 - SAL : 1900
	0x00000DCC : mod	// , PassTime, -1 - SAL : 1901
	0x00000DCE : sta	// , PassTime, -1 - SAL : 1902
	0x00000DD0 : ujp		0x00000E22	// , PassTime, -1 - SAL : 1903
	0x00000DD6 : rsp	// , PassTime, -1 - SAL : 1904
	0x00000DD8 : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 1905
	0x00000DDE : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 1908
	0x00000DE4 : ixa	// , PassTime, -1 - SAL : 1911
	0x00000DE6 : addz		122 ( Count of Function PassTime )	// , PassTime, -1 - SAL : 1912
	0x00000DEA : sta	// , PassTime, -1 - SAL : 1914
	0x00000DEC : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 1915
	0x00000DF2 : addldrzc		47 ( Now )		4	// , PassTime, -1 - SAL : 1918
	0x00000DF8 : ixa	// , PassTime, -1 - SAL : 1921
	0x00000DFA : ldrz		47 ( Now )	// , PassTime, -1 - SAL : 1922
	0x00000DFE : inc	// , PassTime, -1 - SAL : 1923
	0x00000E00 : ixa	// , PassTime, -1 - SAL : 1924
	0x00000E02 : pushc		60	// , PassTime, -1 - SAL : 1925
	0x00000E06 : div	// , PassTime, -1 - SAL : 1926
	0x00000E08 : add	// , PassTime, -1 - SAL : 1927
	0x00000E0A : sta	// , PassTime, -1 - SAL : 1928
	0x00000E0C : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 1929
	0x00000E12 : addldrzc		47 ( Now )		5	// , PassTime, -1 - SAL : 1932
	0x00000E18 : ixa	// , PassTime, -1 - SAL : 1935
	0x00000E1A : pushc		60	// , PassTime, -1 - SAL : 1936
	0x00000E1E : mod	// , PassTime, -1 - SAL : 1937
	0x00000E20 : sta	// , PassTime, -1 - SAL : 1938
	0x00000E22 : ret	// , PassTime, -1 - SAL : 1939
}


FUNCTION : RunEventLine()
{
	0x00000E24 : nop	// , RunEventLine, -1 - SAL : 1189
	0x00000E26 : ssp	// , RunEventLine, -1 - SAL : 1190
	0x00000E28 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1191
	0x00000E2C : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1192
	0x00000E32 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1193
	0x00000E36 : add	// , RunEventLine, -1 - SAL : 1194
	0x00000E38 : ixa	// , RunEventLine, -1 - SAL : 1195
	0x00000E3A : dup	// , RunEventLine, -1 - SAL : 1196
	0x00000E3C : eqjp		-1		0x00000E9A	// , RunEventLine, -1 - SAL : 1197
	0x00000E44 : dup	// , RunEventLine, -1 - SAL : 1198
	0x00000E46 : eqjp		0		0x00000EA8	// , RunEventLine, -1 - SAL : 1199
	0x00000E4E : dup	// , RunEventLine, -1 - SAL : 1200
	0x00000E50 : eqjp		1		0x00000EF8	// , RunEventLine, -1 - SAL : 1201
	0x00000E58 : dup	// , RunEventLine, -1 - SAL : 1202
	0x00000E5A : eqjp		2		0x00000F8A	// , RunEventLine, -1 - SAL : 1203
	0x00000E62 : dup	// , RunEventLine, -1 - SAL : 1204
	0x00000E64 : eqjp		3		0x00000FBC	// , RunEventLine, -1 - SAL : 1205
	0x00000E6C : dup	// , RunEventLine, -1 - SAL : 1206
	0x00000E6E : eqjp		4		0x00001000	// , RunEventLine, -1 - SAL : 1207
	0x00000E76 : dup	// , RunEventLine, -1 - SAL : 1208
	0x00000E78 : eqjp		5		0x00001044	// , RunEventLine, -1 - SAL : 1209
	0x00000E80 : dup	// , RunEventLine, -1 - SAL : 1210
	0x00000E82 : eqjp		6		0x000010A6	// , RunEventLine, -1 - SAL : 1211
	0x00000E8A : dup	// , RunEventLine, -1 - SAL : 1212
	0x00000E8C : eqjp		7		0x000010D8	// , RunEventLine, -1 - SAL : 1213
	0x00000E94 : ujp		0x000010E0	// , RunEventLine, -1 - SAL : 1214
	0x00000E9A : rsp	// , RunEventLine, -1 - SAL : 1215
	0x00000E9C : zsetc		56 ( EventPointer )		0	// , RunEventLine, -1 - SAL : 1216
	0x00000EA2 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1217
	0x00000EA8 : rsp	// , RunEventLine, -1 - SAL : 1218
	0x00000EAA : pushz		67 ( NextKey )	// , RunEventLine, -1 - SAL : 1219
	0x00000EAE : nejp		20		0x00000ED4	// , RunEventLine, -1 - SAL : 1220
	0x00000EB6 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1221
	0x00000EBA : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1222
	0x00000EC0 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1223
	0x00000EC4 : add	// , RunEventLine, -1 - SAL : 1224
	0x00000EC6 : ixa	// , RunEventLine, -1 - SAL : 1225
	0x00000EC8 : call		0x00000398	// , RunEventLine, -1 - SAL : 1226
	0x00000ECE : ujp		0x00000EEC	// , RunEventLine, -1 - SAL : 1227
	0x00000ED4 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1228
	0x00000ED8 : incz		56 ( EventPointer )		-1	// , RunEventLine, -1 - SAL : 1229
	0x00000EDE : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1230
	0x00000EE2 : add	// , RunEventLine, -1 - SAL : 1231
	0x00000EE4 : ixa	// , RunEventLine, -1 - SAL : 1232
	0x00000EE6 : call		0x00000398	// , RunEventLine, -1 - SAL : 1233
	0x00000EEC : zsetc		67 ( NextKey )		-1	// , RunEventLine, -1 - SAL : 1234
	0x00000EF2 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1235
	0x00000EF8 : rsp	// , RunEventLine, -1 - SAL : 1236
	0x00000EFA : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1237
	0x00000EFE : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1238
	0x00000F04 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1239
	0x00000F08 : add	// , RunEventLine, -1 - SAL : 1240
	0x00000F0A : ixa	// , RunEventLine, -1 - SAL : 1241
	0x00000F0C : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1242
	0x00000F10 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1243
	0x00000F16 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1244
	0x00000F1A : add	// , RunEventLine, -1 - SAL : 1245
	0x00000F1C : ixa	// , RunEventLine, -1 - SAL : 1246
	0x00000F1E : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1247
	0x00000F22 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1248
	0x00000F28 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1249
	0x00000F2C : add	// , RunEventLine, -1 - SAL : 1250
	0x00000F2E : ixa	// , RunEventLine, -1 - SAL : 1251
	0x00000F30 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1252
	0x00000F34 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1253
	0x00000F3A : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1254
	0x00000F3E : add	// , RunEventLine, -1 - SAL : 1255
	0x00000F40 : ixa	// , RunEventLine, -1 - SAL : 1256
	0x00000F42 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1257
	0x00000F46 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1258
	0x00000F4C : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1259
	0x00000F50 : add	// , RunEventLine, -1 - SAL : 1260
	0x00000F52 : ixa	// , RunEventLine, -1 - SAL : 1261
	0x00000F54 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1262
	0x00000F58 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1263
	0x00000F5E : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1264
	0x00000F62 : add	// , RunEventLine, -1 - SAL : 1265
	0x00000F64 : ixa	// , RunEventLine, -1 - SAL : 1266
	0x00000F66 : call		0x000005AE	// , RunEventLine, -1 - SAL : 1267
	0x00000F6C : pushz		67 ( NextKey )	// , RunEventLine, -1 - SAL : 1268
	0x00000F70 : eqjp		20		0x00000F7E	// , RunEventLine, -1 - SAL : 1269
	0x00000F78 : incz		56 ( EventPointer )		-7	// , RunEventLine, -1 - SAL : 1270
	0x00000F7E : zsetc		67 ( NextKey )		-1	// , RunEventLine, -1 - SAL : 1271
	0x00000F84 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1272
	0x00000F8A : rsp	// , RunEventLine, -1 - SAL : 1273
	0x00000F8C : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1274
	0x00000F90 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1275
	0x00000F96 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1276
	0x00000F9A : add	// , RunEventLine, -1 - SAL : 1277
	0x00000F9C : ixa	// , RunEventLine, -1 - SAL : 1278
	0x00000F9E : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1279
	0x00000FA2 : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1280
	0x00000FA8 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1281
	0x00000FAC : add	// , RunEventLine, -1 - SAL : 1282
	0x00000FAE : ixa	// , RunEventLine, -1 - SAL : 1283
	0x00000FB0 : call		0x00001B4C	// , RunEventLine, -1 - SAL : 1284
	0x00000FB6 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1285
	0x00000FBC : rsp	// , RunEventLine, -1 - SAL : 1286
	0x00000FBE : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1287
	0x00000FC2 : pushc		3	// , RunEventLine, -1 - SAL : 1288
	0x00000FC6 : pushi		54 ( EventLine )		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1289
	0x00000FCC : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1290
	0x00000FD0 : inc	// , RunEventLine, -1 - SAL : 1291
	0x00000FD2 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1292
	0x00000FD6 : add	// , RunEventLine, -1 - SAL : 1293
	0x00000FD8 : ixa	// , RunEventLine, -1 - SAL : 1294
	0x00000FDA : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1295
	0x00000FDE : pushc		2	// , RunEventLine, -1 - SAL : 1296
	0x00000FE2 : add	// , RunEventLine, -1 - SAL : 1297
	0x00000FE4 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1298
	0x00000FE8 : add	// , RunEventLine, -1 - SAL : 1299
	0x00000FEA : ixa	// , RunEventLine, -1 - SAL : 1300
	0x00000FEC : call		0x00000B82	// , RunEventLine, -1 - SAL : 1301
	0x00000FF2 : add	// , RunEventLine, -1 - SAL : 1302
	0x00000FF4 : add	// , RunEventLine, -1 - SAL : 1303
	0x00000FF6 : popz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1304
	0x00000FFA : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1305
	0x00001000 : rsp	// , RunEventLine, -1 - SAL : 1306
	0x00001002 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1307
	0x00001006 : pushc		3	// , RunEventLine, -1 - SAL : 1308
	0x0000100A : pushi		54 ( EventLine )		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1309
	0x00001010 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1310
	0x00001014 : inc	// , RunEventLine, -1 - SAL : 1311
	0x00001016 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1312
	0x0000101A : add	// , RunEventLine, -1 - SAL : 1313
	0x0000101C : ixa	// , RunEventLine, -1 - SAL : 1314
	0x0000101E : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1315
	0x00001022 : pushc		2	// , RunEventLine, -1 - SAL : 1316
	0x00001026 : add	// , RunEventLine, -1 - SAL : 1317
	0x00001028 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1318
	0x0000102C : add	// , RunEventLine, -1 - SAL : 1319
	0x0000102E : ixa	// , RunEventLine, -1 - SAL : 1320
	0x00001030 : call		0x000009F0	// , RunEventLine, -1 - SAL : 1321
	0x00001036 : add	// , RunEventLine, -1 - SAL : 1322
	0x00001038 : add	// , RunEventLine, -1 - SAL : 1323
	0x0000103A : popz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1324
	0x0000103E : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1325
	0x00001044 : rsp	// , RunEventLine, -1 - SAL : 1326
	0x00001046 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1327
	0x0000104A : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1328
	0x00001050 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1329
	0x00001054 : add	// , RunEventLine, -1 - SAL : 1330
	0x00001056 : ixa	// , RunEventLine, -1 - SAL : 1331
	0x00001058 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1332
	0x0000105C : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1333
	0x00001062 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1334
	0x00001066 : add	// , RunEventLine, -1 - SAL : 1335
	0x00001068 : ixa	// , RunEventLine, -1 - SAL : 1336
	0x0000106A : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1337
	0x0000106E : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1338
	0x00001074 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1339
	0x00001078 : add	// , RunEventLine, -1 - SAL : 1340
	0x0000107A : ixa	// , RunEventLine, -1 - SAL : 1341
	0x0000107C : call		0x00001AE4	// , RunEventLine, -1 - SAL : 1342
	0x00001082 : pushz		59 ( EffectFrame )	// , RunEventLine, -1 - SAL : 1343
	0x00001086 : gejp		10		0x0000109A	// , RunEventLine, -1 - SAL : 1344
	0x0000108E : incz		56 ( EventPointer )		-4	// , RunEventLine, -1 - SAL : 1345
	0x00001094 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1346
	0x0000109A : zsetc		59 ( EffectFrame )		0	// , RunEventLine, -1 - SAL : 1347
	0x000010A0 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1348
	0x000010A6 : rsp	// , RunEventLine, -1 - SAL : 1349
	0x000010A8 : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1350
	0x000010AC : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1351
	0x000010B2 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1352
	0x000010B6 : add	// , RunEventLine, -1 - SAL : 1353
	0x000010B8 : ixa	// , RunEventLine, -1 - SAL : 1354
	0x000010BA : pushz		56 ( EventPointer )	// , RunEventLine, -1 - SAL : 1355
	0x000010BE : incz		56 ( EventPointer )		1	// , RunEventLine, -1 - SAL : 1356
	0x000010C4 : ldrz		54 ( EventLine )	// , RunEventLine, -1 - SAL : 1357
	0x000010C8 : add	// , RunEventLine, -1 - SAL : 1358
	0x000010CA : ixa	// , RunEventLine, -1 - SAL : 1359
	0x000010CC : call		0x00001B34	// , RunEventLine, -1 - SAL : 1360
	0x000010D2 : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1361
	0x000010D8 : rsp	// , RunEventLine, -1 - SAL : 1362
	0x000010DA : ujp		0x000010E8	// , RunEventLine, -1 - SAL : 1363
	0x000010E0 : rsp	// , RunEventLine, -1 - SAL : 1364
	0x000010E2 : zsetc		56 ( EventPointer )		0	// , RunEventLine, -1 - SAL : 1365
	0x000010E8 : ret	// , RunEventLine, -1 - SAL : 1366
}


FUNCTION : RunMainPlay()
{
	0x000010EA : nop	// , RunMainPlay, -1 - SAL : 1184
	0x000010EC : call		0x00000104	// , RunMainPlay, -1 - SAL : 1185
	0x000010F2 : call		0x00000E24	// , RunMainPlay, -1 - SAL : 1186
	0x000010F8 : call		0x000001C0	// , RunMainPlay, -1 - SAL : 1187
	0x000010FE : ret	// , RunMainPlay, -1 - SAL : 1188
}


FUNCTION : RunPrologue()
{
	0x00001100 : nop	// , RunPrologue, -1 - SAL : 2317
	0x00001102 : call		0x00000104	// , RunPrologue, -1 - SAL : 2318
	0x00001108 : call		0x00001110	// , RunPrologue, -1 - SAL : 2319
	0x0000110E : ret	// , RunPrologue, -1 - SAL : 2320
}


FUNCTION : RunPrologueEvent()
{
	0x00001110 : nop	// , RunPrologueEvent, -1 - SAL : 2321
	0x00001112 : ssp	// , RunPrologueEvent, -1 - SAL : 2322
	0x00001114 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2323
	0x00001118 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2324
	0x0000111E : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2325
	0x00001122 : add	// , RunPrologueEvent, -1 - SAL : 2326
	0x00001124 : ixa	// , RunPrologueEvent, -1 - SAL : 2327
	0x00001126 : dup	// , RunPrologueEvent, -1 - SAL : 2328
	0x00001128 : eqjp		-1		0x0000117C	// , RunPrologueEvent, -1 - SAL : 2329
	0x00001130 : dup	// , RunPrologueEvent, -1 - SAL : 2330
	0x00001132 : eqjp		0		0x00001194	// , RunPrologueEvent, -1 - SAL : 2331
	0x0000113A : dup	// , RunPrologueEvent, -1 - SAL : 2332
	0x0000113C : eqjp		1		0x000011E4	// , RunPrologueEvent, -1 - SAL : 2333
	0x00001144 : dup	// , RunPrologueEvent, -1 - SAL : 2334
	0x00001146 : eqjp		2		0x00001276	// , RunPrologueEvent, -1 - SAL : 2335
	0x0000114E : dup	// , RunPrologueEvent, -1 - SAL : 2336
	0x00001150 : eqjp		3		0x000012A8	// , RunPrologueEvent, -1 - SAL : 2337
	0x00001158 : dup	// , RunPrologueEvent, -1 - SAL : 2338
	0x0000115A : eqjp		4		0x000012EC	// , RunPrologueEvent, -1 - SAL : 2339
	0x00001162 : dup	// , RunPrologueEvent, -1 - SAL : 2340
	0x00001164 : eqjp		5		0x00001330	// , RunPrologueEvent, -1 - SAL : 2341
	0x0000116C : dup	// , RunPrologueEvent, -1 - SAL : 2342
	0x0000116E : eqjp		6		0x00001392	// , RunPrologueEvent, -1 - SAL : 2343
	0x00001176 : ujp		0x000013C4	// , RunPrologueEvent, -1 - SAL : 2344
	0x0000117C : rsp	// , RunPrologueEvent, -1 - SAL : 2345
	0x0000117E : zsetc		64 ( PrologueEventPointer )		0	// , RunPrologueEvent, -1 - SAL : 2346
	0x00001184 : pushc		2	// , RunPrologueEvent, -1 - SAL : 2347
	0x00001188 : call		0x0000008E	// , RunPrologueEvent, -1 - SAL : 2348
	0x0000118E : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2349
	0x00001194 : rsp	// , RunPrologueEvent, -1 - SAL : 2350
	0x00001196 : pushz		67 ( NextKey )	// , RunPrologueEvent, -1 - SAL : 2351
	0x0000119A : nejp		20		0x000011C0	// , RunPrologueEvent, -1 - SAL : 2352
	0x000011A2 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2353
	0x000011A6 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2354
	0x000011AC : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2355
	0x000011B0 : add	// , RunPrologueEvent, -1 - SAL : 2356
	0x000011B2 : ixa	// , RunPrologueEvent, -1 - SAL : 2357
	0x000011B4 : call		0x00000398	// , RunPrologueEvent, -1 - SAL : 2358
	0x000011BA : ujp		0x000011D8	// , RunPrologueEvent, -1 - SAL : 2359
	0x000011C0 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2360
	0x000011C4 : incz		64 ( PrologueEventPointer )		-1	// , RunPrologueEvent, -1 - SAL : 2361
	0x000011CA : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2362
	0x000011CE : add	// , RunPrologueEvent, -1 - SAL : 2363
	0x000011D0 : ixa	// , RunPrologueEvent, -1 - SAL : 2364
	0x000011D2 : call		0x00000398	// , RunPrologueEvent, -1 - SAL : 2365
	0x000011D8 : zsetc		67 ( NextKey )		-1	// , RunPrologueEvent, -1 - SAL : 2366
	0x000011DE : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2367
	0x000011E4 : rsp	// , RunPrologueEvent, -1 - SAL : 2368
	0x000011E6 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2369
	0x000011EA : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2370
	0x000011F0 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2371
	0x000011F4 : add	// , RunPrologueEvent, -1 - SAL : 2372
	0x000011F6 : ixa	// , RunPrologueEvent, -1 - SAL : 2373
	0x000011F8 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2374
	0x000011FC : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2375
	0x00001202 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2376
	0x00001206 : add	// , RunPrologueEvent, -1 - SAL : 2377
	0x00001208 : ixa	// , RunPrologueEvent, -1 - SAL : 2378
	0x0000120A : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2379
	0x0000120E : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2380
	0x00001214 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2381
	0x00001218 : add	// , RunPrologueEvent, -1 - SAL : 2382
	0x0000121A : ixa	// , RunPrologueEvent, -1 - SAL : 2383
	0x0000121C : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2384
	0x00001220 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2385
	0x00001226 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2386
	0x0000122A : add	// , RunPrologueEvent, -1 - SAL : 2387
	0x0000122C : ixa	// , RunPrologueEvent, -1 - SAL : 2388
	0x0000122E : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2389
	0x00001232 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2390
	0x00001238 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2391
	0x0000123C : add	// , RunPrologueEvent, -1 - SAL : 2392
	0x0000123E : ixa	// , RunPrologueEvent, -1 - SAL : 2393
	0x00001240 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2394
	0x00001244 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2395
	0x0000124A : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2396
	0x0000124E : add	// , RunPrologueEvent, -1 - SAL : 2397
	0x00001250 : ixa	// , RunPrologueEvent, -1 - SAL : 2398
	0x00001252 : call		0x000005AE	// , RunPrologueEvent, -1 - SAL : 2399
	0x00001258 : pushz		67 ( NextKey )	// , RunPrologueEvent, -1 - SAL : 2400
	0x0000125C : eqjp		20		0x0000126A	// , RunPrologueEvent, -1 - SAL : 2401
	0x00001264 : incz		64 ( PrologueEventPointer )		-7	// , RunPrologueEvent, -1 - SAL : 2402
	0x0000126A : zsetc		67 ( NextKey )		-1	// , RunPrologueEvent, -1 - SAL : 2403
	0x00001270 : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2404
	0x00001276 : rsp	// , RunPrologueEvent, -1 - SAL : 2405
	0x00001278 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2406
	0x0000127C : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2407
	0x00001282 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2408
	0x00001286 : add	// , RunPrologueEvent, -1 - SAL : 2409
	0x00001288 : ixa	// , RunPrologueEvent, -1 - SAL : 2410
	0x0000128A : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2411
	0x0000128E : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2412
	0x00001294 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2413
	0x00001298 : add	// , RunPrologueEvent, -1 - SAL : 2414
	0x0000129A : ixa	// , RunPrologueEvent, -1 - SAL : 2415
	0x0000129C : call		0x00001B4C	// , RunPrologueEvent, -1 - SAL : 2416
	0x000012A2 : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2417
	0x000012A8 : rsp	// , RunPrologueEvent, -1 - SAL : 2418
	0x000012AA : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2419
	0x000012AE : pushc		3	// , RunPrologueEvent, -1 - SAL : 2420
	0x000012B2 : pushi		65 ( PrologueEventList )		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2421
	0x000012B8 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2422
	0x000012BC : inc	// , RunPrologueEvent, -1 - SAL : 2423
	0x000012BE : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2424
	0x000012C2 : add	// , RunPrologueEvent, -1 - SAL : 2425
	0x000012C4 : ixa	// , RunPrologueEvent, -1 - SAL : 2426
	0x000012C6 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2427
	0x000012CA : pushc		2	// , RunPrologueEvent, -1 - SAL : 2428
	0x000012CE : add	// , RunPrologueEvent, -1 - SAL : 2429
	0x000012D0 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2430
	0x000012D4 : add	// , RunPrologueEvent, -1 - SAL : 2431
	0x000012D6 : ixa	// , RunPrologueEvent, -1 - SAL : 2432
	0x000012D8 : call		0x00000B82	// , RunPrologueEvent, -1 - SAL : 2433
	0x000012DE : add	// , RunPrologueEvent, -1 - SAL : 2434
	0x000012E0 : add	// , RunPrologueEvent, -1 - SAL : 2435
	0x000012E2 : popz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2436
	0x000012E6 : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2437
	0x000012EC : rsp	// , RunPrologueEvent, -1 - SAL : 2438
	0x000012EE : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2439
	0x000012F2 : pushc		3	// , RunPrologueEvent, -1 - SAL : 2440
	0x000012F6 : pushi		65 ( PrologueEventList )		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2441
	0x000012FC : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2442
	0x00001300 : inc	// , RunPrologueEvent, -1 - SAL : 2443
	0x00001302 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2444
	0x00001306 : add	// , RunPrologueEvent, -1 - SAL : 2445
	0x00001308 : ixa	// , RunPrologueEvent, -1 - SAL : 2446
	0x0000130A : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2447
	0x0000130E : pushc		2	// , RunPrologueEvent, -1 - SAL : 2448
	0x00001312 : add	// , RunPrologueEvent, -1 - SAL : 2449
	0x00001314 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2450
	0x00001318 : add	// , RunPrologueEvent, -1 - SAL : 2451
	0x0000131A : ixa	// , RunPrologueEvent, -1 - SAL : 2452
	0x0000131C : call		0x000009F0	// , RunPrologueEvent, -1 - SAL : 2453
	0x00001322 : add	// , RunPrologueEvent, -1 - SAL : 2454
	0x00001324 : add	// , RunPrologueEvent, -1 - SAL : 2455
	0x00001326 : popz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2456
	0x0000132A : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2457
	0x00001330 : rsp	// , RunPrologueEvent, -1 - SAL : 2458
	0x00001332 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2459
	0x00001336 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2460
	0x0000133C : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2461
	0x00001340 : add	// , RunPrologueEvent, -1 - SAL : 2462
	0x00001342 : ixa	// , RunPrologueEvent, -1 - SAL : 2463
	0x00001344 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2464
	0x00001348 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2465
	0x0000134E : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2466
	0x00001352 : add	// , RunPrologueEvent, -1 - SAL : 2467
	0x00001354 : ixa	// , RunPrologueEvent, -1 - SAL : 2468
	0x00001356 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2469
	0x0000135A : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2470
	0x00001360 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2471
	0x00001364 : add	// , RunPrologueEvent, -1 - SAL : 2472
	0x00001366 : ixa	// , RunPrologueEvent, -1 - SAL : 2473
	0x00001368 : call		0x00001AE4	// , RunPrologueEvent, -1 - SAL : 2474
	0x0000136E : pushz		59 ( EffectFrame )	// , RunPrologueEvent, -1 - SAL : 2475
	0x00001372 : gejp		10		0x00001386	// , RunPrologueEvent, -1 - SAL : 2476
	0x0000137A : incz		64 ( PrologueEventPointer )		-4	// , RunPrologueEvent, -1 - SAL : 2477
	0x00001380 : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2478
	0x00001386 : zsetc		59 ( EffectFrame )		0	// , RunPrologueEvent, -1 - SAL : 2479
	0x0000138C : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2480
	0x00001392 : rsp	// , RunPrologueEvent, -1 - SAL : 2481
	0x00001394 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2482
	0x00001398 : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2483
	0x0000139E : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2484
	0x000013A2 : add	// , RunPrologueEvent, -1 - SAL : 2485
	0x000013A4 : ixa	// , RunPrologueEvent, -1 - SAL : 2486
	0x000013A6 : pushz		64 ( PrologueEventPointer )	// , RunPrologueEvent, -1 - SAL : 2487
	0x000013AA : incz		64 ( PrologueEventPointer )		1	// , RunPrologueEvent, -1 - SAL : 2488
	0x000013B0 : ldrz		65 ( PrologueEventList )	// , RunPrologueEvent, -1 - SAL : 2489
	0x000013B4 : add	// , RunPrologueEvent, -1 - SAL : 2490
	0x000013B6 : ixa	// , RunPrologueEvent, -1 - SAL : 2491
	0x000013B8 : call		0x00001B34	// , RunPrologueEvent, -1 - SAL : 2492
	0x000013BE : ujp		0x000013CC	// , RunPrologueEvent, -1 - SAL : 2493
	0x000013C4 : rsp	// , RunPrologueEvent, -1 - SAL : 2494
	0x000013C6 : zsetc		64 ( PrologueEventPointer )		0	// , RunPrologueEvent, -1 - SAL : 2495
	0x000013CC : ret	// , RunPrologueEvent, -1 - SAL : 2496
}


FUNCTION : RunTitle()
{
	0x000013CE : nop	// , RunTitle, -1 - SAL : 1940
	0x000013D0 : call		0x00001822	// , RunTitle, -1 - SAL : 1941
	0x000013D6 : call		0x000007D8	// , RunTitle, -1 - SAL : 1942
	0x000013DC : zsetc		67 ( NextKey )		0	// , RunTitle, -1 - SAL : 1943
	0x000013E2 : ret	// , RunTitle, -1 - SAL : 1944
}


FUNCTION : ScreenEffect()
{
	0x000013E4 : nop	// , ScreenEffect, -1 - SAL : 581
	0x000013E6 : popz		79 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 582
	0x000013EA : popz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 583
	0x000013EE : popz		77 ( Type of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 584
	0x000013F2 : ssp	// , ScreenEffect, -1 - SAL : 585
	0x000013F4 : pushz		77 ( Type of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 586
	0x000013F8 : dup	// , ScreenEffect, -1 - SAL : 587
	0x000013FA : eqjp		0		0x0000141E	// , ScreenEffect, -1 - SAL : 588
	0x00001402 : dup	// , ScreenEffect, -1 - SAL : 589
	0x00001404 : eqjp		1		0x00001578	// , ScreenEffect, -1 - SAL : 590
	0x0000140C : dup	// , ScreenEffect, -1 - SAL : 591
	0x0000140E : eqjp		2		0x00001722	// , ScreenEffect, -1 - SAL : 592
	0x00001416 : rsp	// , ScreenEffect, -1 - SAL : 593
	0x00001418 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 594
	0x0000141E : rsp	// , ScreenEffect, -1 - SAL : 595
	0x00001420 : ssp	// , ScreenEffect, -1 - SAL : 596
	0x00001422 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 597
	0x00001426 : dup	// , ScreenEffect, -1 - SAL : 598
	0x00001428 : eqjp		0		0x00001492	// , ScreenEffect, -1 - SAL : 599
	0x00001430 : dup	// , ScreenEffect, -1 - SAL : 600
	0x00001432 : eqjp		1		0x000014B2	// , ScreenEffect, -1 - SAL : 601
	0x0000143A : dup	// , ScreenEffect, -1 - SAL : 602
	0x0000143C : eqjp		2		0x000014D2	// , ScreenEffect, -1 - SAL : 603
	0x00001444 : dup	// , ScreenEffect, -1 - SAL : 604
	0x00001446 : eqjp		3		0x000014F2	// , ScreenEffect, -1 - SAL : 605
	0x0000144E : dup	// , ScreenEffect, -1 - SAL : 606
	0x00001450 : eqjp		4		0x000014F2	// , ScreenEffect, -1 - SAL : 607
	0x00001458 : dup	// , ScreenEffect, -1 - SAL : 608
	0x0000145A : eqjp		5		0x000014F2	// , ScreenEffect, -1 - SAL : 609
	0x00001462 : dup	// , ScreenEffect, -1 - SAL : 610
	0x00001464 : eqjp		6		0x000014F2	// , ScreenEffect, -1 - SAL : 611
	0x0000146C : dup	// , ScreenEffect, -1 - SAL : 612
	0x0000146E : eqjp		7		0x00001512	// , ScreenEffect, -1 - SAL : 613
	0x00001476 : dup	// , ScreenEffect, -1 - SAL : 614
	0x00001478 : eqjp		8		0x00001532	// , ScreenEffect, -1 - SAL : 615
	0x00001480 : dup	// , ScreenEffect, -1 - SAL : 616
	0x00001482 : eqjp		9		0x00001552	// , ScreenEffect, -1 - SAL : 617
	0x0000148A : rsp	// , ScreenEffect, -1 - SAL : 618
	0x0000148C : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 619
	0x00001492 : rsp	// , ScreenEffect, -1 - SAL : 620
	0x00001494 : pushc		0	// , ScreenEffect, -1 - SAL : 621
	0x00001498 : pushc		20	// , ScreenEffect, -1 - SAL : 622
	0x0000149C : pushc		239	// , ScreenEffect, -1 - SAL : 623
	0x000014A0 : pushc		280	// , ScreenEffect, -1 - SAL : 624
	0x000014A4 : pushc		3	// , ScreenEffect, -1 - SAL : 625
	0x000014A8 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 626
	0x000014AC : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 627
	0x000014B2 : rsp	// , ScreenEffect, -1 - SAL : 628
	0x000014B4 : pushc		0	// , ScreenEffect, -1 - SAL : 629
	0x000014B8 : pushc		20	// , ScreenEffect, -1 - SAL : 630
	0x000014BC : pushc		239	// , ScreenEffect, -1 - SAL : 631
	0x000014C0 : pushc		280	// , ScreenEffect, -1 - SAL : 632
	0x000014C4 : pushc		2	// , ScreenEffect, -1 - SAL : 633
	0x000014C8 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 634
	0x000014CC : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 635
	0x000014D2 : rsp	// , ScreenEffect, -1 - SAL : 636
	0x000014D4 : pushc		0	// , ScreenEffect, -1 - SAL : 637
	0x000014D8 : pushc		20	// , ScreenEffect, -1 - SAL : 638
	0x000014DC : pushc		239	// , ScreenEffect, -1 - SAL : 639
	0x000014E0 : pushc		280	// , ScreenEffect, -1 - SAL : 640
	0x000014E4 : pushc		1	// , ScreenEffect, -1 - SAL : 641
	0x000014E8 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 642
	0x000014EC : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 643
	0x000014F2 : rsp	// , ScreenEffect, -1 - SAL : 644
	0x000014F4 : pushc		0	// , ScreenEffect, -1 - SAL : 645
	0x000014F8 : pushc		20	// , ScreenEffect, -1 - SAL : 646
	0x000014FC : pushc		239	// , ScreenEffect, -1 - SAL : 647
	0x00001500 : pushc		280	// , ScreenEffect, -1 - SAL : 648
	0x00001504 : pushc		0	// , ScreenEffect, -1 - SAL : 649
	0x00001508 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 650
	0x0000150C : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 651
	0x00001512 : rsp	// , ScreenEffect, -1 - SAL : 652
	0x00001514 : pushc		0	// , ScreenEffect, -1 - SAL : 653
	0x00001518 : pushc		20	// , ScreenEffect, -1 - SAL : 654
	0x0000151C : pushc		239	// , ScreenEffect, -1 - SAL : 655
	0x00001520 : pushc		280	// , ScreenEffect, -1 - SAL : 656
	0x00001524 : pushc		1	// , ScreenEffect, -1 - SAL : 657
	0x00001528 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 658
	0x0000152C : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 659
	0x00001532 : rsp	// , ScreenEffect, -1 - SAL : 660
	0x00001534 : pushc		0	// , ScreenEffect, -1 - SAL : 661
	0x00001538 : pushc		20	// , ScreenEffect, -1 - SAL : 662
	0x0000153C : pushc		239	// , ScreenEffect, -1 - SAL : 663
	0x00001540 : pushc		280	// , ScreenEffect, -1 - SAL : 664
	0x00001544 : pushc		2	// , ScreenEffect, -1 - SAL : 665
	0x00001548 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 666
	0x0000154C : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 667
	0x00001552 : rsp	// , ScreenEffect, -1 - SAL : 668
	0x00001554 : pushc		0	// , ScreenEffect, -1 - SAL : 669
	0x00001558 : pushc		20	// , ScreenEffect, -1 - SAL : 670
	0x0000155C : pushc		239	// , ScreenEffect, -1 - SAL : 671
	0x00001560 : pushc		280	// , ScreenEffect, -1 - SAL : 672
	0x00001564 : pushc		3	// , ScreenEffect, -1 - SAL : 673
	0x00001568 : calls		FillRectEx(71)	// , ScreenEffect, -1 - SAL : 674
	0x0000156C : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 675
	0x00001572 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 676
	0x00001578 : rsp	// , ScreenEffect, -1 - SAL : 677
	0x0000157A : ssp	// , ScreenEffect, -1 - SAL : 678
	0x0000157C : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 679
	0x00001580 : dup	// , ScreenEffect, -1 - SAL : 680
	0x00001582 : eqjp		0		0x000015EC	// , ScreenEffect, -1 - SAL : 681
	0x0000158A : dup	// , ScreenEffect, -1 - SAL : 682
	0x0000158C : eqjp		1		0x000015EC	// , ScreenEffect, -1 - SAL : 683
	0x00001594 : dup	// , ScreenEffect, -1 - SAL : 684
	0x00001596 : eqjp		2		0x000015EC	// , ScreenEffect, -1 - SAL : 685
	0x0000159E : dup	// , ScreenEffect, -1 - SAL : 686
	0x000015A0 : eqjp		3		0x000015EC	// , ScreenEffect, -1 - SAL : 687
	0x000015A8 : dup	// , ScreenEffect, -1 - SAL : 688
	0x000015AA : eqjp		4		0x000015EC	// , ScreenEffect, -1 - SAL : 689
	0x000015B2 : dup	// , ScreenEffect, -1 - SAL : 690
	0x000015B4 : eqjp		5		0x0000167C	// , ScreenEffect, -1 - SAL : 691
	0x000015BC : dup	// , ScreenEffect, -1 - SAL : 692
	0x000015BE : eqjp		6		0x0000167C	// , ScreenEffect, -1 - SAL : 693
	0x000015C6 : dup	// , ScreenEffect, -1 - SAL : 694
	0x000015C8 : eqjp		7		0x0000167C	// , ScreenEffect, -1 - SAL : 695
	0x000015D0 : dup	// , ScreenEffect, -1 - SAL : 696
	0x000015D2 : eqjp		8		0x0000167C	// , ScreenEffect, -1 - SAL : 697
	0x000015DA : dup	// , ScreenEffect, -1 - SAL : 698
	0x000015DC : eqjp		9		0x0000167C	// , ScreenEffect, -1 - SAL : 699
	0x000015E4 : rsp	// , ScreenEffect, -1 - SAL : 700
	0x000015E6 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 701
	0x000015EC : rsp	// , ScreenEffect, -1 - SAL : 702
	0x000015EE : pushc		0	// , ScreenEffect, -1 - SAL : 703
	0x000015F2 : pushc		280	// , ScreenEffect, -1 - SAL : 704
	0x000015F6 : pushc		239	// , ScreenEffect, -1 - SAL : 705
	0x000015FA : pushc		280	// , ScreenEffect, -1 - SAL : 706
	0x000015FE : pushc		28	// , ScreenEffect, -1 - SAL : 707
	0x00001602 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 708
	0x00001606 : inc	// , ScreenEffect, -1 - SAL : 709
	0x00001608 : mult	// , ScreenEffect, -1 - SAL : 710
	0x0000160A : sub	// , ScreenEffect, -1 - SAL : 711
	0x0000160C : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 712
	0x00001610 : pushc		0	// , ScreenEffect, -1 - SAL : 713
	0x00001614 : pushc		20	// , ScreenEffect, -1 - SAL : 714
	0x00001618 : pushc		239	// , ScreenEffect, -1 - SAL : 715
	0x0000161C : pushc		20	// , ScreenEffect, -1 - SAL : 716
	0x00001620 : pushc		28	// , ScreenEffect, -1 - SAL : 717
	0x00001624 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 718
	0x00001628 : inc	// , ScreenEffect, -1 - SAL : 719
	0x0000162A : mult	// , ScreenEffect, -1 - SAL : 720
	0x0000162C : add	// , ScreenEffect, -1 - SAL : 721
	0x0000162E : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 722
	0x00001632 : pushc		239	// , ScreenEffect, -1 - SAL : 723
	0x00001636 : pushc		20	// , ScreenEffect, -1 - SAL : 724
	0x0000163A : pushc		239	// , ScreenEffect, -1 - SAL : 725
	0x0000163E : pushc		23	// , ScreenEffect, -1 - SAL : 726
	0x00001642 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 727
	0x00001646 : inc	// , ScreenEffect, -1 - SAL : 728
	0x00001648 : mult	// , ScreenEffect, -1 - SAL : 729
	0x0000164A : sub	// , ScreenEffect, -1 - SAL : 730
	0x0000164C : pushc		280	// , ScreenEffect, -1 - SAL : 731
	0x00001650 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 732
	0x00001654 : pushc		0	// , ScreenEffect, -1 - SAL : 733
	0x00001658 : pushc		20	// , ScreenEffect, -1 - SAL : 734
	0x0000165C : pushc		0	// , ScreenEffect, -1 - SAL : 735
	0x00001660 : pushc		23	// , ScreenEffect, -1 - SAL : 736
	0x00001664 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 737
	0x00001668 : inc	// , ScreenEffect, -1 - SAL : 738
	0x0000166A : mult	// , ScreenEffect, -1 - SAL : 739
	0x0000166C : add	// , ScreenEffect, -1 - SAL : 740
	0x0000166E : pushc		280	// , ScreenEffect, -1 - SAL : 741
	0x00001672 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 742
	0x00001676 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 743
	0x0000167C : rsp	// , ScreenEffect, -1 - SAL : 744
	0x0000167E : pushc		0	// , ScreenEffect, -1 - SAL : 745
	0x00001682 : pushc		280	// , ScreenEffect, -1 - SAL : 746
	0x00001686 : pushc		239	// , ScreenEffect, -1 - SAL : 747
	0x0000168A : pushc		280	// , ScreenEffect, -1 - SAL : 748
	0x0000168E : pushc		28	// , ScreenEffect, -1 - SAL : 749
	0x00001692 : pushc		10	// , ScreenEffect, -1 - SAL : 750
	0x00001696 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 751
	0x0000169A : sub	// , ScreenEffect, -1 - SAL : 752
	0x0000169C : mult	// , ScreenEffect, -1 - SAL : 753
	0x0000169E : sub	// , ScreenEffect, -1 - SAL : 754
	0x000016A0 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 755
	0x000016A4 : pushc		0	// , ScreenEffect, -1 - SAL : 756
	0x000016A8 : pushc		20	// , ScreenEffect, -1 - SAL : 757
	0x000016AC : pushc		239	// , ScreenEffect, -1 - SAL : 758
	0x000016B0 : pushc		20	// , ScreenEffect, -1 - SAL : 759
	0x000016B4 : pushc		28	// , ScreenEffect, -1 - SAL : 760
	0x000016B8 : pushc		10	// , ScreenEffect, -1 - SAL : 761
	0x000016BC : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 762
	0x000016C0 : sub	// , ScreenEffect, -1 - SAL : 763
	0x000016C2 : mult	// , ScreenEffect, -1 - SAL : 764
	0x000016C4 : add	// , ScreenEffect, -1 - SAL : 765
	0x000016C6 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 766
	0x000016CA : pushc		239	// , ScreenEffect, -1 - SAL : 767
	0x000016CE : pushc		20	// , ScreenEffect, -1 - SAL : 768
	0x000016D2 : pushc		239	// , ScreenEffect, -1 - SAL : 769
	0x000016D6 : pushc		23	// , ScreenEffect, -1 - SAL : 770
	0x000016DA : pushc		10	// , ScreenEffect, -1 - SAL : 771
	0x000016DE : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 772
	0x000016E2 : sub	// , ScreenEffect, -1 - SAL : 773
	0x000016E4 : mult	// , ScreenEffect, -1 - SAL : 774
	0x000016E6 : sub	// , ScreenEffect, -1 - SAL : 775
	0x000016E8 : pushc		280	// , ScreenEffect, -1 - SAL : 776
	0x000016EC : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 777
	0x000016F0 : pushc		0	// , ScreenEffect, -1 - SAL : 778
	0x000016F4 : pushc		20	// , ScreenEffect, -1 - SAL : 779
	0x000016F8 : pushc		0	// , ScreenEffect, -1 - SAL : 780
	0x000016FC : pushc		23	// , ScreenEffect, -1 - SAL : 781
	0x00001700 : pushc		10	// , ScreenEffect, -1 - SAL : 782
	0x00001704 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 783
	0x00001708 : sub	// , ScreenEffect, -1 - SAL : 784
	0x0000170A : mult	// , ScreenEffect, -1 - SAL : 785
	0x0000170C : add	// , ScreenEffect, -1 - SAL : 786
	0x0000170E : pushc		280	// , ScreenEffect, -1 - SAL : 787
	0x00001712 : calls		FillRect(70)	// , ScreenEffect, -1 - SAL : 788
	0x00001716 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 789
	0x0000171C : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 790
	0x00001722 : rsp	// , ScreenEffect, -1 - SAL : 791
	0x00001724 : ssp	// , ScreenEffect, -1 - SAL : 792
	0x00001726 : pushz		78 ( Count of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 793
	0x0000172A : dup	// , ScreenEffect, -1 - SAL : 794
	0x0000172C : eqjp		0		0x00001796	// , ScreenEffect, -1 - SAL : 795
	0x00001734 : dup	// , ScreenEffect, -1 - SAL : 796
	0x00001736 : eqjp		1		0x00001796	// , ScreenEffect, -1 - SAL : 797
	0x0000173E : dup	// , ScreenEffect, -1 - SAL : 798
	0x00001740 : eqjp		2		0x000017BE	// , ScreenEffect, -1 - SAL : 799
	0x00001748 : dup	// , ScreenEffect, -1 - SAL : 800
	0x0000174A : eqjp		3		0x000017BE	// , ScreenEffect, -1 - SAL : 801
	0x00001752 : dup	// , ScreenEffect, -1 - SAL : 802
	0x00001754 : eqjp		4		0x000017E6	// , ScreenEffect, -1 - SAL : 803
	0x0000175C : dup	// , ScreenEffect, -1 - SAL : 804
	0x0000175E : eqjp		5		0x000017E6	// , ScreenEffect, -1 - SAL : 805
	0x00001766 : dup	// , ScreenEffect, -1 - SAL : 806
	0x00001768 : eqjp		6		0x000017E6	// , ScreenEffect, -1 - SAL : 807
	0x00001770 : dup	// , ScreenEffect, -1 - SAL : 808
	0x00001772 : eqjp		7		0x0000180E	// , ScreenEffect, -1 - SAL : 809
	0x0000177A : dup	// , ScreenEffect, -1 - SAL : 810
	0x0000177C : eqjp		8		0x0000180E	// , ScreenEffect, -1 - SAL : 811
	0x00001784 : dup	// , ScreenEffect, -1 - SAL : 812
	0x00001786 : eqjp		9		0x0000180E	// , ScreenEffect, -1 - SAL : 813
	0x0000178E : rsp	// , ScreenEffect, -1 - SAL : 814
	0x00001790 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 815
	0x00001796 : rsp	// , ScreenEffect, -1 - SAL : 816
	0x00001798 : pushc		0	// , ScreenEffect, -1 - SAL : 817
	0x0000179C : pushc		20	// , ScreenEffect, -1 - SAL : 818
	0x000017A0 : pushi		40 ( bg )		79 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 819
	0x000017A6 : pushc		3	// , ScreenEffect, -1 - SAL : 820
	0x000017AA : pushc		0	// , ScreenEffect, -1 - SAL : 821
	0x000017AE : pushc		0	// , ScreenEffect, -1 - SAL : 822
	0x000017B2 : pushc		0	// , ScreenEffect, -1 - SAL : 823
	0x000017B6 : CopyImageEx	// , ScreenEffect, -1 - SAL : 824
	0x000017B8 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 825
	0x000017BE : rsp	// , ScreenEffect, -1 - SAL : 826
	0x000017C0 : pushc		0	// , ScreenEffect, -1 - SAL : 827
	0x000017C4 : pushc		20	// , ScreenEffect, -1 - SAL : 828
	0x000017C8 : pushi		40 ( bg )		79 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 829
	0x000017CE : pushc		3	// , ScreenEffect, -1 - SAL : 830
	0x000017D2 : pushc		0	// , ScreenEffect, -1 - SAL : 831
	0x000017D6 : pushc		0	// , ScreenEffect, -1 - SAL : 832
	0x000017DA : pushc		0	// , ScreenEffect, -1 - SAL : 833
	0x000017DE : CopyImageEx	// , ScreenEffect, -1 - SAL : 834
	0x000017E0 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 835
	0x000017E6 : rsp	// , ScreenEffect, -1 - SAL : 836
	0x000017E8 : pushc		0	// , ScreenEffect, -1 - SAL : 837
	0x000017EC : pushc		20	// , ScreenEffect, -1 - SAL : 838
	0x000017F0 : pushi		40 ( bg )		79 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 839
	0x000017F6 : pushc		1	// , ScreenEffect, -1 - SAL : 840
	0x000017FA : pushc		0	// , ScreenEffect, -1 - SAL : 841
	0x000017FE : pushc		0	// , ScreenEffect, -1 - SAL : 842
	0x00001802 : pushc		0	// , ScreenEffect, -1 - SAL : 843
	0x00001806 : CopyImageEx	// , ScreenEffect, -1 - SAL : 844
	0x00001808 : ujp		0x00001820	// , ScreenEffect, -1 - SAL : 845
	0x0000180E : rsp	// , ScreenEffect, -1 - SAL : 846
	0x00001810 : pushc		0	// , ScreenEffect, -1 - SAL : 847
	0x00001814 : pushc		20	// , ScreenEffect, -1 - SAL : 848
	0x00001818 : pushi		40 ( bg )		79 ( Imgnum of Function ScreenEffect )	// , ScreenEffect, -1 - SAL : 849
	0x0000181E : CopyImage	// , ScreenEffect, -1 - SAL : 850
	0x00001820 : ret	// , ScreenEffect, -1 - SAL : 851
}


FUNCTION : SelectTitleMenu()
{
	0x00001822 : nop	// , SelectTitleMenu, -1 - SAL : 2027
	0x00001824 : pushz		62 ( SelectedMenu )	// , SelectTitleMenu, -1 - SAL : 2028
	0x00001828 : fjp		0x00001A08	// , SelectTitleMenu, -1 - SAL : 2029
	0x0000182E : ssp	// , SelectTitleMenu, -1 - SAL : 2030
	0x00001830 : pushz		67 ( NextKey )	// , SelectTitleMenu, -1 - SAL : 2031
	0x00001834 : dup	// , SelectTitleMenu, -1 - SAL : 2032
	0x00001836 : eqjp		18		0x00001862	// , SelectTitleMenu, -1 - SAL : 2033
	0x0000183E : dup	// , SelectTitleMenu, -1 - SAL : 2034
	0x00001840 : eqjp		19		0x000018D2	// , SelectTitleMenu, -1 - SAL : 2035
	0x00001848 : dup	// , SelectTitleMenu, -1 - SAL : 2036
	0x0000184A : eqjp		20		0x0000193E	// , SelectTitleMenu, -1 - SAL : 2037
	0x00001852 : dup	// , SelectTitleMenu, -1 - SAL : 2038
	0x00001854 : eqjp		13		0x000019E6	// , SelectTitleMenu, -1 - SAL : 2039
	0x0000185C : ujp		0x000019FA	// , SelectTitleMenu, -1 - SAL : 2040
	0x00001862 : rsp	// , SelectTitleMenu, -1 - SAL : 2041
	0x00001864 : ssp	// , SelectTitleMenu, -1 - SAL : 2042
	0x00001866 : pushz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2043
	0x0000186A : dup	// , SelectTitleMenu, -1 - SAL : 2044
	0x0000186C : eqjp		1		0x00001890	// , SelectTitleMenu, -1 - SAL : 2045
	0x00001874 : dup	// , SelectTitleMenu, -1 - SAL : 2046
	0x00001876 : eqjp		2		0x000018AC	// , SelectTitleMenu, -1 - SAL : 2047
	0x0000187E : dup	// , SelectTitleMenu, -1 - SAL : 2048
	0x00001880 : eqjp		3		0x000018C4	// , SelectTitleMenu, -1 - SAL : 2049
	0x00001888 : rsp	// , SelectTitleMenu, -1 - SAL : 2050
	0x0000188A : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2051
	0x00001890 : rsp	// , SelectTitleMenu, -1 - SAL : 2052
	0x00001892 : pushz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2053
	0x00001896 : pushc		5	// , SelectTitleMenu, -1 - SAL : 2054
	0x0000189A : add	// , SelectTitleMenu, -1 - SAL : 2055
	0x0000189C : pushc		6	// , SelectTitleMenu, -1 - SAL : 2056
	0x000018A0 : mod	// , SelectTitleMenu, -1 - SAL : 2057
	0x000018A2 : popz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2058
	0x000018A6 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2059
	0x000018AC : rsp	// , SelectTitleMenu, -1 - SAL : 2060
	0x000018AE : pushz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2061
	0x000018B2 : inc	// , SelectTitleMenu, -1 - SAL : 2062
	0x000018B4 : pushc		2	// , SelectTitleMenu, -1 - SAL : 2063
	0x000018B8 : mod	// , SelectTitleMenu, -1 - SAL : 2064
	0x000018BA : popz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2065
	0x000018BE : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2066
	0x000018C4 : rsp	// , SelectTitleMenu, -1 - SAL : 2067
	0x000018C6 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2068
	0x000018CC : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2069
	0x000018D2 : rsp	// , SelectTitleMenu, -1 - SAL : 2070
	0x000018D4 : ssp	// , SelectTitleMenu, -1 - SAL : 2071
	0x000018D6 : pushz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2072
	0x000018DA : dup	// , SelectTitleMenu, -1 - SAL : 2073
	0x000018DC : eqjp		1		0x00001900	// , SelectTitleMenu, -1 - SAL : 2074
	0x000018E4 : dup	// , SelectTitleMenu, -1 - SAL : 2075
	0x000018E6 : eqjp		2		0x00001918	// , SelectTitleMenu, -1 - SAL : 2076
	0x000018EE : dup	// , SelectTitleMenu, -1 - SAL : 2077
	0x000018F0 : eqjp		3		0x00001930	// , SelectTitleMenu, -1 - SAL : 2078
	0x000018F8 : rsp	// , SelectTitleMenu, -1 - SAL : 2079
	0x000018FA : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2080
	0x00001900 : rsp	// , SelectTitleMenu, -1 - SAL : 2081
	0x00001902 : pushz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2082
	0x00001906 : inc	// , SelectTitleMenu, -1 - SAL : 2083
	0x00001908 : pushc		6	// , SelectTitleMenu, -1 - SAL : 2084
	0x0000190C : mod	// , SelectTitleMenu, -1 - SAL : 2085
	0x0000190E : popz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2086
	0x00001912 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2087
	0x00001918 : rsp	// , SelectTitleMenu, -1 - SAL : 2088
	0x0000191A : pushz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2089
	0x0000191E : inc	// , SelectTitleMenu, -1 - SAL : 2090
	0x00001920 : pushc		2	// , SelectTitleMenu, -1 - SAL : 2091
	0x00001924 : mod	// , SelectTitleMenu, -1 - SAL : 2092
	0x00001926 : popz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2093
	0x0000192A : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2094
	0x00001930 : rsp	// , SelectTitleMenu, -1 - SAL : 2095
	0x00001932 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2096
	0x00001938 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2097
	0x0000193E : rsp	// , SelectTitleMenu, -1 - SAL : 2098
	0x00001940 : ssp	// , SelectTitleMenu, -1 - SAL : 2099
	0x00001942 : pushz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2100
	0x00001946 : dup	// , SelectTitleMenu, -1 - SAL : 2101
	0x00001948 : eqjp		1		0x0000196C	// , SelectTitleMenu, -1 - SAL : 2102
	0x00001950 : dup	// , SelectTitleMenu, -1 - SAL : 2103
	0x00001952 : eqjp		2		0x0000198A	// , SelectTitleMenu, -1 - SAL : 2104
	0x0000195A : dup	// , SelectTitleMenu, -1 - SAL : 2105
	0x0000195C : eqjp		3		0x000019D8	// , SelectTitleMenu, -1 - SAL : 2106
	0x00001964 : rsp	// , SelectTitleMenu, -1 - SAL : 2107
	0x00001966 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2108
	0x0000196C : rsp	// , SelectTitleMenu, -1 - SAL : 2109
	0x0000196E : pushz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2110
	0x00001972 : nejp		0		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2111
	0x0000197A : pushc		2	// , SelectTitleMenu, -1 - SAL : 2112
	0x0000197E : call		0x0000008E	// , SelectTitleMenu, -1 - SAL : 2113
	0x00001984 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2114
	0x0000198A : rsp	// , SelectTitleMenu, -1 - SAL : 2115
	0x0000198C : ssp	// , SelectTitleMenu, -1 - SAL : 2116
	0x0000198E : pushz		63 ( SelectedObject )	// , SelectTitleMenu, -1 - SAL : 2117
	0x00001992 : dup	// , SelectTitleMenu, -1 - SAL : 2118
	0x00001994 : eqjp		0		0x000019AE	// , SelectTitleMenu, -1 - SAL : 2119
	0x0000199C : dup	// , SelectTitleMenu, -1 - SAL : 2120
	0x0000199E : eqjp		1		0x000019C0	// , SelectTitleMenu, -1 - SAL : 2121
	0x000019A6 : rsp	// , SelectTitleMenu, -1 - SAL : 2122
	0x000019A8 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2123
	0x000019AE : rsp	// , SelectTitleMenu, -1 - SAL : 2124
	0x000019B0 : pushz		43 ( OptionAutoSkip )	// , SelectTitleMenu, -1 - SAL : 2125
	0x000019B4 : not	// , SelectTitleMenu, -1 - SAL : 2126
	0x000019B6 : popz		43 ( OptionAutoSkip )	// , SelectTitleMenu, -1 - SAL : 2127
	0x000019BA : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2128
	0x000019C0 : rsp	// , SelectTitleMenu, -1 - SAL : 2129
	0x000019C2 : pushz		44 ( OptionSpokeSkip )	// , SelectTitleMenu, -1 - SAL : 2130
	0x000019C6 : not	// , SelectTitleMenu, -1 - SAL : 2131
	0x000019C8 : popz		44 ( OptionSpokeSkip )	// , SelectTitleMenu, -1 - SAL : 2132
	0x000019CC : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2133
	0x000019D2 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2134
	0x000019D8 : rsp	// , SelectTitleMenu, -1 - SAL : 2135
	0x000019DA : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2136
	0x000019E0 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2137
	0x000019E6 : rsp	// , SelectTitleMenu, -1 - SAL : 2138
	0x000019E8 : zsetc		63 ( SelectedObject )		0	// , SelectTitleMenu, -1 - SAL : 2139
	0x000019EE : zsetc		62 ( SelectedMenu )		0	// , SelectTitleMenu, -1 - SAL : 2140
	0x000019F4 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2141
	0x000019FA : rsp	// , SelectTitleMenu, -1 - SAL : 2142
	0x000019FC : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2143
	0x00001A02 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2144
	0x00001A08 : ssp	// , SelectTitleMenu, -1 - SAL : 2145
	0x00001A0A : pushz		67 ( NextKey )	// , SelectTitleMenu, -1 - SAL : 2146
	0x00001A0E : dup	// , SelectTitleMenu, -1 - SAL : 2147
	0x00001A10 : eqjp		18		0x00001A32	// , SelectTitleMenu, -1 - SAL : 2148
	0x00001A18 : dup	// , SelectTitleMenu, -1 - SAL : 2149
	0x00001A1A : eqjp		19		0x00001A4E	// , SelectTitleMenu, -1 - SAL : 2150
	0x00001A22 : dup	// , SelectTitleMenu, -1 - SAL : 2151
	0x00001A24 : eqjp		20		0x00001A66	// , SelectTitleMenu, -1 - SAL : 2152
	0x00001A2C : ujp		0x00001AE0	// , SelectTitleMenu, -1 - SAL : 2153
	0x00001A32 : rsp	// , SelectTitleMenu, -1 - SAL : 2154
	0x00001A34 : pushz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2155
	0x00001A38 : pushc		4	// , SelectTitleMenu, -1 - SAL : 2156
	0x00001A3C : add	// , SelectTitleMenu, -1 - SAL : 2157
	0x00001A3E : pushc		5	// , SelectTitleMenu, -1 - SAL : 2158
	0x00001A42 : mod	// , SelectTitleMenu, -1 - SAL : 2159
	0x00001A44 : popz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2160
	0x00001A48 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2161
	0x00001A4E : rsp	// , SelectTitleMenu, -1 - SAL : 2162
	0x00001A50 : pushz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2163
	0x00001A54 : inc	// , SelectTitleMenu, -1 - SAL : 2164
	0x00001A56 : pushc		5	// , SelectTitleMenu, -1 - SAL : 2165
	0x00001A5A : mod	// , SelectTitleMenu, -1 - SAL : 2166
	0x00001A5C : popz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2167
	0x00001A60 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2168
	0x00001A66 : rsp	// , SelectTitleMenu, -1 - SAL : 2169
	0x00001A68 : ssp	// , SelectTitleMenu, -1 - SAL : 2170
	0x00001A6A : pushz		61 ( SelectedTitleMenu )	// , SelectTitleMenu, -1 - SAL : 2171
	0x00001A6E : dup	// , SelectTitleMenu, -1 - SAL : 2172
	0x00001A70 : eqjp		0		0x00001AA6	// , SelectTitleMenu, -1 - SAL : 2173
	0x00001A78 : dup	// , SelectTitleMenu, -1 - SAL : 2174
	0x00001A7A : eqjp		1		0x00001AB8	// , SelectTitleMenu, -1 - SAL : 2175
	0x00001A82 : dup	// , SelectTitleMenu, -1 - SAL : 2176
	0x00001A84 : eqjp		2		0x00001AB8	// , SelectTitleMenu, -1 - SAL : 2177
	0x00001A8C : dup	// , SelectTitleMenu, -1 - SAL : 2178
	0x00001A8E : eqjp		3		0x00001AB8	// , SelectTitleMenu, -1 - SAL : 2179
	0x00001A96 : dup	// , SelectTitleMenu, -1 - SAL : 2180
	0x00001A98 : eqjp		4		0x00001AC6	// , SelectTitleMenu, -1 - SAL : 2181
	0x00001AA0 : ujp		0x00001AD2	// , SelectTitleMenu, -1 - SAL : 2182
	0x00001AA6 : rsp	// , SelectTitleMenu, -1 - SAL : 2183
	0x00001AA8 : pushc		1	// , SelectTitleMenu, -1 - SAL : 2184
	0x00001AAC : call		0x0000008E	// , SelectTitleMenu, -1 - SAL : 2185
	0x00001AB2 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2186
	0x00001AB8 : rsp	// , SelectTitleMenu, -1 - SAL : 2187
	0x00001ABA : zsetc		62 ( SelectedMenu )		1	// , SelectTitleMenu, -1 - SAL : 2188
	0x00001AC0 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2189
	0x00001AC6 : rsp	// , SelectTitleMenu, -1 - SAL : 2190
	0x00001AC8 : calls		Exit(225)	// , SelectTitleMenu, -1 - SAL : 2191
	0x00001ACC : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2192
	0x00001AD2 : rsp	// , SelectTitleMenu, -1 - SAL : 2193
	0x00001AD4 : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2194
	0x00001ADA : ujp		0x00001AE2	// , SelectTitleMenu, -1 - SAL : 2195
	0x00001AE0 : rsp	// , SelectTitleMenu, -1 - SAL : 2196
	0x00001AE2 : ret	// , SelectTitleMenu, -1 - SAL : 2197
}


FUNCTION : SetBackground()
{
	0x00001AE4 : nop	// , SetBackground, -1 - SAL : 1682
	0x00001AE6 : popz		112 ( Effect of Function SetBackground )	// , SetBackground, -1 - SAL : 1683
	0x00001AEA : popz		111 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 1684
	0x00001AEE : popz		110 ( Layer of Function SetBackground )	// , SetBackground, -1 - SAL : 1685
	0x00001AF2 : pushz		59 ( EffectFrame )	// , SetBackground, -1 - SAL : 1686
	0x00001AF6 : nejp		5		0x00001B0C	// , SetBackground, -1 - SAL : 1687
	0x00001AFE : isetz		49 ( Background )		110 ( Layer of Function SetBackground )		111 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 1688
	0x00001B06 : ujp		0x00001B1A	// , SetBackground, -1 - SAL : 1689
	0x00001B0C : pushz		59 ( EffectFrame )	// , SetBackground, -1 - SAL : 1690
	0x00001B10 : lejp		10		0x00001B1A	// , SetBackground, -1 - SAL : 1691
	0x00001B18 : ret	// , SetBackground, -1 - SAL : 1692
	0x00001B1A : pushz		112 ( Effect of Function SetBackground )	// , SetBackground, -1 - SAL : 1693
	0x00001B1E : pushz		59 ( EffectFrame )	// , SetBackground, -1 - SAL : 1694
	0x00001B22 : incz		59 ( EffectFrame )		1	// , SetBackground, -1 - SAL : 1695
	0x00001B28 : pushz		111 ( ImageNumber of Function SetBackground )	// , SetBackground, -1 - SAL : 1696
	0x00001B2C : call		0x000013E4	// , SetBackground, -1 - SAL : 1697
	0x00001B32 : ret	// , SetBackground, -1 - SAL : 1698
}


FUNCTION : SetChara()
{
	0x00001B34 : nop	// , SetChara, -1 - SAL : 1699
	0x00001B36 : popz		114 ( ImageNumber of Function SetChara )	// , SetChara, -1 - SAL : 1700
	0x00001B3A : stnz		113 ( Layer of Function SetChara )	// , SetChara, -1 - SAL : 1701
	0x00001B3E : ldrz		50 ( BackChara )	// , SetChara, -1 - SAL : 1702
	0x00001B42 : add	// , SetChara, -1 - SAL : 1703
	0x00001B44 : pushz		114 ( ImageNumber of Function SetChara )	// , SetChara, -1 - SAL : 1704
	0x00001B48 : sta	// , SetChara, -1 - SAL : 1705
	0x00001B4A : ret	// , SetChara, -1 - SAL : 1706
}


FUNCTION : SetCurrentName()
{
	0x00001B4C : nop	// , SetCurrentName, -1 - SAL : 1654
	0x00001B4E : popz		103 ( Position of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 1655
	0x00001B52 : stnz		102 ( NameNumber of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 1656
	0x00001B56 : popz		57 ( CurrentName )	// , SetCurrentName, -1 - SAL : 1657
	0x00001B5A : zsetz		58 ( NamePosition )		103 ( Position of Function SetCurrentName )	// , SetCurrentName, -1 - SAL : 1658
	0x00001B60 : ret	// , SetCurrentName, -1 - SAL : 1659
}


FUNCTION : SetDate()
{
	0x00001B62 : nop	// , SetDate, -1 - SAL : 1707
	0x00001B64 : popz		117 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 1708
	0x00001B68 : popz		116 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 1709
	0x00001B6C : popz		115 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 1710
	0x00001B70 : ldrz		47 ( Now )	// , SetDate, -1 - SAL : 1711
	0x00001B74 : pushz		115 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 1712
	0x00001B78 : sta	// , SetDate, -1 - SAL : 1713
	0x00001B7A : ldrz		47 ( Now )	// , SetDate, -1 - SAL : 1714
	0x00001B7E : inc	// , SetDate, -1 - SAL : 1715
	0x00001B80 : pushz		116 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 1716
	0x00001B84 : sta	// , SetDate, -1 - SAL : 1717
	0x00001B86 : addldrzc		47 ( Now )		2	// , SetDate, -1 - SAL : 1718
	0x00001B8C : pushz		117 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 1721
	0x00001B90 : sta	// , SetDate, -1 - SAL : 1722
	0x00001B92 : addldrzc		47 ( Now )		3	// , SetDate, -1 - SAL : 1723
	0x00001B98 : pushz		115 ( Year of Function SetDate )	// , SetDate, -1 - SAL : 1726
	0x00001B9C : pushz		116 ( Month of Function SetDate )	// , SetDate, -1 - SAL : 1727
	0x00001BA0 : pushz		117 ( Day of Function SetDate )	// , SetDate, -1 - SAL : 1728
	0x00001BA4 : call		0x00000B5E	// , SetDate, -1 - SAL : 1729
	0x00001BAA : sta	// , SetDate, -1 - SAL : 1730
	0x00001BAC : ret	// , SetDate, -1 - SAL : 1731
}


FUNCTION : SetTime()
{
	0x00001BAE : nop	// , SetTime, -1 - SAL : 1732
	0x00001BB0 : popz		119 ( Minute of Function SetTime )	// , SetTime, -1 - SAL : 1733
	0x00001BB4 : popz		118 ( Hour of Function SetTime )	// , SetTime, -1 - SAL : 1734
	0x00001BB8 : addldrzc		47 ( Now )		4	// , SetTime, -1 - SAL : 1735
	0x00001BBE : pushz		118 ( Hour of Function SetTime )	// , SetTime, -1 - SAL : 1738
	0x00001BC2 : sta	// , SetTime, -1 - SAL : 1739
	0x00001BC4 : addldrzc		47 ( Now )		5	// , SetTime, -1 - SAL : 1740
	0x00001BCA : pushz		119 ( Minute of Function SetTime )	// , SetTime, -1 - SAL : 1743
	0x00001BCE : sta	// , SetTime, -1 - SAL : 1744
	0x00001BD0 : ret	// , SetTime, -1 - SAL : 1745
}


FUNCTION : SetWeather()
{
	0x00001BD2 : nop	// , SetWeather, -1 - SAL : 1746
	0x00001BD4 : popz		120 ( Weather of Function SetWeather )	// , SetWeather, -1 - SAL : 1747
	0x00001BD8 : addldrzc		47 ( Now )		6	// , SetWeather, -1 - SAL : 1748
	0x00001BDE : pushz		120 ( Weather of Function SetWeather )	// , SetWeather, -1 - SAL : 1751
	0x00001BE2 : sta	// , SetWeather, -1 - SAL : 1752
	0x00001BE4 : ret	// , SetWeather, -1 - SAL : 1753
}


FUNCTION : ShadowText()
{
	0x00001BE6 : nop	// , ShadowText, -1 - SAL : 852
	0x00001BE8 : popz		84 ( tc of Function ShadowText )	// , ShadowText, -1 - SAL : 853
	0x00001BEC : popz		83 ( sc of Function ShadowText )	// , ShadowText, -1 - SAL : 854
	0x00001BF0 : popz		82 ( z of Function ShadowText )	// , ShadowText, -1 - SAL : 855
	0x00001BF4 : popz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 856
	0x00001BF8 : popz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 857
	0x00001BFC : zseti		85 ( TempString of Function ShadowText )		52 ( Messages )		82 ( z of Function ShadowText )	// , ShadowText, -1 - SAL : 858
	0x00001C04 : pushz		66 ( TestCount )	// , ShadowText, -1 - SAL : 859
	0x00001C08 : pushc		700	// , ShadowText, -1 - SAL : 860
	0x00001C0C : mod	// , ShadowText, -1 - SAL : 861
	0x00001C0E : pushc		100	// , ShadowText, -1 - SAL : 862
	0x00001C12 : div	// , ShadowText, -1 - SAL : 863
	0x00001C14 : pushz		83 ( sc of Function ShadowText )	// , ShadowText, -1 - SAL : 864
	0x00001C18 : pushc		3	// , ShadowText, -1 - SAL : 865
	0x00001C1C : pushc		0	// , ShadowText, -1 - SAL : 866
	0x00001C20 : calls		SetFontType(40)	// , ShadowText, -1 - SAL : 867
	0x00001C24 : pushc		-1	// , ShadowText, -1 - SAL : 868
	0x00001C28 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 869
	0x00001C2C : pushc		1	// , ShadowText, -1 - SAL : 871
	0x00001C30 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 872
	0x00001C34 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 874
	0x00001C38 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 875
	0x00001C3C : pushc		-1	// , ShadowText, -1 - SAL : 876
	0x00001C40 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 877
	0x00001C44 : pushz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 879
	0x00001C48 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 880
	0x00001C4C : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 881
	0x00001C50 : pushz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 882
	0x00001C54 : pushc		1	// , ShadowText, -1 - SAL : 883
	0x00001C58 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 884
	0x00001C5C : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 886
	0x00001C60 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 887
	0x00001C64 : pushz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 888
	0x00001C68 : pushz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 889
	0x00001C6C : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 890
	0x00001C70 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 891
	0x00001C74 : pushc		1	// , ShadowText, -1 - SAL : 892
	0x00001C78 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 893
	0x00001C7C : pushc		1	// , ShadowText, -1 - SAL : 895
	0x00001C80 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 896
	0x00001C84 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 898
	0x00001C88 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 899
	0x00001C8C : pushc		1	// , ShadowText, -1 - SAL : 900
	0x00001C90 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 901
	0x00001C94 : pushz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 903
	0x00001C98 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 904
	0x00001C9C : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 905
	0x00001CA0 : pushz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 906
	0x00001CA4 : pushc		1	// , ShadowText, -1 - SAL : 907
	0x00001CA8 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 908
	0x00001CAC : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 910
	0x00001CB0 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 911
	0x00001CB4 : pushc		-1	// , ShadowText, -1 - SAL : 912
	0x00001CB8 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 913
	0x00001CBC : pushc		1	// , ShadowText, -1 - SAL : 915
	0x00001CC0 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 916
	0x00001CC4 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 918
	0x00001CC8 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 919
	0x00001CCC : pushc		1	// , ShadowText, -1 - SAL : 920
	0x00001CD0 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 921
	0x00001CD4 : pushc		1	// , ShadowText, -1 - SAL : 923
	0x00001CD8 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 924
	0x00001CDC : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 926
	0x00001CE0 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 927
	0x00001CE4 : pushc		-1	// , ShadowText, -1 - SAL : 928
	0x00001CE8 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 929
	0x00001CEC : pushc		-1	// , ShadowText, -1 - SAL : 931
	0x00001CF0 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 932
	0x00001CF4 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 934
	0x00001CF8 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 935
	0x00001CFC : pushz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 936
	0x00001D00 : pushc		-1	// , ShadowText, -1 - SAL : 937
	0x00001D04 : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 938
	0x00001D08 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 940
	0x00001D0C : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 941
	0x00001D10 : pushc		1	// , ShadowText, -1 - SAL : 942
	0x00001D14 : addz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 943
	0x00001D18 : pushc		-1	// , ShadowText, -1 - SAL : 945
	0x00001D1C : addz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 946
	0x00001D20 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 948
	0x00001D24 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 949
	0x00001D28 : pushz		66 ( TestCount )	// , ShadowText, -1 - SAL : 950
	0x00001D2C : pushc		700	// , ShadowText, -1 - SAL : 951
	0x00001D30 : mod	// , ShadowText, -1 - SAL : 952
	0x00001D32 : pushc		100	// , ShadowText, -1 - SAL : 953
	0x00001D36 : div	// , ShadowText, -1 - SAL : 954
	0x00001D38 : pushz		84 ( tc of Function ShadowText )	// , ShadowText, -1 - SAL : 955
	0x00001D3C : pushc		3	// , ShadowText, -1 - SAL : 956
	0x00001D40 : pushc		0	// , ShadowText, -1 - SAL : 957
	0x00001D44 : calls		SetFontType(40)	// , ShadowText, -1 - SAL : 958
	0x00001D48 : pushz		80 ( j of Function ShadowText )	// , ShadowText, -1 - SAL : 959
	0x00001D4C : pushz		81 ( i of Function ShadowText )	// , ShadowText, -1 - SAL : 960
	0x00001D50 : pushz		85 ( TempString of Function ShadowText )	// , ShadowText, -1 - SAL : 961
	0x00001D54 : calls		DrawStr(85)	// , ShadowText, -1 - SAL : 962
	0x00001D58 : ret	// , ShadowText, -1 - SAL : 963
}


FUNCTION : ShowTitleContinue()
{
	0x00001D5A : nop	// , ShowTitleContinue, -1 - SAL : 2198
	0x00001D5C : pushc		71	// , ShowTitleContinue, -1 - SAL : 2199
	0x00001D60 : pushc		61	// , ShowTitleContinue, -1 - SAL : 2200
	0x00001D64 : pushic		31 ( function_name )		0	// , ShowTitleContinue, -1 - SAL : 2201
	0x00001D6A : CopyImage	// , ShowTitleContinue, -1 - SAL : 2202
	0x00001D6C : pushc		15	// , ShowTitleContinue, -1 - SAL : 2203
	0x00001D70 : pushc		100	// , ShowTitleContinue, -1 - SAL : 2204
	0x00001D74 : pushc		67	// , ShowTitleContinue, -1 - SAL : 2205
	0x00001D78 : pushc		1	// , ShowTitleContinue, -1 - SAL : 2206
	0x00001D7C : pushc		0	// , ShowTitleContinue, -1 - SAL : 2207
	0x00001D80 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2208
	0x00001D84 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2209
	0x00001D88 : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2210
	0x00001D8A : pushc		166	// , ShowTitleContinue, -1 - SAL : 2211
	0x00001D8E : pushc		100	// , ShowTitleContinue, -1 - SAL : 2212
	0x00001D92 : pushc		68	// , ShowTitleContinue, -1 - SAL : 2213
	0x00001D96 : pushc		1	// , ShowTitleContinue, -1 - SAL : 2214
	0x00001D9A : pushc		0	// , ShowTitleContinue, -1 - SAL : 2215
	0x00001D9E : pushc		0	// , ShowTitleContinue, -1 - SAL : 2216
	0x00001DA2 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2217
	0x00001DA6 : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2218
	0x00001DA8 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2219
	0x00001DAC : calls		SetColor(38)	// , ShowTitleContinue, -1 - SAL : 2220
	0x00001DB0 : pushc		167	// , ShowTitleContinue, -1 - SAL : 2221
	0x00001DB4 : pushc		111	// , ShowTitleContinue, -1 - SAL : 2222
	0x00001DB8 : pushc		15	// , ShowTitleContinue, -1 - SAL : 2223
	0x00001DBC : pushz		63 ( SelectedObject )	// , ShowTitleContinue, -1 - SAL : 2224
	0x00001DC0 : mult	// , ShowTitleContinue, -1 - SAL : 2225
	0x00001DC2 : add	// , ShowTitleContinue, -1 - SAL : 2226
	0x00001DC4 : pushc		223	// , ShowTitleContinue, -1 - SAL : 2227
	0x00001DC8 : pushc		122	// , ShowTitleContinue, -1 - SAL : 2228
	0x00001DCC : pushc		15	// , ShowTitleContinue, -1 - SAL : 2229
	0x00001DD0 : pushz		63 ( SelectedObject )	// , ShowTitleContinue, -1 - SAL : 2230
	0x00001DD4 : mult	// , ShowTitleContinue, -1 - SAL : 2231
	0x00001DD6 : add	// , ShowTitleContinue, -1 - SAL : 2232
	0x00001DD8 : pushc		1	// , ShowTitleContinue, -1 - SAL : 2233
	0x00001DDC : calls		FillRectEx(71)	// , ShowTitleContinue, -1 - SAL : 2234
	0x00001DE0 : pushc		167	// , ShowTitleContinue, -1 - SAL : 2235
	0x00001DE4 : pushc		112	// , ShowTitleContinue, -1 - SAL : 2236
	0x00001DE8 : pushc		63	// , ShowTitleContinue, -1 - SAL : 2237
	0x00001DEC : pushc		1	// , ShowTitleContinue, -1 - SAL : 2238
	0x00001DF0 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2239
	0x00001DF4 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2240
	0x00001DF8 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2241
	0x00001DFC : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2242
	0x00001DFE : zsetc		124 ( i of Function ShowTitleContinue )		1	// , ShowTitleContinue, -1 - SAL : 2243
	0x00001E04 : pushz		124 ( i of Function ShowTitleContinue )	// , ShowTitleContinue, -1 - SAL : 2244
	0x00001E08 : gejp		6		0x00001E46	// , ShowTitleContinue, -1 - SAL : 2245
	0x00001E10 : pushc		167	// , ShowTitleContinue, -1 - SAL : 2246
	0x00001E14 : pushc		112	// , ShowTitleContinue, -1 - SAL : 2247
	0x00001E18 : pushc		15	// , ShowTitleContinue, -1 - SAL : 2248
	0x00001E1C : pushz		124 ( i of Function ShowTitleContinue )	// , ShowTitleContinue, -1 - SAL : 2249
	0x00001E20 : mult	// , ShowTitleContinue, -1 - SAL : 2250
	0x00001E22 : add	// , ShowTitleContinue, -1 - SAL : 2251
	0x00001E24 : pushc		64	// , ShowTitleContinue, -1 - SAL : 2252
	0x00001E28 : pushc		1	// , ShowTitleContinue, -1 - SAL : 2253
	0x00001E2C : pushc		0	// , ShowTitleContinue, -1 - SAL : 2254
	0x00001E30 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2255
	0x00001E34 : pushc		0	// , ShowTitleContinue, -1 - SAL : 2256
	0x00001E38 : CopyImageEx	// , ShowTitleContinue, -1 - SAL : 2257
	0x00001E3A : incz		124 ( i of Function ShowTitleContinue )		1	// , ShowTitleContinue, -1 - SAL : 2258
	0x00001E40 : ujp		0x00001E04	// , ShowTitleContinue, -1 - SAL : 2259
	0x00001E46 : ret	// , ShowTitleContinue, -1 - SAL : 2260
}


FUNCTION : ShowTitleGameInfo()
{
	0x00001E48 : nop	// , ShowTitleGameInfo, -1 - SAL : 2311
	0x00001E4A : pushc		71	// , ShowTitleGameInfo, -1 - SAL : 2312
	0x00001E4E : pushc		61	// , ShowTitleGameInfo, -1 - SAL : 2313
	0x00001E52 : pushic		31 ( function_name )		2	// , ShowTitleGameInfo, -1 - SAL : 2314
	0x00001E58 : CopyImage	// , ShowTitleGameInfo, -1 - SAL : 2315
	0x00001E5A : ret	// , ShowTitleGameInfo, -1 - SAL : 2316
}


FUNCTION : ShowTitleOption()
{
	0x00001E5C : nop	// , ShowTitleOption, -1 - SAL : 2261
	0x00001E5E : pushc		71	// , ShowTitleOption, -1 - SAL : 2262
	0x00001E62 : pushc		61	// , ShowTitleOption, -1 - SAL : 2263
	0x00001E66 : pushic		31 ( function_name )		1	// , ShowTitleOption, -1 - SAL : 2264
	0x00001E6C : CopyImage	// , ShowTitleOption, -1 - SAL : 2265
	0x00001E6E : pushc		15	// , ShowTitleOption, -1 - SAL : 2266
	0x00001E72 : pushc		100	// , ShowTitleOption, -1 - SAL : 2267
	0x00001E76 : pushc		66	// , ShowTitleOption, -1 - SAL : 2268
	0x00001E7A : pushc		1	// , ShowTitleOption, -1 - SAL : 2269
	0x00001E7E : pushc		0	// , ShowTitleOption, -1 - SAL : 2270
	0x00001E82 : pushc		0	// , ShowTitleOption, -1 - SAL : 2271
	0x00001E86 : pushc		0	// , ShowTitleOption, -1 - SAL : 2272
	0x00001E8A : CopyImageEx	// , ShowTitleOption, -1 - SAL : 2273
	0x00001E8C : pushz		43 ( OptionAutoSkip )	// , ShowTitleOption, -1 - SAL : 2274
	0x00001E90 : fjp		0x00001EB4	// , ShowTitleOption, -1 - SAL : 2275
	0x00001E96 : pushc		186	// , ShowTitleOption, -1 - SAL : 2276
	0x00001E9A : pushc		108	// , ShowTitleOption, -1 - SAL : 2277
	0x00001E9E : pushc		65	// , ShowTitleOption, -1 - SAL : 2278
	0x00001EA2 : pushc		1	// , ShowTitleOption, -1 - SAL : 2279
	0x00001EA6 : pushc		0	// , ShowTitleOption, -1 - SAL : 2280
	0x00001EAA : pushc		0	// , ShowTitleOption, -1 - SAL : 2281
	0x00001EAE : pushc		0	// , ShowTitleOption, -1 - SAL : 2282
	0x00001EB2 : CopyImageEx	// , ShowTitleOption, -1 - SAL : 2283
	0x00001EB4 : pushz		44 ( OptionSpokeSkip )	// , ShowTitleOption, -1 - SAL : 2284
	0x00001EB8 : fjp		0x00001EDC	// , ShowTitleOption, -1 - SAL : 2285
	0x00001EBE : pushc		186	// , ShowTitleOption, -1 - SAL : 2286
	0x00001EC2 : pushc		136	// , ShowTitleOption, -1 - SAL : 2287
	0x00001EC6 : pushc		65	// , ShowTitleOption, -1 - SAL : 2288
	0x00001ECA : pushc		1	// , ShowTitleOption, -1 - SAL : 2289
	0x00001ECE : pushc		0	// , ShowTitleOption, -1 - SAL : 2290
	0x00001ED2 : pushc		0	// , ShowTitleOption, -1 - SAL : 2291
	0x00001ED6 : pushc		0	// , ShowTitleOption, -1 - SAL : 2292
	0x00001EDA : CopyImageEx	// , ShowTitleOption, -1 - SAL : 2293
	0x00001EDC : pushc		0	// , ShowTitleOption, -1 - SAL : 2294
	0x00001EE0 : calls		SetColor(38)	// , ShowTitleOption, -1 - SAL : 2295
	0x00001EE4 : pushc		16	// , ShowTitleOption, -1 - SAL : 2296
	0x00001EE8 : pushc		110	// , ShowTitleOption, -1 - SAL : 2297
	0x00001EEC : pushc		28	// , ShowTitleOption, -1 - SAL : 2298
	0x00001EF0 : pushz		63 ( SelectedObject )	// , ShowTitleOption, -1 - SAL : 2299
	0x00001EF4 : mult	// , ShowTitleOption, -1 - SAL : 2300
	0x00001EF6 : add	// , ShowTitleOption, -1 - SAL : 2301
	0x00001EF8 : pushc		223	// , ShowTitleOption, -1 - SAL : 2302
	0x00001EFC : pushc		129	// , ShowTitleOption, -1 - SAL : 2303
	0x00001F00 : pushc		28	// , ShowTitleOption, -1 - SAL : 2304
	0x00001F04 : pushz		63 ( SelectedObject )	// , ShowTitleOption, -1 - SAL : 2305
	0x00001F08 : mult	// , ShowTitleOption, -1 - SAL : 2306
	0x00001F0A : add	// , ShowTitleOption, -1 - SAL : 2307
	0x00001F0C : pushc		3	// , ShowTitleOption, -1 - SAL : 2308
	0x00001F10 : calls		FillRectEx(71)	// , ShowTitleOption, -1 - SAL : 2309
	0x00001F14 : ret	// , ShowTitleOption, -1 - SAL : 2310
}


FUNCTION : TEST()
{
	0x00001F16 : nop	// , TEST, -1 - SAL : 2504
	0x00001F18 : zsetc		126 ( i of Function TEST )		150	// , TEST, -1 - SAL : 2505
	0x00001F1E : zsetmi		127 ( TempString of Function TEST )		%%41	// , TEST, -1 - SAL : 2506
	0x00001F24 : pushz		66 ( TestCount )	// , TEST, -1 - SAL : 2507
	0x00001F28 : lejp		1800		0x00001F36	// , TEST, -1 - SAL : 2508
	0x00001F30 : zsetc		66 ( TestCount )		0	// , TEST, -1 - SAL : 2509
	0x00001F36 : pushc		2	// , TEST, -1 - SAL : 2510
	0x00001F3A : pushc		79	// , TEST, -1 - SAL : 2511
	0x00001F3E : pushc		3	// , TEST, -1 - SAL : 2512
	0x00001F42 : pushc		0	// , TEST, -1 - SAL : 2513
	0x00001F46 : calls		SetFontType(40)	// , TEST, -1 - SAL : 2514
	0x00001F4A : pushz		125 ( temp of Function TEST )	// , TEST, -1 - SAL : 2515
	0x00001F4E : pushmi		%%42	// , TEST, -1 - SAL : 2516
	0x00001F52 : pushz		66 ( TestCount )	// , TEST, -1 - SAL : 2517
	0x00001F56 : incz		66 ( TestCount )		1	// , TEST, -1 - SAL : 2518
	0x00001F5C : pushz		67 ( NextKey )	// , TEST, -1 - SAL : 2519
	0x00001F60 : pushz		56 ( EventPointer )	// , TEST, -1 - SAL : 2520
	0x00001F64 : calls		MakeStr3(176)	// , TEST, -1 - SAL : 2521
	0x00001F68 : pushc		2	// , TEST, -1 - SAL : 2522
	0x00001F6C : pushc		-30	// , TEST, -1 - SAL : 2523
	0x00001F70 : pushz		66 ( TestCount )	// , TEST, -1 - SAL : 2524
	0x00001F74 : pushc		360	// , TEST, -1 - SAL : 2525
	0x00001F78 : mod	// , TEST, -1 - SAL : 2526
	0x00001F7A : add	// , TEST, -1 - SAL : 2527
	0x00001F7C : pushz		125 ( temp of Function TEST )	// , TEST, -1 - SAL : 2528
	0x00001F80 : calls		DrawStr(85)	// , TEST, -1 - SAL : 2529
	0x00001F84 : pushz		125 ( temp of Function TEST )	// , TEST, -1 - SAL : 2530
	0x00001F88 : pushmi		%%43	// , TEST, -1 - SAL : 2531
	0x00001F8C : pushz		66 ( TestCount )	// , TEST, -1 - SAL : 2532
	0x00001F90 : pushc		700	// , TEST, -1 - SAL : 2533
	0x00001F94 : mod	// , TEST, -1 - SAL : 2534
	0x00001F96 : pushc		100	// , TEST, -1 - SAL : 2535
	0x00001F9A : div	// , TEST, -1 - SAL : 2536
	0x00001F9C : pushz		55 ( SelectedAnswer )	// , TEST, -1 - SAL : 2537
	0x00001FA0 : pushic		60 ( Variable )		0	// , TEST, -1 - SAL : 2538
	0x00001FA6 : calls		MakeStr3(176)	// , TEST, -1 - SAL : 2539
	0x00001FAA : pushc		2	// , TEST, -1 - SAL : 2540
	0x00001FAE : pushc		109	// , TEST, -1 - SAL : 2541
	0x00001FB2 : pushc		3	// , TEST, -1 - SAL : 2542
	0x00001FB6 : pushc		0	// , TEST, -1 - SAL : 2543
	0x00001FBA : calls		SetFontType(40)	// , TEST, -1 - SAL : 2544
	0x00001FBE : pushc		3	// , TEST, -1 - SAL : 2545
	0x00001FC2 : pushc		-10	// , TEST, -1 - SAL : 2546
	0x00001FC6 : pushz		66 ( TestCount )	// , TEST, -1 - SAL : 2547
	0x00001FCA : pushc		360	// , TEST, -1 - SAL : 2548
	0x00001FCE : mod	// , TEST, -1 - SAL : 2549
	0x00001FD0 : add	// , TEST, -1 - SAL : 2550
	0x00001FD2 : pushz		125 ( temp of Function TEST )	// , TEST, -1 - SAL : 2551
	0x00001FD6 : calls		DrawStr(85)	// , TEST, -1 - SAL : 2552
	0x00001FDA : pushz		125 ( temp of Function TEST )	// , TEST, -1 - SAL : 2553
	0x00001FDE : pushmi		%%44	// , TEST, -1 - SAL : 2554
	0x00001FE2 : pushc		1984	// , TEST, -1 - SAL : 2555
	0x00001FE6 : pushc		12	// , TEST, -1 - SAL : 2556
	0x00001FEA : pushc		12	// , TEST, -1 - SAL : 2557
	0x00001FEE : call		0x00000A18	// , TEST, -1 - SAL : 2558
	0x00001FF4 : pushc		2008	// , TEST, -1 - SAL : 2559
	0x00001FF8 : pushc		10	// , TEST, -1 - SAL : 2560
	0x00001FFC : pushc		11	// , TEST, -1 - SAL : 2561
	0x00002000 : call		0x00000A18	// , TEST, -1 - SAL : 2562
	0x00002006 : calls		MakeStr2(175)	// , TEST, -1 - SAL : 2563
	0x0000200A : pushc		2	// , TEST, -1 - SAL : 2564
	0x0000200E : pushc		100	// , TEST, -1 - SAL : 2565
	0x00002012 : pushz		125 ( temp of Function TEST )	// , TEST, -1 - SAL : 2566
	0x00002016 : calls		DrawStr(85)	// , TEST, -1 - SAL : 2567
	0x0000201A : ret	// , TEST, -1 - SAL : 2568
}


FUNCTION : main()
{
	0x0000201C : nop	// , main, -1 - SAL : 2497
	0x0000201E : call		0x00000080	// , main, -1 - SAL : 2498
	0x00002024 : call		0x00000BF0	// , main, -1 - SAL : 2499
	0x0000202A : pushc		20	// , main, -1 - SAL : 2500
	0x0000202E : pushc		1	// , main, -1 - SAL : 2501
	0x00002032 : calls		SetTimer1(150)	// , main, -1 - SAL : 2502
	0x00002036 : end	// , main, -1 - SAL : 2503
}

====================== SYMBOL TABLE =====================

========================================================
			SYMBOL TABLE

--------------------------------------------------------
	  VALID VAR(STATIC) : 0 - ().swData
	  VALID VAR(STATIC) : 1 - ().swData2
	  VALID VAR(STATIC) : 2 - ().swData3
	  VALID VAR(STATIC) : 3 - ().swData4
	  VALID VAR(STATIC) : 4 - ().swWidth
	  VALID VAR(STATIC) : 5 - ().swHeight
	  VALID VAR(STATIC) : 6 - ().swFrame
	  VALID VAR(STATIC) : 7 - ().swFrame2
	  VALID VAR(STATIC) : 8 - ().swFrame3
	  VALID VAR(STATIC) : 9 - ().swFrame6
	  VALID VAR(STATIC) : 10 - ().swVMver
	  VALID VAR(STATIC) : 11 - ().swModel
	  VALID VAR(STATIC) : 12 - ().swSmsRcvBuf
	  VALID VAR(STATIC) : 13 - ().swRsRcvBuf
	  VALID VAR(STATIC) : 14 - ().swRcvBuf
	  VALID VAR(STATIC) : 15 - ().swReserved1
	  VALID VAR(STATIC) : 16 - ().swReserved2
	  VALID VAR(STATIC) : 17 - ().swReserved3
	  VALID VAR(STATIC) : 18 - ().swReserved4
	  VALID VAR(STATIC) : 19 - ().swSbuf
	  VALID VAR(STATIC) : 20 - ().talk_sup
	  VALID VAR(STATIC) : 21 - ().talk_name
	  VALID VAR(STATIC) : 22 - ().talk_ok
	  VALID VAR(STATIC) : 23 - ().talk_main
	  VALID VAR(STATIC) : 24 - ().talk_sub
	  VALID VAR(STATIC) : 25 - ().talk_sel
	  VALID VAR(STATIC) : 26 - ().menu
	  VALID VAR(STATIC) : 27 - ().title_back_title
	  VALID VAR(STATIC) : 28 - ().title_back_menu
	  VALID VAR(STATIC) : 29 - ().title_menu
	  VALID VAR(STATIC) : 30 - ().function_window
	  VALID VAR(STATIC) : 31 - ().function_name
	  VALID VAR(STATIC) : 32 - ().load_saved
	  VALID VAR(STATIC) : 33 - ().load_empty
	  VALID VAR(STATIC) : 34 - ().function_check
	  VALID VAR(STATIC) : 35 - ().function_option
	  VALID VAR(STATIC) : 36 - ().function_load_left
	  VALID VAR(STATIC) : 37 - ().function_load_right
	  VALID VAR(STATIC) : 38 - ().function_ok
	  VALID VAR(STATIC) : 39 - ().function_crl
	  VALID VAR(STATIC) : 40 - ().bg
	  VALID VAR(STATIC) : 41 - ().chara
	  VALID VAR(STATIC) : 42 - ().MONTH
	  VALID VAR(STATIC) : 43 - ().OptionAutoSkip
	  VALID VAR(STATIC) : 44 - ().OptionSpokeSkip
	  VALID VAR(STATIC) : 45 - ().WEATHER
	  VALID VAR(STATIC) : 46 - ().Me
	  VALID VAR(STATIC) : 47 - ().Now
	  VALID VAR(STATIC) : 48 - ().They
	  VALID VAR(STATIC) : 49 - ().Background
	  VALID VAR(STATIC) : 50 - ().BackChara
	  VALID VAR(STATIC) : 51 - ().Names
	  VALID VAR(STATIC) : 52 - ().Messages
	  VALID VAR(STATIC) : 53 - ().SelectMessages
	  VALID VAR(STATIC) : 54 - ().EventLine
	  VALID VAR(STATIC) : 55 - ().SelectedAnswer
	  VALID VAR(STATIC) : 56 - ().EventPointer
	  VALID VAR(STATIC) : 57 - ().CurrentName
	  VALID VAR(STATIC) : 58 - ().NamePosition
	  VALID VAR(STATIC) : 59 - ().EffectFrame
	  VALID VAR(STATIC) : 60 - ().Variable
	  VALID VAR(STATIC) : 61 - ().SelectedTitleMenu
	  VALID VAR(STATIC) : 62 - ().SelectedMenu
	  VALID VAR(STATIC) : 63 - ().SelectedObject
	  VALID VAR(STATIC) : 64 - ().PrologueEventPointer
	  VALID VAR(STATIC) : 65 - ().PrologueEventList
	  VALID VAR(STATIC) : 66 - ().TestCount
	  VALID VAR(STATIC) : 67 - ().NextKey
	  VALID VAR(STATIC) : 68 - ().GameMode
	  VALID VAR(STATIC) : 69 - GetTotalDay().Year
	  VALID VAR(STATIC) : 70 - GetTotalDay().Month
	  VALID VAR(STATIC) : 71 - GetTotalDay().Day
	  VALID VAR(STATIC) : 72 - GetTotalDay().Total
	  VALID VAR(STATIC) : 73 - GetTotalDay().i
	  VALID VAR(STATIC) : 74 - GetWeek().Year
	  VALID VAR(STATIC) : 75 - GetWeek().Month
	  VALID VAR(STATIC) : 76 - GetWeek().Day
	  VALID VAR(STATIC) : 77 - ScreenEffect().Type
	  VALID VAR(STATIC) : 78 - ScreenEffect().Count
	  VALID VAR(STATIC) : 79 - ScreenEffect().Imgnum
	  VALID VAR(STATIC) : 80 - ShadowText().j
	  VALID VAR(STATIC) : 81 - ShadowText().i
	  VALID VAR(STATIC) : 82 - ShadowText().z
	  VALID VAR(STATIC) : 83 - ShadowText().sc
	  VALID VAR(STATIC) : 84 - ShadowText().tc
	  VALID VAR(STATIC) : 85 - ShadowText().TempString
	  VALID VAR(STATIC) : 86 - DrawBackground().i
	  VALID VAR(STATIC) : 87 - DrawBackground().temp
	  VALID VAR(STATIC) : 88 - DrawInterface().TempString
	  VALID VAR(STATIC) : 89 - DrawMessages().MessageNumber
	  VALID VAR(STATIC) : 90 - DrawMessages().TempString
	  VALID VAR(STATIC) : 91 - DrawMessages().Length
	  VALID VAR(STATIC) : 92 - DrawMessages().i
	  VALID VAR(STATIC) : 93 - DrawMessages().PosNameY
	  VALID VAR(STATIC) : 94 - DrawQuestion().Value
	  VALID VAR(STATIC) : 95 - DrawQuestion().MsgCount
	  VALID VAR(STATIC) : 96 - DrawQuestion().Select1
	  VALID VAR(STATIC) : 97 - DrawQuestion().Select2
	  VALID VAR(STATIC) : 98 - DrawQuestion().Select3
	  VALID VAR(STATIC) : 99 - DrawQuestion().Select4
	  VALID VAR(STATIC) : 100 - DrawQuestion().i
	  VALID VAR(STATIC) : 101 - DrawQuestion().Temp
	  VALID VAR(STATIC) : 102 - SetCurrentName().NameNumber
	  VALID VAR(STATIC) : 103 - SetCurrentName().Position
	  VALID VAR(STATIC) : 104 - IfEqual().Value1
	  VALID VAR(STATIC) : 105 - IfEqual().Value2
	  VALID VAR(STATIC) : 106 - IfEqual().ElseCount
	  VALID VAR(STATIC) : 107 - ElseEqual().Value1
	  VALID VAR(STATIC) : 108 - ElseEqual().Value2
	  VALID VAR(STATIC) : 109 - ElseEqual().IfCount
	  VALID VAR(STATIC) : 110 - SetBackground().Layer
	  VALID VAR(STATIC) : 111 - SetBackground().ImageNumber
	  VALID VAR(STATIC) : 112 - SetBackground().Effect
	  VALID VAR(STATIC) : 113 - SetChara().Layer
	  VALID VAR(STATIC) : 114 - SetChara().ImageNumber
	  VALID VAR(STATIC) : 115 - SetDate().Year
	  VALID VAR(STATIC) : 116 - SetDate().Month
	  VALID VAR(STATIC) : 117 - SetDate().Day
	  VALID VAR(STATIC) : 118 - SetTime().Hour
	  VALID VAR(STATIC) : 119 - SetTime().Minute
	  VALID VAR(STATIC) : 120 - SetWeather().Weather
	  VALID VAR(STATIC) : 121 - PassTime().Element
	  VALID VAR(STATIC) : 122 - PassTime().Count
	  VALID VAR(STATIC) : 123 - PassTime().TempCount
	  VALID VAR(STATIC) : 124 - ShowTitleContinue().i
	  VALID VAR(STATIC) : 125 - TEST().temp
	  VALID VAR(STATIC) : 126 - TEST().i
	  VALID VAR(STATIC) : 127 - TEST().TempString
	  VALID VAR(STATIC) : 128 - ChangeGameMode().Mode
========================================================

============================== SYMBOL POOL ==============================
0  th SYMBOL POOL[0x00002444] : Real Offset 0x00002440
1  th SYMBOL POOL[0x00002448] : Real Offset 0x00002444
2  th SYMBOL POOL[0x0000244C] : Real Offset 0x00002448
3  th SYMBOL POOL[0x00002450] : Real Offset 0x0000244C
4  th SYMBOL POOL[0x00002454] : Real Offset 0x00002450
5  th SYMBOL POOL[0x00002458] : Real Offset 0x00002454
6  th SYMBOL POOL[0x0000245C] : Real Offset 0x00002458
7  th SYMBOL POOL[0x00002460] : Real Offset 0x0000245C
8  th SYMBOL POOL[0x00002464] : Real Offset 0x00002460
9  th SYMBOL POOL[0x00002468] : Real Offset 0x00002464
10 th SYMBOL POOL[0x0000246C] : Real Offset 0x00002468
11 th SYMBOL POOL[0x00002478] : Real Offset 0x00002474
12 th SYMBOL POOL[0x00002498] : Real Offset 0x00002494
13 th SYMBOL POOL[0x0000253C] : Real Offset 0x00002538
14 th SYMBOL POOL[0x0000273C] : Real Offset 0x00002738
15 th SYMBOL POOL[0x00002B3C] : Real Offset 0x00002B38
16 th SYMBOL POOL[0x00002B40] : Real Offset 0x00002B3C
17 th SYMBOL POOL[0x00002B44] : Real Offset 0x00002B40
18 th SYMBOL POOL[0x00002B48] : Real Offset 0x00002B44
19 th SYMBOL POOL[0x00002B4C] : Real Offset 0x00002B48
20 th SYMBOL POOL[0x00002B50] : Real Offset 0x00002B4C
21 th SYMBOL POOL[0x00002B54] : Real Offset 0x00002B50
22 th SYMBOL POOL[0x00002B58] : Real Offset 0x00002B54
23 th SYMBOL POOL[0x00002B5C] : Real Offset 0x00002B58
24 th SYMBOL POOL[0x00002B60] : Real Offset 0x00002B5C
25 th SYMBOL POOL[0x00002B64] : Real Offset 0x00002B60
26 th SYMBOL POOL[0x00002B68] : Real Offset 0x00002B64
27 th SYMBOL POOL[0x00002B6C] : Real Offset 0x00002B68
28 th SYMBOL POOL[0x00002B70] : Real Offset 0x00002B6C
29 th SYMBOL POOL[0x00002B74] : Real Offset 0x00002B70
30 th SYMBOL POOL[0x00002B88] : Real Offset 0x00002B84
31 th SYMBOL POOL[0x00002B8C] : Real Offset 0x00002B88
32 th SYMBOL POOL[0x00002B98] : Real Offset 0x00002B94
33 th SYMBOL POOL[0x00002B9C] : Real Offset 0x00002B98
34 th SYMBOL POOL[0x00002BA0] : Real Offset 0x00002B9C
35 th SYMBOL POOL[0x00002BA4] : Real Offset 0x00002BA0
36 th SYMBOL POOL[0x00002BA8] : Real Offset 0x00002BA4
37 th SYMBOL POOL[0x00002BAC] : Real Offset 0x00002BA8
38 th SYMBOL POOL[0x00002BB0] : Real Offset 0x00002BAC
39 th SYMBOL POOL[0x00002BB4] : Real Offset 0x00002BB0
40 th SYMBOL POOL[0x00002BB8] : Real Offset 0x00002BB4
41 th SYMBOL POOL[0x00002BCC] : Real Offset 0x00002BC8
42 th SYMBOL POOL[0x00002BD4] : Real Offset 0x00002BD0
43 th SYMBOL POOL[0x00002C04] : Real Offset 0x00002C00
44 th SYMBOL POOL[0x00002C08] : Real Offset 0x00002C04
45 th SYMBOL POOL[0x00002C0C] : Real Offset 0x00002C08
46 th SYMBOL POOL[0x00002C20] : Real Offset 0x00002C1C
47 th SYMBOL POOL[0x00002C28] : Real Offset 0x00002C24
48 th SYMBOL POOL[0x00002C44] : Real Offset 0x00002C40
49 th SYMBOL POOL[0x00002C5C] : Real Offset 0x00002C58
50 th SYMBOL POOL[0x00002C64] : Real Offset 0x00002C60
51 th SYMBOL POOL[0x00002C70] : Real Offset 0x00002C6C
52 th SYMBOL POOL[0x00002C84] : Real Offset 0x00002C80
53 th SYMBOL POOL[0x00002CD0] : Real Offset 0x00002CCC
54 th SYMBOL POOL[0x00002CE0] : Real Offset 0x00002CDC
55 th SYMBOL POOL[0x00002E9C] : Real Offset 0x00002E98
56 th SYMBOL POOL[0x00002EA0] : Real Offset 0x00002E9C
57 th SYMBOL POOL[0x00002EA4] : Real Offset 0x00002EA0
58 th SYMBOL POOL[0x00002EA8] : Real Offset 0x00002EA4
59 th SYMBOL POOL[0x00002EAC] : Real Offset 0x00002EA8
60 th SYMBOL POOL[0x00002EB0] : Real Offset 0x00002EAC
61 th SYMBOL POOL[0x00002F78] : Real Offset 0x00002F74
62 th SYMBOL POOL[0x00002F7C] : Real Offset 0x00002F78
63 th SYMBOL POOL[0x00002F80] : Real Offset 0x00002F7C
64 th SYMBOL POOL[0x00002F84] : Real Offset 0x00002F80
65 th SYMBOL POOL[0x00002F88] : Real Offset 0x00002F84
66 th SYMBOL POOL[0x00002FCC] : Real Offset 0x00002FC8
67 th SYMBOL POOL[0x00002FD0] : Real Offset 0x00002FCC
68 th SYMBOL POOL[0x00002FD4] : Real Offset 0x00002FD0
69 th SYMBOL POOL[0x00002FD8] : Real Offset 0x00002FD4
70 th SYMBOL POOL[0x00002FDC] : Real Offset 0x00002FD8
71 th SYMBOL POOL[0x00002FE0] : Real Offset 0x00002FDC
72 th SYMBOL POOL[0x00002FE4] : Real Offset 0x00002FE0
73 th SYMBOL POOL[0x00002FE8] : Real Offset 0x00002FE4
74 th SYMBOL POOL[0x00002FEC] : Real Offset 0x00002FE8
75 th SYMBOL POOL[0x00002FF0] : Real Offset 0x00002FEC
76 th SYMBOL POOL[0x00002FF4] : Real Offset 0x00002FF0
77 th SYMBOL POOL[0x00002FF8] : Real Offset 0x00002FF4
78 th SYMBOL POOL[0x00002FFC] : Real Offset 0x00002FF8
79 th SYMBOL POOL[0x00003000] : Real Offset 0x00002FFC
80 th SYMBOL POOL[0x00003004] : Real Offset 0x00003000
81 th SYMBOL POOL[0x00003008] : Real Offset 0x00003004
82 th SYMBOL POOL[0x0000300C] : Real Offset 0x00003008
83 th SYMBOL POOL[0x00003010] : Real Offset 0x0000300C
84 th SYMBOL POOL[0x00003014] : Real Offset 0x00003010
85 th SYMBOL POOL[0x00003018] : Real Offset 0x00003014
86 th SYMBOL POOL[0x0000301C] : Real Offset 0x00003018
87 th SYMBOL POOL[0x00003020] : Real Offset 0x0000301C
88 th SYMBOL POOL[0x00003024] : Real Offset 0x00003020
89 th SYMBOL POOL[0x00003028] : Real Offset 0x00003024
90 th SYMBOL POOL[0x0000302C] : Real Offset 0x00003028
91 th SYMBOL POOL[0x00003030] : Real Offset 0x0000302C
92 th SYMBOL POOL[0x00003034] : Real Offset 0x00003030
93 th SYMBOL POOL[0x00003038] : Real Offset 0x00003034
94 th SYMBOL POOL[0x0000303C] : Real Offset 0x00003038
95 th SYMBOL POOL[0x00003040] : Real Offset 0x0000303C
96 th SYMBOL POOL[0x00003044] : Real Offset 0x00003040
97 th SYMBOL POOL[0x00003048] : Real Offset 0x00003044
98 th SYMBOL POOL[0x0000304C] : Real Offset 0x00003048
99 th SYMBOL POOL[0x00003050] : Real Offset 0x0000304C
100th SYMBOL POOL[0x00003054] : Real Offset 0x00003050
101th SYMBOL POOL[0x00003058] : Real Offset 0x00003054
102th SYMBOL POOL[0x0000305C] : Real Offset 0x00003058
103th SYMBOL POOL[0x00003060] : Real Offset 0x0000305C
104th SYMBOL POOL[0x00003064] : Real Offset 0x00003060
105th SYMBOL POOL[0x00003068] : Real Offset 0x00003064
106th SYMBOL POOL[0x0000306C] : Real Offset 0x00003068
107th SYMBOL POOL[0x00003070] : Real Offset 0x0000306C
108th SYMBOL POOL[0x00003074] : Real Offset 0x00003070
109th SYMBOL POOL[0x00003078] : Real Offset 0x00003074
110th SYMBOL POOL[0x0000307C] : Real Offset 0x00003078
111th SYMBOL POOL[0x00003080] : Real Offset 0x0000307C
112th SYMBOL POOL[0x00003084] : Real Offset 0x00003080
113th SYMBOL POOL[0x00003088] : Real Offset 0x00003084
114th SYMBOL POOL[0x0000308C] : Real Offset 0x00003088
115th SYMBOL POOL[0x00003090] : Real Offset 0x0000308C
116th SYMBOL POOL[0x00003094] : Real Offset 0x00003090
117th SYMBOL POOL[0x00003098] : Real Offset 0x00003094
118th SYMBOL POOL[0x0000309C] : Real Offset 0x00003098
119th SYMBOL POOL[0x000030A0] : Real Offset 0x0000309C
120th SYMBOL POOL[0x000030A4] : Real Offset 0x000030A0
121th SYMBOL POOL[0x000030A8] : Real Offset 0x000030A4
122th SYMBOL POOL[0x000030AC] : Real Offset 0x000030A8
123th SYMBOL POOL[0x000030B0] : Real Offset 0x000030AC
124th SYMBOL POOL[0x000030B4] : Real Offset 0x000030B0
125th SYMBOL POOL[0x000030B8] : Real Offset 0x000030B4
126th SYMBOL POOL[0x000030BC] : Real Offset 0x000030B8
127th SYMBOL POOL[0x000030C0] : Real Offset 0x000030BC
128th SYMBOL POOL[0x000030C4] : Real Offset 0x000030C0
